<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[牛牛龙]]></title>
  <link href="http://yulongniu.bionutshell.org/atom.xml" rel="self"/>
  <link href="http://yulongniu.bionutshell.org/"/>
  <updated>2015-12-08T14:47:16+08:00</updated>
  <id>http://yulongniu.bionutshell.org/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[XML中XPath规则总结]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/10/25/xpath-xml/"/>
    <updated>2015-10-25T19:05:33+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/10/25/xpath-xml</id>
    <content type="html"><![CDATA[<p><a href="http://www.w3.org/TR/xpath-30/">XPath</a>提供了一种对XML节点、节点属性和内容快速查询的规则。在各种编程语言中都有实现，比如C语言的<a href="http://www.xmlsoft.org/">libxml2</a>和对应的R包 <a href="https://cran.r-project.org/web/packages/xml2/index.html">xml2</a>。</p>

<h2 id="section">1. 查询规则</h2>

<p>XPath查询集中在三个对象：节点、节点属性和节点内容。</p>

<h3 id="section-1">1.1 选择节点</h3>

<ul>
  <li>
    <p><code>/nodeA/nodeB</code>：nodeA为根节点，nodeA下的所有nodeB节点；等价于<code>nodeB</code>。</p>
  </li>
  <li>
    <p><code>//nodeB</code>：所有nodeB节点，在R包xml2中（比如函数<code class="language-bash">xml_find_all()</code>），<code>//nodeB</code>搜索范围是整个文档，忽略当前节点；而<code>.//nodeB</code>搜索范围是当前节点之下。</p>
  </li>
</ul>

<!--more-->

<ul>
  <li>
    <p><code>//nodeB[1]</code>：所有nodeB节点的第一个；<code>//nodeB[last()-1]</code>：所有nodeB节点的倒数第二个；<code>nodeA/nodeB[position()&lt;3]</code>:当前nodeA节点，其下所有nodeB子节点的前两个。</p>
  </li>
  <li>
    <p><code>/nodeA/*</code>：nodeA为根节点，nodeA下的所有节点；<code>/*/*/nodeC</code>：所有拥有两个父节点的nodeC节点；<code>//*</code>：所有节点。</p>
  </li>
  <li>
    <p><code>//*[count(nodeD)=3]</code>：含有3个nodeD子节点的节点；<code>//*[count(*)=2]</code>：含有任意2个子节点的节点。</p>
  </li>
  <li>
    <p><code>//*[name()='nodeB']</code>：所有名称为“nodeB”的节点，等价于<code>//nodeB</code>；<code>//*[starts-with(name(),'N')]</code>：所有名称以“N”开头的节点；<code>//*[contains(name(),'N')]</code>：所有名称中含有“N”的节点；<code>//*[string-length(name()) = 3]</code>：所有名称的字符串长度等于3的节点。</p>
  </li>
  <li>
    <p><code>//nodeA | //nodeB</code>：所有nodeA，以及nodeB的节点，多个搜索条件合并，搜索添加没有限制。</p>
  </li>
</ul>

<h3 id="section-2">1.2 选择节点属性</h3>

<ul>
  <li>
    <p><code>//@attr1</code>：所有拥有attr1的<strong>属性</strong>，注意：返回的不是节点，而是类此<code>attr1=text1</code>的属性；<code>//node1/@attr1</code>：所有node1带有的attr1属性；<code>//nodeB[@attr1]</code>：所有拥有“attr1”属性的nodeB节点；<code>//nodeB[@attr1='test1']</code>：所有拥有“attr1”属性为“test1”的nodeB节点；<code>//nodeB[normalize-space(@attr1)='test1']</code>：所有拥有attr1属性为“test1”（属性去除字符串前后空格，内部连续空格替换为一个空格）的nodeB节点。</p>
  </li>
  <li>
    <p><code>//node1[@*]</code>：所有node1带有任意属性的节点；<code>//node1[not(@*)]</code>：所有node1不带属性的节点。</p>
  </li>
  <li>
    <p><code>//node1[TEST1][TEST2]</code>：多个属性形选择可以首位相接，依次判断是否为真。TEST1和TEST2同时为真，返回选择结果。<code>//nodeA[nodeB/@attr1='test1']</code>：选择所有nodeA节点，这些nodeA节点拥有nodeB子节点且属性“attr1”为“test1”。<code>//nodeC[@attr1='test1'][../nodeB/@attr2='test2']</code>：选择所有拥有“attr1”为“test1”的nodeC节点，而且这些nodeC节点有属性“attr2”为“test2”的nodeB父亲节点。</p>
  </li>
</ul>

<h3 id="section-3">1.3 选择节点内容</h3>

<ul>
  <li>
    <p><code>/nodeA/nodeB[nodeC&gt;5]</code>：nodeA为根节点，nodeA下的nodeB节点，而且这些nodeB节点必须有nodeC子节点，并且nodeC子节点内容大于5。</p>
  </li>
  <li>
    <p><code>/nodeA/nodeB[nodeC&gt;5]/nodeD</code>：nodeA为根节点，nodeA下的nodeB节点，而且这些nodeB节点必须有nodeC子节点，并且nodeC子节点内容大于5。</p>
  </li>
  <li>
    <p><code>//nodeC[.=5]</code>：所有nodeC节点，其内容等于5。使用<code>.</code>代替自身。</p>
  </li>
  <li>
    <p><code>//nodeC/node()</code>：选择所有nodeC节点下的所有点，包括节点下内容和子节点（距离最近，不包括子节点的子节点）。</p>
  </li>
  <li>
    <p><code>//nodeC/text()</code>：选择所有nodeC节点下的内容。</p>
  </li>
</ul>

<h3 id="section-4">1.4 函数使用</h3>

<ul>
  <li><code>//nodeC[contains(text(), 'test1')]</code>：选择所有nodeC节点，而且nodeC节点下内容包括“test1”。</li>
</ul>

<h2 id="section-5">2. 轴</h2>

<ul>
  <li>
    <p><code>child::</code>：默认轴，可以省略。比如<code>/child::nodeA</code>等价于<code>/AAA</code>。</p>
  </li>
  <li>
    <p><code>descendant::</code>：选择上下文节点的所有子节点、子节点的子节点、子节点的子节点的子节点（依次类推，直至最后一个子节点）。<code>//nodeA/descendant::*</code>：所有nodeA节点的所有子节点、子节点的子节点等等；<code>//nodeA/descendant::nodeC</code>：所有nodeA节点的所有的nodeC子节点，nodeC可能是nodeA的某个子节点的子节点，区别与<code>//nodeA/nodeD</code>；<code>/descendant::*</code>：文档所有子节点、子节点的子节点等等，等价于<code>//*</code>。</p>
  </li>
  <li>
    <p><code>descendant-or-self::*</code>：选择上下文节点自身及其所有子节点、子节点的子节点（依次类推，直至最后一个子节点）。</p>
  </li>
  <li>
    <p><code>parent::</code>：选择上下文节点的父节点（最靠近的父节点）。<code>//nodeC/parent::*</code>：所有nodeC节点的所有父节点；<code>//nodeC/parent::nodeA[@attr1='test1']</code>：nodeC节点的nodeA父节点，这些nodeA父节点的“attr1”属性等于“test1”。</p>
  </li>
  <li>
    <p><code>ancestor::</code>：选择上下文节点的父节点，父节点的父节点（依次类推，直至最前一个父节点，包括根节点）。<code>//nodeC/ancestor::nodeA</code>：所有nodeC的父节点和父节点的父节点等等中的nodeA节点。</p>
  </li>
  <li>
    <p><code>ancestor-or-self::</code>：：选择上下文节点自身及其所有父节点，父节点的父节点（依次类推，直至最前一个父节点，包括根节点）。</p>
  </li>
  <li>
    <p><code>following-sibling::</code>：选择与上下文节点等级相同（即深度相同）的且位置靠后（上为前，下为后）的兄弟节点。<code>//nodeC/following-sibling::*</code>：所有nodeC节点等级相同的且位置靠后的兄弟节点。</p>
  </li>
  <li>
    <p><code>preceding-sibling::</code>：同<code>following-sibling::</code>，也是兄弟节点但位置靠前。</p>
  </li>
  <li>
    <p><code>following::</code>：选择上下文节点之后的所有节点（包括对应的子节点），但除了根节点。<code>//nodeC/following::*</code>：所有nodeC节点之后的所有节点。</p>
  </li>
  <li>
    <p><code>preceding::</code>：选择上下文节点之前的所有节点（包括对应的子节点），但除了根节点。</p>
  </li>
  <li>
    <p><code>//nodeC/ancestor::* | //nodeC/descendant::* | //nodeC/following::* | //nodeC/preceding::* | //nodeC/self::*</code>：所有节点，等价于<code>//*</code>或者等价于<code>/descendant::*</code>。</p>
  </li>
</ul>

<h2 id="section-6">参考网址</h2>

<ul>
  <li>
    <p><a href="https://zh.wikipedia.org/wiki/XPath">维基百科对XPath介绍</a></p>
  </li>
  <li>
    <p><a href="http://www.zvon.org/xxl/XPathTutorial/General_chi/examples.html">zvon中XPath的有趣例子</a></p>
  </li>
  <li>
    <p><a href="http://www.w3school.com.cn/xpath/index.asp">w3school的XPath中文教程</a></p>
  </li>
  <li>
    <p><a href="http://xccds1977.blogspot.sg/2013/02/xmlxpath.html">博文《XML和XPath使用方法备忘》</a></p>
  </li>
</ul>

<h3 id="section-7">更新记录</h3>

<p>2015年10月24日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spacemacs使用记录]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/09/30/spacemacs-tutorial/"/>
    <updated>2015-09-30T16:31:09+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/09/30/spacemacs-tutorial</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/syl20bnr/spacemacs">Spacemacs</a>结合了Vim和Emacs，而且定制了各种好用的设置，极大地减轻了Emacs的配置负担。推荐使用<code>hybrid</code>模式，这样浏览代码时可以使用Vim快捷键，进入Insert mode后使用Emacs快捷键。<code>hybrid</code>模式还有一个好处，编辑时方便汉字输入。</p>

<!--more-->

<h2 id="vim">1. Vim快捷键记录</h2>

<p>在Spacemacs中<code>SPC-h-T</code>进入Emacs Evil快速入门。</p>

<h3 id="section">1.1 移动</h3>

<ul>
  <li>
    <p><code>h</code>：前</p>
  </li>
  <li>
    <p><code>j</code>：上</p>
  </li>
  <li>
    <p><code>k</code>：下</p>
  </li>
  <li>
    <p><code>l</code>：后</p>
  </li>
  <li>
    <p><code>gg</code>：</p>

    <ul>
      <li>
        <p>文档开始位置。</p>
      </li>
      <li>
        <p><code>G</code>：文档结束位置。</p>
      </li>
      <li>
        <p><code>:[number]</code>：跳转到制定行。</p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="section-1">1.2 插入和替换</h3>

<ul>
  <li>
    <p><code>i</code>：</p>

    <ul>
      <li>
        <p>在<strong>光标前</strong>的位置，进入insert mode，进行编辑。</p>
      </li>
      <li>
        <p><code>ESC</code>或者<code>C-[</code>退出insert mode。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>r</code>：替换<strong>光标所在位置</strong>的单个字符。</p>
  </li>
  <li>
    <p><code>[number] d object</code>：</p>

    <ul>
      <li>
        <p><code>cw</code>或<code>ce</code>：从光标处删除整个单词，并进入insert mode。</p>
      </li>
      <li>
        <p><code>c$</code>：从光标处删除整行，并进入insert mode。</p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="section-2">1.3 搜索和替换</h3>

<ul>
  <li>
    <p><code>\</code>：</p>

    <ul>
      <li>
        <p><code>\searchWord</code>：输入搜索内容，<code>n</code>向下搜索，<code>N</code>向上搜索。</p>
      </li>
      <li>
        <p><code>%</code>：在各种括号跳转。</p>
      </li>
      <li>
        <p><code>:s/old/new</code>：替换第一个匹配；<code>:s/old/new/g</code>：替换当前行匹配；<code>:#,#s/old/new/g</code>：替换行（<code>#</code>为行号）之间匹配；<code>:%s/old/new/g </code>：替换全文匹配。</p>
      </li>
      <li>
        <p><code>:%s/old/new/gc</code>：替换全文匹配，每一个匹配会提示是否匹配（输入<code>y</code>表示执行替换，<code>n</code>表示跳过匹配）。</p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="section-3">1.4 删除、剪切和粘贴</h3>

<ul>
  <li>
    <p><code>x</code>：删除<strong>光标所在位置</strong>的单个字符。</p>
  </li>
  <li>
    <p><code>[number] d object</code>：</p>

    <ul>
      <li>
        <p><code>dw</code>：从光标处删除整个单词，包括单词后的空格。</p>
      </li>
      <li>
        <p><code>de</code>：从光标处删除整个单词，不包括空格。</p>
      </li>
      <li>
        <p><code>d$</code>：从光标处删除整行。</p>
      </li>
      <li>
        <p><code>dd</code>：删除光标所在的整行。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>p</code>：在<strong>光标后</strong>的位置粘贴剪切（<code>d</code>类和<code>x</code>操作）的内容。</p>
  </li>
</ul>

<h3 id="section-4">1.5 撤销</h3>

<ul>
  <li>
    <p><code>u</code>：撤销</p>
  </li>
  <li>
    <p><code>Ctr-R</code>：反撤销</p>
  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostgreSQL使用指南]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/07/29/postgresql-usage/"/>
    <updated>2015-07-29T18:24:10+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/07/29/postgresql-usage</id>
    <content type="html"><![CDATA[<h2 id="section">1. 查询</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Query </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="psql"><span class="line"><span class="c1">-- 选取特定的一列或者多列</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 选取全部列</span>
</span><span class="line"><span class="k">SELECT</span> <span class="o">*</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 去除重复，选取一列或多列中唯一元素</span>
</span><span class="line"><span class="c1">-- 如输入多列，则去除多列组合后的重复</span>
</span><span class="line"><span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 指定输出列数</span>
</span><span class="line"><span class="c1">-- a是输出行数，b是输出起始行（第一行计为0）</span>
</span><span class="line"><span class="k">SELECT</span> <span class="k">column</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">LIMIT</span> <span class="n">a</span> <span class="k">OFFSET</span> <span class="n">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<ul>
  <li>
    <p>使用<code class="language-bash">;</code>结束一条SQL语句，本文中省略；</p>
  </li>
  <li>
    <p>返回未排序数据；</p>
  </li>
</ul>

<h2 id="section-1">2. 排序</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Ordering </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="psql"><span class="line"><span class="c1">-- 按照一列或者多列升序排序</span>
</span><span class="line"><span class="c1">-- 可以按照“不查询”的列排序</span>
</span><span class="line"><span class="c1">-- 先按照column2排，再按照column5排</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span><span class="p">,</span> <span class="n">column3</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">column2</span><span class="p">,</span> <span class="n">column5</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 降序</span>
</span><span class="line"><span class="c1">-- DESC只作用于最靠近的唯一一列，即column2，不作用于column5</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span><span class="p">,</span> <span class="n">column3</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">column2</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">column5</span>
</span><span class="line">
</span><span class="line"><span class="c1">--使用查询列相对编号</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span><span class="p">,</span> <span class="n">column3</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="mf">2</span><span class="p">,</span> <span class="n">column5</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>使用相对列查询时，不查询的列，比如上述例子的column5，不能用数字代替。</p>
  </li>
  <li>
    <p>使用相对列查询有风险，不采用。</p>
  </li>
  <li>
    <p>升序关键字为<code class="language-psql">ASC</code>，通常升序为默认。</p>
  </li>
  <li>
    <p><code class="language-psql">ORDER BY</code>必须在制定列和数据集后出现。</p>
  </li>
</ul>

<h2 id="section-2">3. 筛选</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Filter </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
</pre></td><td class="code"><pre><code class="psql"><span class="line"><span class="c1">-- ORDER BY语句需要在WHERE之后</span>
</span><span class="line"><span class="c1">-- AND表示“且”， OR表示“或”，第一个条件满足即终止</span>
</span><span class="line"><span class="c1">-- AND和OR可有任意多个</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="p">(</span><span class="n">column3</span> <span class="o">=</span> <span class="n">a</span> <span class="k">OR</span> <span class="n">column3</span> <span class="o">=</span> <span class="n">b</span><span class="p">)</span> <span class="k">AND</span> <span class="n">column1</span> <span class="o">=</span> <span class="n">c</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">column3</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 多个OR语句使用IN代替，比如上述例子为：</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column3</span> <span class="k">IN</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="k">AND</span> <span class="n">column1</span> <span class="o">=</span> <span class="n">c</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">column3</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- NOT与IN连用</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column3</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- BETWEEN a AND b语句，a必须小于等于b</span>
</span><span class="line"><span class="c1">-- 如a等于b，则相当于筛选与a（或者b）相等数值</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column1</span> <span class="k">BETWEEN</span> <span class="n">a</span> <span class="k">AND</span> <span class="n">b</span>
</span><span class="line">
</span><span class="line"><span class="c1">--筛选NULL值使用IS NULL</span>
</span><span class="line"><span class="c1">--筛选非NULL值使用IS NOT NULL</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column1</span> <span class="k">IS</span> <span class="k">NULL</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p><a href="http://www.postgresql.org/docs/9.4/static/functions-comparison.html#FUNCTIONS-COMPARISON-TABLE">PostgreSQL支持的比较符</a>：<code class="language-psql">&lt;</code>、<code class="language-psql">&lt;=</code>、<code class="language-psql">&gt;</code>、<code class="language-psql">&gt;=</code>、<code class="language-psql">=</code>和<code class="language-psql">!=</code>（“不等于”也可以表示为<code class="language-psql">&lt;&gt;</code>）。</p>
  </li>
  <li>
    <p>筛选字符串条件，需要对筛选串加引号，比如例子中<code class="language-psql">a</code>为<code class="language-psql">"testStr"</code>。</p>
  </li>
  <li>
    <p>合理使用括号，强制规定<code class="language-psql">AND</code>和<code class="language-psql">OR</code>先后顺序。</p>
  </li>
  <li>
    <p><code class="language-psql">IN</code>语句执行效率高，并且可以嵌套多层<code class="language-psql">SELECT</code>语句（每个<code class="language-psql">SELECT</code>只返回一列数据）。</p>
  </li>
  <li>
    <p>尽量在数据库查询过程，而非自己后续手写，完成数据筛选，因为：1. SQL数据库操作通常比自己手写效率高；2. 便于后续扩展。</p>
  </li>
</ul>

<h2 id="section-3">4. 模式匹配</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Pattern Matching </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="psql"><span class="line"><span class="c1">-- LIKE和NOT LIKE支持对字符串的模式匹配</span>
</span><span class="line"><span class="c1">-- “_”匹配单一一个字符</span>
</span><span class="line"><span class="c1">-- “%”匹配0个或多个字符</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column1</span> <span class="k">LIKE</span> <span class="s1">&#39;F_y%&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- SIMILAR TO和NOT SIMILAR TO支持正则匹配</span>
</span><span class="line"><span class="c1">-- 正则匹配中，仍然使用“_”和“%”</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column1</span> <span class="k">SIMILAR</span> <span class="k">TO</span> <span class="s1">&#39;[^JM]%&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>PostgreSQL支持<code class="language-psql">ILIKE</code>和<code class="language-psql">NOT ILIKE</code>忽略大小写敏感搜索，这不是标准SQL语法。</p>
  </li>
  <li>
    <p>注意数据库自动补充的空格，比如 <code class="language-psql">'F_y'</code>只能匹配“F开头-间隔一个字符-y结尾”的字符串，如果字符串后跟有空格，则不能匹配。</p>
  </li>
  <li>
    <p><a href="http://www.postgresql.org/docs/9.4/static/functions-matching.html">PostgreSQL支持的通配符</a></p>
  </li>
  <li>
    <p>模式匹配效率不高，尽量后置，不要过度使用。</p>
  </li>
</ul>

<h2 id="section-4">5. 函数</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Function </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
</pre></td><td class="code"><pre><code class="psql"><span class="line"><span class="c1">--数学计算</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span> <span class="o">*</span> <span class="n">column3</span> <span class="k">AS</span> <span class="n">newName</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 字符串连接</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">RTRIM</span><span class="p">(</span><span class="n">column1</span><span class="p">)</span> <span class="o">||</span> <span class="s1">&#39; (&#39;</span> <span class="o">||</span> <span class="n">RTRIM</span><span class="p">(</span><span class="n">column1</span><span class="p">)</span> <span class="o">||</span> <span class="s1">&#39;)&#39;</span> <span class="k">AS</span> <span class="n">newName</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">column1</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 使用函数</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">UPPER</span><span class="p">(</span><span class="n">column2</span><span class="p">)</span> <span class="k">AS</span> <span class="n">newName</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 筛选日期</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">columnDate</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">DATE_PART</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">columnDate</span><span class="p">)</span> <span class="o">=</span> <span class="mf">2015</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- 汇总数据</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">AVG</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">column1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">newName1</span><span class="p">,</span>
</span><span class="line">       <span class="n">SUM</span><span class="p">(</span><span class="n">column2</span><span class="p">)</span> <span class="k">AS</span> <span class="n">newName2</span><span class="p">,</span>
</span><span class="line">       <span class="n">MAX</span><span class="p">(</span><span class="n">column3</span><span class="p">)</span> <span class="k">AS</span> <span class="n">newName3</span><span class="p">,</span>
</span><span class="line">       <span class="n">MIN</span><span class="p">(</span><span class="n">column4</span><span class="p">)</span> <span class="k">AS</span> <span class="n">newName4</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">Products</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">vend_id</span> <span class="o">=</span> <span class="s1">&#39;DLL01&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>使用<code class="language-psql">AS</code>及时命名新列。</p>
  </li>
  <li>
    <p>支持数字列的运算有<code class="language-psql">+</code>、<code class="language-psql">-</code>、<code class="language-psql">*</code>和<code class="language-psql">/</code>，更多操作参考<a href="http://www.postgresql.org/docs/9.4/static/functions-math.html">PostgreSQL支持的数值操作</a>。</p>
  </li>
  <li>
    <p>为了移植性考虑，如果使用数据库内置函数，需要对代码相应部分添加详细注释。</p>
  </li>
</ul>

<h2 id="section-5">6. 分组</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Group </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="psql"><span class="line"><span class="c1">-- 分组的意思是对一列或者多列数据归总</span>
</span><span class="line"><span class="k">SELECT</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span><span class="p">,</span> <span class="n">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">AS</span> <span class="n">newName</span>
</span><span class="line"><span class="k">FROM</span> <span class="n">dataset</span>
</span><span class="line"><span class="k">WHERE</span> <span class="n">column4</span> <span class="o">&gt;</span> <span class="mf">3</span>
</span><span class="line"><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">column1</span><span class="p">,</span> <span class="n">column2</span>
</span><span class="line"><span class="k">HAVING</span> <span class="n">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mf">1</span>
</span><span class="line"><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">newName</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p><code class="language-psql">GROUP BY</code>必须出现在<code class="language-psql">WHERE</code>后，<code class="language-psql">ORDER BY</code>前。</p>
  </li>
  <li>
    <p><code class="language-psql">GROUP BY</code>需要配合聚集函数，比如<code class="language-psql">AVE()</code>，一起使用。</p>
  </li>
  <li>
    <p><code class="language-psql">GROUP BY</code>不保证返回结果有特定顺序，如果需要特定顺序，需要指明<code class="language-psql">ORDER BY</code>。<code class="language-psql">ORDER BY</code>可以使用新列名。</p>
  </li>
  <li>
    <p><code class="language-psql">SELECT</code>语句中出现的列，必须在<code class="language-psql">GROUP BY</code>中出现。</p>
  </li>
  <li>
    <p><code class="language-psql">NULL</code>单独给出，多个<code class="language-psql">NULL</code>合并为一组。</p>
  </li>
  <li>
    <p><code class="language-psql">HAVING</code>对分组汇总后数据筛选，区别<code class="language-psql">WHERE</code>（汇总分组前筛选）。不能使用新列名，比如<code class="language-psql">HAVING newName &gt; 1</code>非法。</p>
  </li>
</ul>

<h2 id="postgresql">8. PostgreSQL支持的函数</h2>

<h3 id="section-6">8.1 数值</h3>

<table>
  <thead>
    <tr>
      <th>函数名</th>
      <th>意义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-psql">ABS()</code></td>
      <td>绝对值</td>
    </tr>
    <tr>
      <td><code class="language-psql">SQRT()</code></td>
      <td>平方根</td>
    </tr>
    <tr>
      <td><code class="language-psql">ROUND(v numeric, s int)</code></td>
      <td>取特定小数位数</td>
    </tr>
    <tr>
      <td><code class="language-psql">AVG()</code></td>
      <td>平均值，忽略<code class="language-psql">NULL</code></td>
    </tr>
    <tr>
      <td><code class="language-psql">MAX()</code></td>
      <td>最大值，忽略<code class="language-psql">NULL</code></td>
    </tr>
    <tr>
      <td><code class="language-psql">MIN()</code></td>
      <td>最小指，忽略<code class="language-psql">NULL</code></td>
    </tr>
    <tr>
      <td><code class="language-psql">SUM()</code></td>
      <td>求和，忽略<code class="language-psql">NULL</code></td>
    </tr>
    <tr>
      <td><code class="language-psql">COUNT(*)</code></td>
      <td>所有行数，包括<code class="language-psql">NULL</code></td>
    </tr>
    <tr>
      <td><code class="language-psql">COUNT(column1)</code></td>
      <td>行数，忽略<code class="language-psql">NULL</code></td>
    </tr>
  </tbody>
</table>

<p>详细参考：<a href="http://www.postgresql.org/docs/9.4/static/functions-math.html">PostgreSQL支持的数值操作</a></p>

<h3 id="section-7">8.2 字符串</h3>

<table>
  <thead>
    <tr>
      <th>函数名</th>
      <th>意义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-psql">RTRIM()</code></td>
      <td>删除字符串左侧空格</td>
    </tr>
    <tr>
      <td><code class="language-psql">LTRIM()</code></td>
      <td>删除字符串右侧空格</td>
    </tr>
    <tr>
      <td><code class="language-psql">TRIM()</code></td>
      <td>删除双侧空格</td>
    </tr>
    <tr>
      <td><code class="language-psql">SUBSTRING(string [from int] [for int])</code></td>
      <td>按照索引取字符串（从1开始）</td>
    </tr>
    <tr>
      <td><code class="language-psql">SUBSTRING(string [from int] [for int])</code></td>
      <td>选取符合POSIX正则匹配字符串</td>
    </tr>
    <tr>
      <td><code class="language-psql">CHAR_LENGTH()</code></td>
      <td>计算字符串长度，等同于<code class="language-psql">LENGTH()</code></td>
    </tr>
    <tr>
      <td><code class="language-psql">UPPER()</code></td>
      <td>大写</td>
    </tr>
    <tr>
      <td><code class="language-psql">LOWER()</code></td>
      <td>小写</td>
    </tr>
    <tr>
      <td><code class="language-psql">LEFT(string, n int)</code></td>
      <td>截取左侧n个字符串（从1开始）</td>
    </tr>
  </tbody>
</table>

<p>详细参考：<a href="http://www.postgresql.org/docs/9.4/static/functions-string.html">PostgreSQL支持的字符串操作</a></p>

<h3 id="section-8">8.3 日期</h3>

<table>
  <thead>
    <tr>
      <th>函数名</th>
      <th>意义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-psql">CURRENT_DATE</code></td>
      <td>当前日期</td>
    </tr>
    <tr>
      <td><code class="language-psql">DATE_PART(text, timestamp)</code></td>
      <td>选取日期中的年、月或日</td>
    </tr>
  </tbody>
</table>

<p>详细参考：<a href="http://www.postgresql.org/docs/9.4/static/functions-datetime.html">PostgreSQL支持的日期操作</a></p>

<h2 id="section-9">使用建议</h2>

<ol>
  <li>数据集的名字为一个单词，比如<code class="language-psql">priceCustom</code>而不是一个字符串 <code class="language-psql">'price custom'</code>。同样，命名别名（使用<code class="language-psql">AS</code>）也如此。</li>
</ol>

<h3 id="section-10">参考资料</h3>

<ul>
  <li>
    <p>《SQL必知必会（SQL in 10 Minutes, Sams Teach Yourself (4th Edition)）》<a href="https://book.douban.com/subject/24250054/">豆瓣链接</a></p>
  </li>
  <li>
    <p><a href="https://wiki.postgresql.org/wiki/9.1%E7%AC%AC%E5%9B%9B%E7%AB%A0">PostgreSQL Wiki</a></p>
  </li>
</ul>

<h3 id="section-11">更新记录</h3>

<p>2015年7月29日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python使用小技巧]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/07/28/python-tips/"/>
    <updated>2015-07-28T14:37:38+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/07/28/python-tips</id>
    <content type="html"><![CDATA[<p>收集了一些使用Python过程中的小技巧或者常见错误。</p>

<h2 id="while--if--break">1. While–if–break</h2>

<p>适用情况：<strong>当需要执行一个循环，但是不能事先判断何时终止。</strong> 可以在循环内部加入判断，符合要求时跳出。比如，使用程序在某个目录下新建一个文件夹，如果文件名已经存在，需要重新生成文件名；否则，创建文件夹。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>While&#8211;if&#8211;break </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">random</span><span class="o">,</span> <span class="nn">os</span>
</span><span class="line">
</span><span class="line"><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class="line">    <span class="n">letter</span> <span class="o">=</span> <span class="p">[</span><span class="nb">chr</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">97</span><span class="p">,</span> <span class="mi">123</span><span class="p">)]</span>
</span><span class="line">    <span class="n">folderName</span> <span class="o">=</span> <span class="p">[</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">letter</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)]</span>
</span><span class="line">    <span class="n">fn</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">folderName</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">fn</span><span class="p">)</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">True</span><span class="p">:</span>
</span><span class="line">        <span class="c"># get an unique name </span>
</span><span class="line">        <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">fn</span><span class="p">)</span>
</span><span class="line">        <span class="k">break</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">2. 链式比较操作</h2>

<p>Python支持一个链式的比较操作。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>comparison chain </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">testNum</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class="line">
</span><span class="line"><span class="c"># 链式比较操作</span>
</span><span class="line"><span class="c"># 区别if not和if a is not None</span>
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="mi">0</span> <span class="o">&lt;</span> <span class="n">testNum</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">):</span>
</span><span class="line">    <span class="k">print</span><span class="p">(</span><span class="s">&#39;It passed!&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<h3 id="section-1">参考网址</h3>

<ul>
  <li>
    <p><a href="https://wiki.python.org/moin/FrontPage">Python Wiki</a></p>
  </li>
  <li>
    <p><a href="http://blog.shenwei.me/python-note/#more-3951">Wei Shen’s Python note</a></p>
  </li>
  <li>
    <p><a href="http://www.codefrom.com/c/214">十个我希望早点知道的python方法</a></p>
  </li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2015年7月27日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UCSC Table下载注释文件]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/06/02/download-ucsc-gene-mask/"/>
    <updated>2015-06-02T16:49:41+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/06/02/download-ucsc-gene-mask</id>
    <content type="html"><![CDATA[<p>在进行RNA-seq数据分析时，需要从<a href="http://genome.ucsc.edu/cgi-bin/hgTables">UCSC Table</a>下载各种注释信息。比如Cufflinks等要求的转录组注释信息、Cufflinks建议去除的rRNA/tRNA/线粒体组注释。</p>

<h2 id="section">1. 基因注释信息</h2>

<p>下载转录组Ensembl注释文件：</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_ensembl.png" title="image" alt="UCSC下载Ensembl注释" /></p>

<!--more-->

<p>在“table”选择中，<code class="language-bash">ensemblSource</code>表示Ensembl类型注释，<code class="language-bash">ensemblToGeneName</code>表示Ensembl到基因名注释对应。</p>

<h2 id="rrna">2. rRNA注释信息</h2>

<p>分为两步：</p>

<p>第一步， “table”选择<code class="language-bash">wgEncodeGencodeBasicV19</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA.png" title="image" alt="UCSC下载rRNA注释" /></p>

<p>第二步，按照下图编辑“filter”。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA_maskTable.png" title="image" alt="UCSC下载rRNA注释Table" /></p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA_mask.png" title="image" alt="UCSC下载rRNA注释筛选" /></p>

<h2 id="trna">3. tRNA注释信息</h2>

<p>分为两步：</p>

<p>第一步，“track”选择 <code class="language-bash">tRNA Genes</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_tRNA.png" title="image" alt="UCSC下载tRNA注释" /></p>

<p>第二步，保留pseudo tRNA注释。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_tRNA_mask.png" title="image" alt="UCSC下载tRNA注释" /></p>

<h2 id="section-1">4. 线粒体基因组注释</h2>

<p>分为两步：</p>

<p>第一步， “table”选择<code class="language-bash">wgEncodeGencodeBasicV19</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_chrM.png" title="image" alt="UCSC下载chrM注释" /></p>

<p>第二步，按照下图编辑“filter”。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_chrM_mask.png" title="image" alt="UCSC下载chrM注释筛选" /></p>

<h3 id="section-2">参考资料</h3>

<ul>
  <li>
    <p>USCS Genome Browser的Google论坛：<a href="https://groups.google.com/a/soe.ucsc.edu/forum/#!topic/genome/IL_aeOuPYU0">1</a>、<a href="https://groups.google.com/a/soe.ucsc.edu/forum/#!msg/genome/jSAY8w1JVVo/P6lk4OJzDNEJ">2</a></p>
  </li>
  <li>
    <p>另一种选择rRNA、tRNA和线粒体组注释的方法<a href="http://onetipperday.blogspot.tw/2012/08/how-to-get-trnarrnamitochondrial-gene.html">How to get tRNA/rRNA/mitochondrial gene GTF file</a></p>
  </li>
  <li>
    <p><a href="http://webappl.blogspot.tw/2015/02/extract-rrna-and-trna-features-from.html">Extract rRNA and tRNA features from UCSC Browser</a></p>
  </li>
</ul>

<h3 id="section-3">更新记录</h3>

<p>2015年6月1日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash简易编程]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/28/bash-program/"/>
    <updated>2015-05-28T21:24:32+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/28/bash-program</id>
    <content type="html"><![CDATA[<h2 id="section">1. 循环</h2>

<p><code class="language-bash">for</code>循环体</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>for in Bash</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="k">for</span> i in *.zip
</span><span class="line"><span class="k">do</span>
</span><span class="line">    <span class="nb">echo</span> <span class="s2">&quot;$i&quot;</span>
</span><span class="line"><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<h2 id="section-1">2. 字符串分割</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Split strings</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># write in file &quot;testsplit.sh&quot;</span>
</span><span class="line"><span class="nv">IFS</span><span class="o">=</span><span class="s1">&#39;,&#39;</span> <span class="nb">read</span> -ra splitArray <span class="o">&lt;&lt;&lt;</span> <span class="s2">&quot;This,is,a,test&quot;</span>
</span><span class="line"><span class="k">for</span> i in <span class="s2">&quot;${splitArray[@]}&quot;</span>
</span><span class="line"><span class="k">do</span>
</span><span class="line">    <span class="nb">echo</span> <span class="s2">&quot;$i&quot;</span>
</span><span class="line"><span class="k">done</span>
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>bash testsplit.sh
</span><span class="line">This
</span><span class="line">is
</span><span class="line">a
</span><span class="line"><span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">3. 屏幕输出存入变量</h2>

<p>某个bash命令，比如<code class="language-bash">ls -l</code>存入变量，之后引用变量。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Save Command Output into Variables</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 注意等号前后不能加空格</span>
</span><span class="line"><span class="nv">listOutput</span><span class="o">=</span><span class="sb">`</span>ls -l<span class="sb">`</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;$listOutput&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">参考网址</h3>

<ul>
  <li>
    <p><a href="http://stackoverflow.com/questions/918886/how-do-i-split-a-string-on-a-delimiter-in-bash">How do I split a string on a delimiter in Bash?</a></p>
  </li>
  <li>
    <p><a href="http://stackoverflow.com/questions/4651437/how-to-set-a-bash-variable-equal-to-the-output-from-a-command">How to set a BASH variable equal to the output from a command?</a></p>
  </li>
</ul>

<h3 id="section-4">更新记录</h3>

<p>2015年5月27日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[过滤TopHat分析双端测序的输出]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/16/filter-tophat2-output/"/>
    <updated>2015-05-16T04:33:10+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/16/filter-tophat2-output</id>
    <content type="html"><![CDATA[<script type="text/x-mathjax-config">
MathJax.Hub.Config({
TeX: { equationNumbers: { autoNumber: "AMS" } }
});
</script>

<h2 id="section">0. 结论</h2>

<p>在使用TopHat2匹配双端测序结果后，建议根据成对reads的map基因组位置唯一、方向正确和距离合适的标准，筛选得到的匹配结果。比如，TopHat2可能生成<code class="language-bash">accepted_hits.bam</code>文件，处理方法如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Filter TopHat Outputs</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 首先查看bam文件头部有多少行</span>
</span><span class="line"><span class="nv">$ </span>samtools view -H accepted_hits.bam <span class="p">|</span> wc -l
</span><span class="line">86
</span><span class="line">
</span><span class="line"><span class="c"># 筛选成对且成功map到基因组唯一位置的reads，按照上一条输出结果，调整“NR &lt;= 86”</span>
</span><span class="line"><span class="nv">$ </span>samtools view -h accepted_hits.bam <span class="p">|</span> <span class="se">\</span>
</span><span class="line">    awk <span class="s1">&#39;{if (NR &lt;= 86) print $0}; {if($5 == 50 &amp;&amp; ($2 == 163 || $2 == 147 || $2 == 83 || $2 == 99)) print $0}&#39;</span> <span class="p">|</span> <span class="se">\</span>
</span><span class="line">    samtools view -b - &gt; accepted_filtered.bam
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>samtools view accepted_filtered.bam <span class="p">|</span> wc -l
</span><span class="line">79143942
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="tophatsam">1. TopHat输出sam文件的第五列</h2>

<p><a href="http://ccb.jhu.edu/software/tophat/manual.shtml">TopHat文档</a>没有解释其输出bam文件（比如<code class="language-bash">accepted_hits.bam</code>）的第五列的意义。按照<a href="http://bowtie-bio.sourceforge.net/bowtie2/index.shtml">Bowtie2</a>输出结果来看，是表示映射质量指标Mapping Quality scores（MAPQ），具体计算参考公式$\eqref{eq:1}$。</p>

<script type="math/tex; mode=display">\begin{align}
MAPQ = -10 \times log_{10}(pvalue)
\label{eq:1}
\end{align}</script>

<!--more-->

<p>MAPQ值越大，表示对应的read的alignment质量越高。然而，在TopHat输出结果中，MAPQ所代表意义略有不同。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>&#8220;MAPQ&#8221; distribution from TopHat2 accepted mapping reads</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 查看accepted_hits.bam文件的MAPQ数值，并统计出现频数</span>
</span><span class="line"><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk <span class="s1">&#39;{print $5}&#39;</span> <span class="p">|</span> sort --parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class="line"><span class="m">5057430</span> 0
</span><span class="line"><span class="m">3117731</span> 1
</span><span class="line"><span class="m">8058500</span> 3
</span><span class="line"><span class="m">93044727</span> 50
</span><span class="line">
</span><span class="line"><span class="c"># 查看前100位MAPQ数值和NH:i:n分布</span>
</span><span class="line"><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk <span class="s1">&#39;{print $5}&#39;</span> <span class="p">|</span> head -100 <span class="p">|</span> sort --parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class="line"><span class="m">35</span> 0
</span><span class="line"><span class="m">42</span> 1
</span><span class="line"><span class="m">22</span> 3
</span><span class="line"><span class="m">1</span> 50
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk <span class="s1">&#39;{print $20}&#39;</span> <span class="p">|</span> head -100 <span class="p">|</span> sort --parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class="line"><span class="m">1</span> NH:i:1
</span><span class="line"><span class="m">22</span> NH:i:2
</span><span class="line"><span class="m">3</span> NH:i:20
</span><span class="line"><span class="m">13</span> NH:i:3
</span><span class="line"><span class="m">29</span> NH:i:4
</span><span class="line"><span class="m">5</span> NH:i:5
</span><span class="line"><span class="m">21</span> NH:i:6
</span><span class="line"><span class="m">1</span> NH:i:7
</span><span class="line"><span class="m">2</span> NH:i:8
</span><span class="line"><span class="m">3</span> NH:i:9
</span><span class="line">
</span><span class="line"><span class="c"># 查看前200位MAPQ数值和NH:i:n分布</span>
</span><span class="line"><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk <span class="s1">&#39;{print $5}&#39;</span> <span class="p">|</span> head -200 <span class="p">|</span> sort --parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class="line"><span class="m">60</span> 0
</span><span class="line"><span class="m">43</span> 1
</span><span class="line"><span class="m">67</span> 3
</span><span class="line"><span class="m">30</span> 50
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk <span class="s1">&#39;{print $20}&#39;</span> <span class="p">|</span> head -200 <span class="p">|</span> sort --parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class="line"><span class="m">30</span> NH:i:1
</span><span class="line"><span class="m">8</span> NH:i:12
</span><span class="line"><span class="m">7</span> NH:i:14
</span><span class="line"><span class="m">67</span> NH:i:2
</span><span class="line"><span class="m">3</span> NH:i:20
</span><span class="line"><span class="m">13</span> NH:i:3
</span><span class="line"><span class="m">30</span> NH:i:4
</span><span class="line"><span class="m">5</span> NH:i:5
</span><span class="line"><span class="m">31</span> NH:i:6
</span><span class="line"><span class="m">1</span> NH:i:7
</span><span class="line"><span class="m">2</span> NH:i:8
</span><span class="line"><span class="m">3</span> NH:i:9
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>首先，我们可以看到TopHat输出的MAPQ只有四个数值，分别为<code class="language-bash">50</code>、<code class="language-bash">3</code>、<code class="language-bash">1</code>和<code class="language-bash">0</code>。根据<a href="http://samtools.github.io/hts-specs/SAMv1.pdf">sam文件标准</a>，<code class="language-bash">NH:i:n</code>表示含有查询序列的alignment的数量。因此，通过上述前100位和前200位分析可以发现，MAPQ并不是按照公式$\eqref{eq:1}$计算，而有可能是以下关系：</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: left">MAPQ (tophat)</th>
      <th style="text-align: center">Tag</th>
      <th style="text-align: right">描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">50</td>
      <td style="text-align: center">NH:i:1</td>
      <td style="text-align: right">map至唯一位置</td>
    </tr>
    <tr>
      <td style="text-align: left">30</td>
      <td style="text-align: center">NH:i:2</td>
      <td style="text-align: right">map至2个位置</td>
    </tr>
    <tr>
      <td style="text-align: left">1</td>
      <td style="text-align: center">NH:i:3/NH:i:4</td>
      <td style="text-align: right">map至3个或4个位置</td>
    </tr>
    <tr>
      <td style="text-align: left">0</td>
      <td style="text-align: center">NH:i:n (n &gt; 4)</td>
      <td style="text-align: right">map到多余4个位置</td>
    </tr>
  </tbody>
</table>

<hr />

<p>展示一个<code class="language-bash">NH:i:1</code>的例子，注意Illumina双端测序平台<code class="language-bash">fr-unstranded</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Two pairs of unique mapped reads from Illumina HiSeq2000 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">HISEQ2000-02:436:C2PG3ACXX:3:2313:10972:95322   <span class="m">163</span>     chr1    <span class="m">637224</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">637339</span>  <span class="m">215</span>     AAATGATCTGTACAATAACCCCCTGTGACACCAGTCTACCTATGTAACAAATGCCCCTAAACTTAAAATAAAAGTTAAAAAAAAAGAAAATTAAAATCTC  &lt;@@BDABBDFBCDGEGHIGIIGIABAFHBGDFGGGHIIIFIEIGGGGIIIFFDHIGIIIIIIIICEHIIIIIIHEHHDHFFCBCCB@BCAACCCCCECCC    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span><span class="line">HISEQ2000-02:436:C2PG3ACXX:3:2313:10972:95322   <span class="m">83</span>      chr1    <span class="m">637339</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">637224</span>  -215    GTAATATGAAAAACACAAATCTTTCATTCATTCCTTTCAACTGATGAGGAAAATGAGGCATCGGGAGTTAGTAAAAGTCCACATTGAGATATGAGACCCA  <span class="nv">CCADDDCCCCCCCDEEEECAEHEEGGIIHGFAAGGGHEF</span><span class="o">=</span>IGGGIIGGHGCGIEIIIGIIIIIIIFIHIIIIIIGIIHFEAIGGIIGFFDFHDDDAD@@@    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span><span class="line">
</span><span class="line">HISEQ2000-06:325:C2RC0ACXX:5:2205:6961:88285    <span class="m">99</span>      chr1    <span class="m">643662</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">643707</span>  <span class="m">145</span>     CCTATCAAAATCTTAGCATTCCTCTTAGCCCTCAACAAAGCATTTCTAAAATGTGTATAGAAGACCAAAGGGCCAAAAGAGTCAACTTCTGAAGAAGCGC  CCCFFFFFHHHHHJJJJIJJHJJJJJJJIIJJJJJJJJJJJJIJJJJJIIIJJIIIJJJJJJJJJIJJJJIJJJIHHHHFFEFFFEEEEEEEDDCDDCDD    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span><span class="line">HISEQ2000-06:325:C2RC0ACXX:5:2205:6961:88285    <span class="m">147</span>     chr1    <span class="m">643707</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">643662</span>  -145    CTAAAATGTGTATAGAAGACCAAAGGGCCAAAAGAGTCAACTTCTGAAGAAGCGCAAAAAGAAAGTTGAGGAAATCTTAAAACATGTTATTGAGCTTAAA  CEEEDDDDEDFEEEEEEEBFFFFFHHHHEJJJJJJJJIJJJJGJIIIIHFJJJIIJJJJJIJJJJJJJJJJJJGHJJJJIJJJJJJJGHHHHFFFFFCCC    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="sam">2. sam文件的第二列</h2>

<p>sam文件中的第二列提供了具体的map情况，下列表格摘自<a href="http://samtools.github.io/hts-specs/SAMv1.pdf">sam文件标准</a>，sam/bam文件中第二列各种条件<strong>求和</strong>的<strong>十进制</strong>标识，<a href="http://broadinstitute.github.io/picard/explain-flags.html">快速解释第二列的bitwise FLAG</a>：</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: center">Decimal</th>
      <th style="text-align: center">Hexadecimal</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0x1</td>
      <td style="text-align: left">template having multiple segments in sequencing</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">0x2</td>
      <td style="text-align: left">each segment properly aligned according to the aligner</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">0x4</td>
      <td style="text-align: left">segment unmapped</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">0x8</td>
      <td style="text-align: left">next segment in the template unmapped</td>
    </tr>
    <tr>
      <td style="text-align: center">16</td>
      <td style="text-align: center">0x10</td>
      <td style="text-align: left">SEQ being reverse complemented</td>
    </tr>
    <tr>
      <td style="text-align: center">32</td>
      <td style="text-align: center">0x20</td>
      <td style="text-align: left">SEQ of the next segment in the template being reverse complemented</td>
    </tr>
    <tr>
      <td style="text-align: center">64</td>
      <td style="text-align: center">0x40</td>
      <td style="text-align: left">the first segment in the template</td>
    </tr>
    <tr>
      <td style="text-align: center">128</td>
      <td style="text-align: center">0x80</td>
      <td style="text-align: left">the last segment in the template</td>
    </tr>
    <tr>
      <td style="text-align: center">256</td>
      <td style="text-align: center">0x100</td>
      <td style="text-align: left">secondary alignment</td>
    </tr>
    <tr>
      <td style="text-align: center">512</td>
      <td style="text-align: center">0x200</td>
      <td style="text-align: left">not passing quality controls</td>
    </tr>
    <tr>
      <td style="text-align: center">1024</td>
      <td style="text-align: center">0x400</td>
      <td style="text-align: left">PCR or optical duplicate</td>
    </tr>
    <tr>
      <td style="text-align: center">2048</td>
      <td style="text-align: center">0x800</td>
      <td style="text-align: left">supplementary alignment</td>
    </tr>
  </tbody>
</table>

<hr />

<p>在map完成双端测序序列中，我们感兴趣的是一对reads都正确align到基因组上，而且方相匹配又距离合适。符合这样条件的reads，对应的第二列数值为99、147、83和163，具体图示参考<a href="https://biobeat.wordpress.com/2013/04/29/directional-rna-seq-part-1-extract-strand-information-from-sam-file/">Directional RNA-seq— Part 1: SAM file flags</a>。下面表格解释四个数值的具体意义，其中<code class="language-bash">1</code>标识双端测序，<code class="language-bash">2</code>表示一对reads正确地map到基因组合适位置，表格中着重陈述<code class="language-bash">64</code>、<code class="language-bash">32</code>、<code class="language-bash">128</code>和<code class="language-bash">16</code>。</p>

<hr />

<table>
  <thead>
    <tr>
      <th>Flag</th>
      <th>Composition</th>
      <th>Explanation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>99</td>
      <td>64+32+2+1</td>
      <td>一对引物中第一个map到基因组正义链；第二个反方向map到基因组正义链</td>
    </tr>
    <tr>
      <td>147</td>
      <td>128+16+2+1</td>
      <td>一对引物中第二个反方向map基因组正义链；第一个map到基因组正义链</td>
    </tr>
    <tr>
      <td>83</td>
      <td>64+16+2+1</td>
      <td>一对引物中第一个map到基因组反义链；第二个反方向map到基因组反义链</td>
    </tr>
    <tr>
      <td>163</td>
      <td>128+32+2+1</td>
      <td>一对引物中第二个反方向map基因组正义链；第一个map到基因组正义链</td>
    </tr>
  </tbody>
</table>

<hr />

<p>之后，我们需要筛选含有这些flags的reads。由于我们通常需要操作bam文件，也希望输出是bam文件，中间过程不希望再重新生成sam文件。那么，就需要结合使用<code class="language-bash">awk</code>进行筛选，具体方法见本篇文章开头所示。当然，如果是只是查看，可以使用下面例子中的 <code class="language-bash">samtools view -f 0x2</code>。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Count number of unique pair-mapped alignments</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># map到基因组上唯一位置的reads数目</span>
</span><span class="line"><span class="nv">$ </span>samtools view -q <span class="m">50</span> accepted_hits.bam <span class="p">|</span> wc -l
</span><span class="line">93044727
</span><span class="line"><span class="c"># 成对reads都map到基因组对应位置的reads数目</span>
</span><span class="line"><span class="nv">$ </span>samtools view -f 0x2 accepted_hits.bam <span class="p">|</span> wc -l
</span><span class="line">88793640
</span><span class="line"><span class="c"># 成对且唯一mapped的reads数目</span>
</span><span class="line"><span class="nv">$ </span>samtools view -q <span class="m">50</span> -f 0x2 accepted_hits.bam <span class="p">|</span> wc -l
</span><span class="line">79143942
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="tophat">3. 操作TopHat输出的文件命令集锦</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Useful bash for bam files from TopHat</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># samtools的view -c命令，其实就是输出sam文件有多少行</span>
</span><span class="line"><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> wc -l
</span><span class="line">109278388
</span><span class="line"><span class="nv">$ </span>samtools view -c accepted_hits.bam
</span><span class="line">109278388
</span><span class="line">
</span><span class="line"><span class="c"># 查看bam文件中mapped的reads长度分布</span>
</span><span class="line"><span class="c"># 第二种方法是运行FastQC，输出结果中也有显示</span>
</span><span class="line">samtools view accepted_hits.bam <span class="p">|</span> awk <span class="s1">&#39;{print length($10)}&#39;</span> <span class="p">|</span> sort -n <span class="p">|</span> uniq -c
</span><span class="line">
</span><span class="line"><span class="c"># 查看bed文件前几行</span>
</span><span class="line"><span class="nv">$ </span>head junction.bed
</span><span class="line"><span class="c"># 统计bed文件有多少行，需要去除第一行注释</span>
</span><span class="line"><span class="c"># 以下两种方式相同，但不够完美</span>
</span><span class="line"><span class="nv">$ </span>wc -l junction.bed
</span><span class="line"><span class="m">220648</span> junctions.bed
</span><span class="line"><span class="nv">$ </span>awk <span class="s1">&#39;END {print NR}&#39;</span> junctions.bed
</span><span class="line">220648
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="dnamrna">4. DNA链和mRNA链的称呼总结</h2>

<p>双链DNA和单链mRNA，对每条链都有特定的称呼。总结如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>DNA/RNA strands </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">3<span class="s1">&#39;~~~~~UCUGAU~~~~~ 5&#39;</span> mRNA的对应基因信息在reverse strand
</span><span class="line">
</span><span class="line">5<span class="s1">&#39;-----AGACTA----------ATTGTT----- 3&#39;</span>
</span><span class="line">3<span class="s1">&#39;-----TCTGAT----------TAACAA----- 5&#39;</span>
</span><span class="line">
</span><span class="line">                5<span class="s1">&#39;~~~~~AUUGUU~~~~~ 3&#39;</span> mRNA的对应基因信息在forward strand
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>对于一条双链DNA，称呼列表如下：</p>

<table>
  <thead>
    <tr>
      <th>方向<sup>a</sup></th>
      <th>名称1</th>
      <th>名称2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>从左至右</td>
      <td>forward</td>
      <td>plus</td>
    </tr>
    <tr>
      <td>从右至左</td>
      <td>reverse</td>
      <td>minus</td>
    </tr>
  </tbody>
</table>

<p><sup>a</sup>：方向是指5’至3’的阅读方向，用于区分两条DNA链条</p>

<hr />

<p>对于一条RNA链，其对应的双链DNA称呼如下：</p>

<table>
  <thead>
    <tr>
      <th>mRNA方向<sup>a</sup></th>
      <th>名称1</th>
      <th>名称2</th>
      <th>名称3</th>
      <th>名称4</th>
      <th>名称5</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>同向</td>
      <td>coding</td>
      <td>nontemplate</td>
      <td>sense</td>
      <td>positive</td>
      <td>+</td>
    </tr>
    <tr>
      <td>反向</td>
      <td>template</td>
      <td>noncoding</td>
      <td>antisense</td>
      <td>negative</td>
      <td>-</td>
    </tr>
  </tbody>
</table>

<p><sup>a</sup>：mRNA方向是指5’至3’。</p>

<hr />

<h3 id="section-1">参考网址</h3>

<ul>
  <li>
    <p><a href="http://blog.qiuworld.com:8080/archives/3321">关于map当中的unique mapped reads问题</a></p>
  </li>
  <li>
    <p>TopHat的bam输出文件第五列（类似MAPQ）的讨论： <a href="https://groups.google.com/forum/#!topic/tuxedo-tools-users/m0p1qXDEqKA">tophat mapping quality</a>和<a href="http://www.acgt.me/blog/2015/3/17/more-madness-with-mapq-scores-aka-why-bioinformaticians-hate-poor-and-incomplete-software-documentation">More madness with MAPQ scores</a></p>
  </li>
  <li>
    <p><a href="https://biobeat.wordpress.com/2013/05/01/directional-rna-seq-part-2-using-samtools/">Directional RNA-seq— Part 2: Explore SAM flags using samtools</a></p>
  </li>
  <li>
    <p><a href="http://www.acgt.me/blog/2015/4/15/filtering-a-sam-file-generated-by-tophat-to-find-uniquely-mapped-concordant-read-pairs-awk-vs-samtools">Filtering a SAM file generated by TopHat to find uniquely mapped, concordant read pairs: AWK vs SAMtools</a></p>
  </li>
  <li>
    <p><a href="https://www.biostars.org/p/3423/">Question: Forward And Reverse Strand Conventions</a></p>
  </li>
  <li>
    <p><a href="http://en.wikipedia.org/wiki/Sense_(molecular_biology)">wiki</a></p>
  </li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2015年5月25日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django使用介绍]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/09/django-tutorial/"/>
    <updated>2015-05-09T13:42:15+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/09/django-tutorial</id>
    <content type="html"><![CDATA[<p>本文是学习<a href="https://docs.djangoproject.com/en/1.8/intro/tutorial01/">Django Tutorial</a>的记录，目的为了帮助快速浏览和查找Django使用细节。</p>

<h2 id="django">1. 安装Django</h2>

<p>本文使用<a href="https://www.python.org/">Python 3.3.6</a>和<a href="http://www.postgresql.org/">PostgreSQL 9.3.6</a>学习Django。可以参考<a href="http://yulongniu.bionutshell.org/blog/2015/05/09/python-different-version/">“使用Pyenv控制多个版本Python”</a>和 <a href="http://yulongniu.bionutshell.org/blog/2015/05/08/install-use-postgresql/">“Fedora安装与使用PostgreSQL”</a>，安装对应版本Python和PostgreSQL。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 安装Django</span>
</span><span class="line"><span class="nv">$ </span>pip install django
</span><span class="line">
</span><span class="line"><span class="c"># 安装PostgreSQL支持psycopg2 </span>
</span><span class="line"><span class="nv">$ </span>pip install psycopg2
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 检查Django版本</span>
</span><span class="line"><span class="nv">$ </span>python -c <span class="s2">&quot;import django; print(django.get_version())&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">2. 创建项目</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 创建名为mysite的项目</span>
</span><span class="line"><span class="nv">$ </span>django-admin startproject mysite
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>之后，配制数据库。修改<code class="language-bash">mysite/settings.py</code>对应位置。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>mysite/settings.py</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># Database</span>
</span><span class="line"><span class="c"># https://docs.djangoproject.com/en/1.8/ref/settings/#databases</span>
</span><span class="line">
</span><span class="line"><span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.postgresql_psycopg2&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="s">&#39;testdb&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;USER&#39;</span><span class="p">:</span> <span class="s">&#39;userName&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;PASSWORD&#39;</span><span class="p">:</span> <span class="s">&#39;passWord&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;HOST&#39;</span><span class="p">:</span> <span class="s">&#39;/var/run/postgresql&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;PORT&#39;</span><span class="p">:</span> <span class="s">&#39;5432&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 配制好数据库后，链接数据库</span>
</span><span class="line"><span class="nv">$ </span>python manage.py migrate
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>开启Django测试网络服务器</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>python manage.py runserver
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="app">3. 创建app</h2>

<p>首先， 创建新的app，比如<code class="language-bash">polls</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>python manage.py startapp polls
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>其次，修改app</p>

<p>app文件位置<code class="language-bash">polls/models.py</code>，之后在项目配制文件<code class="language-bash">mysite/settings.py</code>中添加app，最后添加app。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 添加app</span>
</span><span class="line"><span class="nv">$ </span>python manage.py makemigrations polls
</span><span class="line">
</span><span class="line"><span class="c"># 如果有数据库操作，可以打印具体的数据库操作脚本</span>
</span><span class="line"><span class="nv">$ </span>python manage.py sqlmigrate polls 0001
</span><span class="line">
</span><span class="line"><span class="c"># 也可以检查</span>
</span><span class="line"><span class="nv">$ </span>python manage.py check
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最后，链接app与数据库</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>python manage.py migrate
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="https://docs.djangoproject.com/en/1.8/intro/tutorial01/">Django Tutorial</a></li>
</ul>

<h3 id="section-1">更新记录</h3>

<p>2015年5月9日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Pyenv控制多个版本Python]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/09/python-different-version/"/>
    <updated>2015-05-09T00:14:10+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/09/python-different-version</id>
    <content type="html"><![CDATA[<p>同时在一台电脑上使用多个版本的Python，可以通过<a href="https://github.com/yyuu/pyenv">pyenv</a>控制和管理。</p>

<h2 id="section">1. 安装方法</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>git clone git://github.com/yyuu/pyenv.git ~/.pyenv
</span><span class="line">
</span><span class="line"><span class="c"># 写入路径信息</span>
</span><span class="line"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class="line"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class="line"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(pyenv init -)&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class="line">
</span><span class="line"><span class="c"># 重新载入</span>
</span><span class="line"><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<h2 id="python">2. 安装多个版本Python和对应包</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 查看可提供的Python版本列表</span>
</span><span class="line"><span class="nv">$ </span>pyenv install --list
</span><span class="line">
</span><span class="line"><span class="c"># 安装Python所依赖包</span>
</span><span class="line"><span class="c"># yum install readline readline-devel readline-static openssl openssl-devel openssl-static sqlite-devel bzip2-devel bzip2-libs</span>
</span><span class="line">
</span><span class="line"><span class="c"># 安装其他版本Python</span>
</span><span class="line"><span class="c"># 如果命令行下载安装Python太慢，可以将下载的安装包放入~/.pyenv/cache/文件夹中，之后安装</span>
</span><span class="line"><span class="nv">$ </span>pyenv install 3.4.3
</span><span class="line"><span class="nv">$ </span>pyenv rehash
</span><span class="line">
</span><span class="line"><span class="c"># 查看已安装Python版本</span>
</span><span class="line"><span class="nv">$ </span>pyenv versions
</span><span class="line">
</span><span class="line"><span class="c"># 全局切换Python版本</span>
</span><span class="line"><span class="nv">$ </span>pyenv global 3.4.3
</span><span class="line">
</span><span class="line"><span class="c"># 安装对应版本Python包。</span>
</span><span class="line"><span class="c"># 每次安装包之后，都要执行rehash。</span>
</span><span class="line"><span class="nv">$ </span>pip install ipython
</span><span class="line"><span class="nv">$ </span>pyenv rehash
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果在使用<code class="language-bash">pip</code>安装包时，下载速度过慢，可以考虑使用国内源。比如：</p>

<ul>
  <li>
    <p>http://pypi.mirrors.ustc.edu.cn/</p>
  </li>
  <li>
    <p>http://pypi.douban.com/</p>
  </li>
</ul>

<p>使用方法为：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Using different pip mirror</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>pip install --upgrade numpy -i http://pypi.mirrors.ustc.edu.cn/simple
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="pyenv">3. 更新pyenv</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span><span class="nb">cd</span> ~/.pyenv
</span><span class="line"><span class="nv">$ </span>git pull
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="python-1">4. 删除特定版本Python</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 查找特定版本Python文件夹位置，之后直接删除即可。</span>
</span><span class="line"><span class="nv">$ </span>pyenv prefix 3.4.3
</span><span class="line"><span class="nv">$ </span>rm -rf ~/.pyenv/versions/3.4.3
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="http://seisman.info/python-pyenv.html">Python多版本共存之pyenv</a></p>
  </li>
  <li>
    <p><a href="http://www.leadnt.com/%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E6%9D%A5%E5%8A%A0%E9%80%9Fpython-pypi%E5%8C%85%E7%9A%84%E5%AE%89%E8%A3%85.html">使用国内镜像源来加速python pypi包的安装</a></p>
  </li>
</ul>

<h3 id="section-1">更新记录</h3>

<p>2015年5月23日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora安装与使用PostgreSQL]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/08/install-use-postgresql/"/>
    <updated>2015-05-08T18:30:54+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/08/install-use-postgresql</id>
    <content type="html"><![CDATA[<h2 id="postgresql">1. 安装和开启postgresql</h2>

<p>Fedora直接使用<code class="language-bash">dnf</code>安装相关组件。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 安装PostgreSQL</span>
</span><span class="line"><span class="c"># dnf install postgresql postgresql-server postgresql-contrib postgresql-devel pgadmin3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>初始化（只需要执行一次）。如果出现类似<code class="language-bash">Data directory is not empty!</code>报错，可以尝试执行删除操作<code>rm -f -r /usr/local/pgsql/data</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 初始化</span>
</span><span class="line"><span class="c"># postgresql-setup --initdb --unit postgresql</span>
</span><span class="line">
</span><span class="line"><span class="c"># 开启服务</span>
</span><span class="line"><span class="c"># service postgresql start</span>
</span><span class="line">
</span><span class="line"><span class="c"># 查询工作状态</span>
</span><span class="line"><span class="c"># service postgresql status</span>
</span><span class="line">
</span><span class="line"><span class="c"># 关闭服务</span>
</span><span class="line"><span class="c"># service postgresql stop</span>
</span><span class="line">
</span><span class="line"><span class="c"># 开机启动</span>
</span><span class="line"><span class="c"># chkconfig postgresql on</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">2. 创建用户和数据库</h2>

<p>为了方便使用，可以在PostgreSQL中创建一个与当前系统用户名相同的用户，比如目前系统登陆用户为Kitty。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 进入home路径</span>
</span><span class="line"><span class="c"># cd /home/</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="c"># 进入默认postgres用户，需要输入root密码。</span>
</span><span class="line"><span class="c"># 之后系统命令提示符会变成类似“bash-4.3$”。</span>
</span><span class="line"><span class="c"># su postgres</span>
</span><span class="line">
</span><span class="line"><span class="c"># 创建用户</span>
</span><span class="line"><span class="c"># -P：创建用户后立即创建密码</span>
</span><span class="line"><span class="c"># -s：用户为superuser</span>
</span><span class="line"><span class="c"># -e：打印消息</span>
</span><span class="line">bash-4.3<span class="nv">$ </span>createuser -P -s -e Kitty
</span><span class="line">
</span><span class="line"><span class="c"># 创建数据库</span>
</span><span class="line"><span class="c"># -O：制定用户</span>
</span><span class="line">bash-4.3<span class="nv">$ </span>createdb -O Kitty testdb
</span><span class="line">
</span><span class="line"><span class="c"># 退出</span>
</span><span class="line">bash-4.3<span class="nv">$ </span><span class="nb">exit</span>
</span><span class="line">
</span><span class="line"><span class="c"># 再创建新的数据库时，不需要进入postgres。</span>
</span><span class="line"><span class="c"># 直接在当前登录用户下创建即可。</span>
</span><span class="line"><span class="c"># 由于PostgreSQL用户与系统登录用户相同，不需要指定PostgreSQL用户</span>
</span><span class="line"><span class="nv">$ </span>creatdb testdb2
</span><span class="line">
</span><span class="line"><span class="c"># 删除数据库</span>
</span><span class="line"><span class="nv">$ </span>dropdb testdb2
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建完用户和对应数据库后，可以登录数据库控制台。登录后，系统命令提示符会变成类似“testdb=#”。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 登录testdb数据库控制台</span>
</span><span class="line"><span class="nv">$ </span>psql testdb
</span><span class="line">
</span><span class="line"><span class="c"># 完整登录命令</span>
</span><span class="line"><span class="c"># -U：用户名</span>
</span><span class="line"><span class="c"># -d：数据库</span>
</span><span class="line"><span class="c"># -h：host，默认为local socket</span>
</span><span class="line"><span class="c"># -p：端口</span>
</span><span class="line"><span class="nv">$ </span>psql -U Kitty -d testdb -h /var/run/postgresql -p 5432
</span><span class="line">
</span><span class="line"><span class="c"># 查看PostgreSQL配制文件路径</span>
</span><span class="line"><span class="nv">testdb</span><span class="o">=</span><span class="c"># SHOW config_file;</span>
</span><span class="line">
</span><span class="line"><span class="c"># 查看所有用户</span>
</span><span class="line"><span class="nv">testdb</span><span class="o">=</span><span class="c"># \du</span>
</span><span class="line">
</span><span class="line"><span class="c"># 查看表格（table）</span>
</span><span class="line"><span class="nv">testdb</span><span class="o">=</span><span class="c"># \dt</span>
</span><span class="line">
</span><span class="line"><span class="c"># 查看所有数据库</span>
</span><span class="line"><span class="nv">testdb</span><span class="o">=</span><span class="c"># \l</span>
</span><span class="line">
</span><span class="line"><span class="c"># 退出</span>
</span><span class="line"><span class="nv">testdb</span><span class="o">=</span><span class="c"># \q</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">参考资料</h3>

<ul>
  <li>
    <p><a href="http://www.postgresql.org/docs/9.4/interactive/index.html">PostgreSQL 9.4 Manuals</a></p>
  </li>
  <li>
    <p><a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL新手入门</a></p>
  </li>
  <li>
    <p><a href="http://www.heatware.net/linux-unix/how-install-postgresql-8-4-centos-5/">初始化错误</a></p>
  </li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2015年7月29日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C语言学习记录]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/12/08/c-program-note/"/>
    <updated>2014-12-08T07:23:16+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/12/08/c-program-note</id>
    <content type="html"><![CDATA[<h2 id="section">1. 基本数据类型</h2>

<h3 id="section-1">1.1 算术类型</h3>

<table>
  <thead>
    <tr>
      <th>类型</th>
      <th>解释</th>
      <th>说明</th>
      <th>注意事项</th>
      <th>本地字节数</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>short</code></td>
      <td>有符号短整数</td>
      <td>完整形式<code>signed short int</code>，<code>singed</code>和<code>int</code>可以省略</td>
      <td>最左边一位表示符号，<code>0</code>为正数，<code>1</code>为负数</td>
      <td>2</td>
    </tr>
    <tr>
      <td><code>unsigned short</code></td>
      <td>无符号短整数</td>
      <td>完整形式<code>unsigned short int</code>，<code>int</code>可以省略</td>
      <td>全部位占满</td>
      <td>2</td>
    </tr>
    <tr>
      <td><code>int</code></td>
      <td>有符号整数</td>
      <td>完整形式<code>signed int</code>，<code>singed</code>可以省略</td>
      <td>最左边一位表示符号，<code>0</code>为正数，<code>1</code>为负数</td>
      <td>4</td>
    </tr>
    <tr>
      <td><code>unsigned int</code></td>
      <td>无符号整数</td>
      <td> </td>
      <td>全部位占满</td>
      <td>4</td>
    </tr>
    <tr>
      <td><code>long</code></td>
      <td>有符号长整数</td>
      <td>完整形式为<code>signed long int</code>，<code>singed</code>和<code>int</code>可以省略</td>
      <td>最左边一位表示符号，<code>0</code>为正数，<code>1</code>为负数</td>
      <td>8</td>
    </tr>
    <tr>
      <td><code>unsigned long</code></td>
      <td>无符号长整数</td>
      <td>完整形式为<code>unsigned short int</code>，<code>int</code>可以省略</td>
      <td>全部位占满</td>
      <td>8</td>
    </tr>
    <tr>
      <td><code>long long</code></td>
      <td>无符号长长整数</td>
      <td>完整形式为<code>signed long long int</code>，<code>singed</code>和<code>int</code>可以省略</td>
      <td><span style="color: green"><strong>C99</strong></span>特有</td>
      <td>8</td>
    </tr>
    <tr>
      <td><code>unsigned long long </code></td>
      <td>有符号长长整数</td>
      <td>完整形式为<code>unsigned long long int</code>，<code>int</code>可以省略</td>
      <td><span style="color: green"><strong>C99</strong></span>特有</td>
      <td>8</td>
    </tr>
    <tr>
      <td><code>char</code></td>
      <td>字符</td>
      <td>实质是“小整数”（可能比短整数占用字节更少）</td>
      <td>分为<code>char</code>、<code>singed char</code>和<code>unsigned char</code>。使用<strong>单引号</strong>标记常量，比如<code>'A'</code>（<strong>值</strong>为65）</td>
      <td>1</td>
    </tr>
    <tr>
      <td><code>_Bool</code></td>
      <td>布尔型整数</td>
      <td>实质是无符号整数</td>
      <td>只能赋值0或1，赋值<code>_Bool</code>类型变量为非零值会导致赋值为1</td>
      <td>1</td>
    </tr>
    <tr>
      <td><code>float</code></td>
      <td>单精度浮点数</td>
      <td> </td>
      <td> </td>
      <td>4</td>
    </tr>
    <tr>
      <td><code>double</code></td>
      <td>双精度浮点数</td>
      <td> </td>
      <td> </td>
      <td>8</td>
    </tr>
    <tr>
      <td><code>long double</code></td>
      <td>扩展精度浮点数</td>
      <td> </td>
      <td> </td>
      <td>16</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <p>强制编辑器处理常量为长整数（十进制、八进制和十六进制），<code>1135L</code>；强制处理为无符号，<code>1135U</code>；混合使用，<code>1135UL</code>，<code>U</code>和<code>L</code>顺序和大小写不重要。
<span style="color: green"><strong>C99</strong></span>中增加了<code>ll</code>或者<code>LL</code>后缀，强制<code>long long int</code>型整数，可以与<code>u</code>或<code>U</code>连用。<strong>避免无符号和有符号整数混用，特别是无符号和有符号整数比较，会产生意想不到的后果</strong>。</p>
  </li>
  <li>
    <p>强制编辑器处理常量为单精度浮点数，<code>11.3f</code>，<code>11.3</code>会被认为是<code>double</code>型；强制为双精度，<code>11.3L</code>或者<code>11.3l</code>（这里看出使用<code>L</code>更好，因为<code>l</code>会被误认为数字<code>1</code>）。</p>
  </li>
  <li>
    <p>强制类型转化表达式的一般形式为：<code>(int) floatNumber</code>。C语言把<code>(type)</code>视为一元运算符，所以其等级高于二元运算符。</p>
  </li>
  <li>
    <p>类型定义一般形式为：<code>typedef int Newint;</code>，注意结尾的<code>；</code>。区别与使用宏定义类型，函数体内定义的<code>typdef</code>变量在函数体外无法使用，而宏可以作用于任何对应位置。</p>
  </li>
  <li>
    <p><code>sizeof</code>运算符一般形式为：<code>sizeof(type)</code>，比如<code>sizeof(long int)</code>计算<code>int</code>类型占用多少个字节。<code>sizeof</code>表达式的类型是<code>size_t</code>（无符号整数），所以安全的方法是强制转换为<code>unsigned long</code>型，比如<code class="language-c">(unsigned long) sizeof(int)</code>。括号不是强制需要，加上括号防止因为优先级不同而引起歧义。可以应用与常量、变量或者表达式。</p>
  </li>
</ul>

<!--more-->

<h3 id="section-2">1.2 数组</h3>

<p>数组索引从0开始；数组按行存储。</p>

<h4 id="section-3">1.2.1 一维数组</h4>

<p>数组长度：</p>

<ul>
  <li>
    <p>数组长度可以是任何整数常量或整数常量表达式，比如<code class="language-c">testLen + 1</code>，<code>testLen</code>之前声明为整数常量（&gt;-1）；</p>
  </li>
  <li>
    <p>数组长度之后可能会变，所以可以使用宏定义一维数组的长度，比如<code class="language-c">#define LEN 5</code>。</p>
  </li>
  <li>
    <p>确定数组长度，可以联合使用宏和<code>sizeof</code>，比如<code class="language-c">#define SIZE ((int) (sizeof(a) / sizeof(a[0])))</code></p>
  </li>
</ul>

<p>初始化数组：</p>

<ul>
  <li>
    <p>声明每一个元素的数值，比如<code class="language-c">int testArray[5] = {1, 2, 3, 4, 5};</code>。这种情况可以忽略数组长度，比如<code class="language-c">int testArray[] = {1, 2, 3, 4, 5};</code>。</p>
  </li>
  <li>
    <p>声明部分元素，比如<code class="language-c">int testArray[5] = {1, 2, 3};</code>，4号与5号元素默认为0。<span style="color: green"><strong>C99</strong></span>提供元素下标初始化，比如：<code class="language-c">int testArray[5] = {[0] = 1, [1] = 2, [2] = 3};</code>；或者混用，比如<code class="language-c">int testArray[5] = {1, 2, [2] = 3};</code>；甚至自动判断长度，比如<code class="language-c">int testArray[] = {[0] = 1, 2, [2] = 3, a[4] = 0};</code>，编译器根据最大元素序号，制定数组长度为5。使用元素下标初始化，<strong>尽量按照下标序号从大到小初始化</strong>，否则可能引起后面元素覆盖前面元素。</p>
  </li>
  <li>
    <p>声明全部元素为0，比如<code class="language-c">int testArray[5] = {0};</code>。</p>
  </li>
</ul>

<h4 id="section-4">1.2.2 多维数组</h4>

<p>初始化数组：</p>

<ul>
  <li>
    <p>声明每一个元素或者部分元素，其余未声明元素为0。<span style="color: green"><strong>C99</strong></span>同样提供了下标初始化。比如：<code class="language-c">int testArray[2][2] = {[0][0] = 0, [1][1] = 1};</code></p>
  </li>
  <li>
    <p>声明全部元素为0，比如<code>int testArray[5][10] = {0};</code>。</p>
  </li>
</ul>

<h3 id="section-5">1.3 其他</h3>

<ul>
  <li>
    <p><code>structures</code></p>
  </li>
  <li>
    <p><code>unions</code></p>
  </li>
  <li>
    <p><code>pointers</code></p>
  </li>
  <li>
    <p><code>functions</code></p>
  </li>
</ul>

<h2 id="section-6">2. 操作符类型和优先级</h2>

<p><img src="http://yulongniu.bionutshell.org/images/coperator.png" title="image" alt="C operators" /></p>

<p>图片取自<a href="#Ref">参考资料2</a>。</p>

<ul>
  <li>
    <p>操作符有两个性质：<strong>结合方向</strong>和<strong>优先级</strong>。<strong>结合方向</strong>决定操作符的执行对象，比如多个同等操作符；而<strong>优先级</strong>决定操作符的结合方式，通俗来讲即谁和谁结合在一起。但是，C没有规定表达式运算的先后顺序。比如对于二元操作符<code>+</code>，<code class="language-c">a = i + i++;</code>，由编译器决定是<code>i</code>还是<code>i++</code>先执行。</p>
  </li>
  <li>
    <p>操作符<code>/</code>和<code>%</code>用于负整数操作，结果由编译器决定。<span style="color: green"><strong>C99</strong></span>中<code>/</code>和<code>%</code>操作负数，返回最靠近0的结果。</p>
  </li>
  <li>
    <p>运算符<code>&amp;&amp;</code>和<code>||</code>（从左向右结合），两侧的两个表达式有运算顺序，先左后右。<strong>有可能右侧表达式没有计算，因此不要在右侧放入有副作用的表达式</strong>。</p>
  </li>
</ul>

<h2 id="section-7">3. 表达式</h2>

<ul>
  <li>
    <p>条件表达式<code class="language-c">i &gt; 0 ? i : f</code>，如果<code>i</code>和<code>f</code>是整数型和浮点型，即使条件判定为真，表达式的值为浮点型。</p>
  </li>
  <li>
    <p><code>switch</code>语句最后一个分支，添加<code class="language-c">break;</code>语句。原因是防止之后修改程序，需要再添加判断条件时，遗漏<code class="language-c">break;</code>语句。C语言的<code>switch</code>语句不能判断范围，但适合替代多个<code>OR</code>连接的判断语句。</p>
  </li>
  <li>
    <p>逗号表达式中，<code class="language-c">表达式1, 表达式2</code>，<code>表达式1</code>先计算之后丢弃其值，之后计算<code>表达式2</code>。因此，<strong><code>表达式1</code>必须有副作用</strong>。</p>
  </li>
</ul>

<h2 id="section-8">4. 语法注意事项</h2>

<ul>
  <li>
    <p><code>#define LOWER 0</code>定义常量的语句之后，没有分号<code>;</code>。</p>
  </li>
  <li>
    <p><code class="language-c">break;</code>只能跳出一层循环。</p>
  </li>
  <li>
    <p><code class="language-c">continue;</code>。有意思的应用场景，结合<code>if</code>语句和<code>continue;</code>语句，在循环中<strong>条件性</strong>忽略一些语句。</p>
  </li>
  <li>
    <p><code>EOF</code>是文档结束的标志（End of File），在<code class="language-c">&lt;stdio.h&gt;</code>定义为一个整数<code>-1</code>，代码如下：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>definition of EOF in C </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#ifndef EOF</span>
</span><span class="line"><span class="cp"># define EOF (-1)</span>
</span><span class="line"><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>用单引号<code>''</code>标记的字符，对应的是ASCII的数字值。</p>
  </li>
  <li>
    <p><code>for</code>循环声明需要有主体；如无，在<code>for</code>语句后添加<code>;</code>作“无效声明（null statement）”。<strong>为了避免误解，<code>;</code>单独占一行</strong>，或者使用<code>{}</code>代替单独一行的<code>;</code>。</p>
  </li>
  <li>
    <p>顺序点（sequence point）</p>

    <ul>
      <li>
        <p><code class="language-c">&amp;&amp;</code>、<code class="language-c">||</code>和comma operators，左边和右边表达式之间。</p>
      </li>
      <li>
        <p>三元条件操作符<code class="language-c">?:</code>，在条件判断表达式与第二（第三）表达式之间。</p>
      </li>
      <li>
        <p>完整表达式结束，包括赋值、<code class="language-c">return</code>语句、<code class="language-c">if</code>/<code class="language-c">switch</code>/<code class="language-c">while</code>/<code class="language-c">do-while</code>条件表达式判断结束和<code class="language-c">for</code>三个表示式。</p>
      </li>
      <li>
        <p>函数的所有参数赋值和函数第一条语句执行之前（见后举例）。</p>
      </li>
      <li>
        <p>变量初始化语句结束，比如<code class="language-c">int a = 1;</code>。如果多个变量初始化（<code>,</code>分割），则在每一个<code>,</code>结束处，比如 <code class="language-c">int a = 1, b = 2;</code>。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code class="language-c">i++</code>与<code class="language-c">++i</code></p>

    <ul>
      <li>
        <p>大多数情况用于整数操作。</p>
      </li>
      <li>
        <p><code class="language-c">++i</code>马上自增，<code class="language-c">i++</code>自增则在两个相邻顺序点之间进行。表达式<code class="language-c">++i</code>值为<code>i+1</code>，表达式<code class="language-c">i++</code>值为<code>i</code>。</p>
      </li>
      <li>
        <p>表达式<code class="language-c">i++ == 0;</code>中，<code>i</code>使用原始数值，在表达式结束后自增；相反，表达式<code class="language-c">++i == 0;</code>中，<code>i</code>马上自增后与0比较。</p>
      </li>
      <li>
        <p>对于表达式<code class="language-c">f(i++)</code>，传入的参数值为<code>i</code>，但是在函数内部开始执行前，<code class="language-c">i</code>完成自增。这是因为在<strong>函数的所有参数赋值和函数第一条语句执行之前</strong>有一个<strong>顺序点</strong>。</p>
      </li>
      <li>
        <p>在<code class="language-c">for</code>语句中，使用<code class="language-c">for(i = 0; i &lt; 10; i++)</code>与<code class="language-c">for(i = 0; i &lt; 10; ++i)</code>效果一样。</p>
      </li>
      <li>
        <p>对于现代编译器，<code class="language-c">i++</code>和<code class="language-c">++i</code>的执行效率没有区别。所以写代码时，按照自认为最清楚的方式写。</p>
      </li>
    </ul>
  </li>
  <li>
    <p>未定义行为（undefined behavior）</p>

    <ul>
      <li>
        <p>一个表达式中既访问又修改同一个变量。</p>
      </li>
      <li>
        <p>数组访问超过下表上限。造成原因：很有可能是忘记<strong>数组从0开始索引</strong>。</p>
      </li>
      <li></li>
    </ul>
  </li>
  <li>
    <p>副作用（side effect）</p>

    <ul>
      <li>
        <p>所有赋值运算、<code class="language-c">i++</code>和<code class="language-c">++i</code>都有副作用，即改变原始变量的值。</p>
      </li>
      <li>
        <p>赋值运算的值是赋值操作后右侧的值，并且将其强制转换为左侧值类型；赋值运算左侧必须为“左值（lvalue）”。</p>
      </li>
      <li>
        <p>在同一个表达式，即访问某个变量，同时又修改这个变量，会造成<strong>“未定义行为”</strong>。有副作用的操作，会带来隐晦未定义行为。未定义行为会随着不同的编译器，而产生不同的结果。其危险性不仅在于阻碍跨平台使用，而且也会有程序运行失败或者得到意想不到结果。<strong>建议：不在一个表达式中即访问又修改同一个变量</strong>。一些典型的未定义行为的例子：</p>
      </li>
    </ul>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Undefined behavior in C </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp"># can not decide whether &quot;++&quot;, &quot;=&quot;, or &quot;+&quot; is the first</span>
</span><span class="line"><span class="n">a</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="n">i</span> <span class="o">=</span> <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="cp"># &quot;,&quot; is not comma operator</span>
</span><span class="line"><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="o">++</span><span class="n">i</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-9">5. 标准库</h2>

<h3 id="include-stdiohlanguage-c">5.1 <code class="language-c">#include &lt;stdio.h&gt;</code></h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%3.0f %6.1f</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">fahr</span><span class="p">,</span> <span class="n">celsius</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>%m.pX</code>：格式串模板，<code>m</code>表示要显示的最小字段宽度，<code>p</code>表示精度，<code>X</code>表示类型。</p>

<p>对于 <code class="language-c">printf()</code>函数：</p>

<ul>
  <li>
    <p><code>%d</code>：十进制整数。</p>

    <ul>
      <li>
        <p><code>%1d</code>一个十进制整数，配合<code>scanf()</code>实现单个整数输入操作。</p>
      </li>
      <li>
        <p><code>%6d</code>：十进制整数，至少6位宽，右对齐；如果数字位数超过6位，则全部显示。</p>
      </li>
      <li>
        <p><code>%-6d</code>：同上，区别左对齐。</p>
      </li>
      <li>
        <p><code>%-6.3d</code>：同上，如果数字位数少于3位，左侧加0。比如，<code class="language-c">printf(".2d%", 5)</code>的输出为<code>05</code>。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>%u</code>：无符号十进制数。</p>

    <ul>
      <li>
        <p><code>%o</code>：无符号八进制数。</p>
      </li>
      <li>
        <p><code>%x</code>：无符号十六进制数。</p>
      </li>
      <li>
        <p>没有标准方法打印负八进制和负十六进制数。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>%h</code>：短整数前缀。</p>

    <ul>
      <li>
        <p><code>%l</code>：长整数前缀。</p>
      </li>
      <li>
        <p><code>%ll</code>：长长整数前缀，<span style="color: green"><strong>C99</strong></span>特有。</p>
      </li>
      <li>
        <p><code>%h</code>、<code>%l</code>、<code>%ll</code>与<code>d</code>、<code>u</code>、<code>o</code>和<code>x</code>连用，比如<code>ho</code>表示无符号短八进制数。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>%f</code>：浮点数，默认小数位为6位。</p>

    <ul>
      <li>
        <p><code>%6f</code>：浮点数，至少6位宽。</p>
      </li>
      <li>
        <p><code>%6.0f</code>：浮点树，至少6位宽，无小数点而且无小数位。</p>
      </li>
      <li>
        <p><code>%.2f</code>：浮点数，小数点后两位。</p>
      </li>
      <li>
        <p><code>%6.2f</code>：浮点数，至少6位宽，小数点后两位。</p>
      </li>
      <li>
        <p><code>%e</code>：科学计数。</p>
      </li>
      <li>
        <p><code>%g</code>：科学计数或者浮点数。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>%l</code>：<code>double</code>型前缀。</p>

    <ul>
      <li>
        <p><code>%l</code>只在<code class="language-c">scanf()</code>中使用，在<code class="language-c">printf()</code>使用<code>%f</code>和<code>%e</code>（或者<code>%g</code>）表示<code>float</code>型和<code>double</code>型。</p>
      </li>
      <li>
        <p><span style="color: green"><strong>C99</strong></span>中允许在<code class="language-c">printf()</code>使用<code>%lf</code>、<code>%le</code>和<code>%lg</code>，但是<code>l</code>不起作用。</p>
      </li>
      <li>
        <p><code>%L</code>：<code>long double</code>型前缀。</p>
      </li>
      <li>
        <p><code>%l</code>和<code>%L</code>与<code>e</code>、<code>f</code>、<code>g</code>连用。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>%c</code>：字符。</p>
  </li>
  <li>
    <p><code>%s</code>：字符串。</p>
  </li>
  <li>
    <p><code>%%</code>：<code>%</code>自身。</p>
  </li>
</ul>

<p>对于<code class="language-c">scanf()</code>函数：</p>

<ul>
  <li>
    <p>格式串中出现空白字符（<strong>空格、水平或者垂直制表符、换页符、换行符</strong>），数量无关紧要，因为可以匹配任意数量（包括0个）空白字符。</p>
  </li>
  <li>
    <p><strong>不要输把空白字符（比如<code>"%d "</code>）放入格式串的结尾</strong>。原因：<code class="language-c">scanf()</code>会挂起，直到出现不能匹配的空白字符。</p>
  </li>
</ul>

<h2 id="span-stylecolor-greenc99span">6. <span style="color: green"><strong>C99</strong></span>注意事项</h2>

<ul>
  <li>
    <p>在<code>for</code>语句中声明的计数变量，只能在for循环中使用。比如 <code class="language-c">for(int i = 0; i &lt; 10; i++){...}</code>，变量<code>i</code>只能在循环内起作用。</p>
  </li>
  <li>
    <p>新增加表示布尔数值的头文件<code>&lt;stdbool.h&gt;</code>，使用方法</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>bool in <span style="color: green">C99</span> </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &lt;stdbool.h&gt;</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">bool</span> <span class="n">trueVal</span> <span class="o">=</span> <span class="nb">true</span><span class="p">,</span> <span class="n">falseVal</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>允许使用<code>typedef</code>定义占用特定位数（是“比特数”，不是“字节数”）的整数，比如：</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>typedef 32 bit integer </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &lt;stdint.h&gt;</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="k">typedef</span> <span class="kt">int32_t</span> <span class="n">Int32</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="a-idrefa"><a id="Ref">参考资料</a></h3>

<ul>
  <li>
    <p>BW Kernighan and DM Ritchie: <a href="http://www.amazon.com/The-Programming-Language-2nd-Edition/dp/0131103628">The C Programming Language (2nd Edition)</a>, 1988.</p>
  </li>
  <li>
    <p>KN King: <a href="http://www.amazon.com/Programming-Modern-Approach-2nd-Edition/dp/0393979504">C Programming: A Modern Approach, 2nd Edition</a>, 2008.</p>
  </li>
  <li>
    <p><a href="http://port70.net/~nsz/c/">C各种标准</a></p>
  </li>
  <li>
    <p><a href="http://ganquan.info/standard-c/">C函数库快速查询</a></p>
  </li>
</ul>

<h3 id="section-10">更新记录</h3>

<p>2014年12月7日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs配置C语言编程环境]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/12/02/emacs-config-c/"/>
    <updated>2014-12-02T06:36:41+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/12/02/emacs-config-c</id>
    <content type="html"><![CDATA[<p>有很多优秀的C语言IDE用来实现高效的编程，比如<a href="https://www.jetbrains.com/clion/">CLion</a>。目前，CLion还在处于公开测试阶段，可以下载试用。本文介绍在Emacs下配置C/C++编程环境。</p>

<!--more-->

<h2 id="section">1. 安装和基本配置</h2>

<h3 id="section-1">1.1. 安装需求</h3>

<ul>
  <li>安装<a href="http://www.gnu.org/software/global/">GNU Global</a></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># dnf install global llvm llvm-devel clang* </span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>安装Emacs的<code>helm</code>、<code>helm-swoop</code>、<code>helm-gtags</code>、<code>sr-speedbar</code>、<code>smartparens</code>、<code>google-c-style</code>、<code>auto-complete</code>、<code>auto-complete-c-headers</code>、<code>auto-complete-clang</code>包。</li>
</ul>

<h3 id="emacs">1.2. Emacs配置</h3>

<p>将<a href="#c-mode-config">附加环境设置</a>添加到Emacs设置文件，比如<code class="language-bash">~/.emacs</code>，此环境配置参考<a href="https://github.com/tuhdo/emacs-c-ide-demo/blob/master/custom/setup-helm.el">tuhdo</a>。</p>

<h2 id="section-2">2. 文件操作</h2>

<h3 id="section-3">2.1. 查找</h3>

<ul>
  <li>当前buffer查找函数、类的定义</li>
</ul>

<blockquote>
  <p><code>C-c h i</code>（helm-semantic-or-imenu）：可以输入部分关键词、空格等，以快速搜索。</p>
</blockquote>

<ul>
  <li>当前project查找定义</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p><code>M-.</code>（helm-gtags-dwim）：输入查找内容。<code>M-,</code>（tags-loop-continue）：返回上一个buffer。</p>
    </li>
    <li>
      <p><code>C-j</code>（helm-gtags-select）：列出当前project所有定义，并且查找。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li>查找引用</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p><code>C-c g r</code>（helm-gtags-find-rtags）：光标停留在函数内部，查找该函数名；如果光标停留在函数名，查找该函数的所有引用。</p>
    </li>
    <li>
      <p><code>C-c g s</code>（helm-gtags-find-symbol）：光标停留在变量时的查找。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li>查找当前函数引用的函数</li>
</ul>

<blockquote>
  <p><code>C-c g a</code>（helm-gtags-tags-in-this-function）</p>
</blockquote>

<ul>
  <li>查找文件</li>
</ul>

<blockquote>
  <p><code>C-c g P</code>（elm-gtags-find-files）</p>
</blockquote>

<h3 id="section-4">2.2. 列出源码树</h3>

<ul>
  <li>开启和关闭</li>
</ul>

<blockquote>
  <p><code>M-x sr-speedbar-open RET</code>：开启。<code>M-x sr-speedbar-close RET</code>：关闭。</p>
</blockquote>

<ul>
  <li>操作</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p><code>b</code>和<code>f</code>切换到当前buffer和所有文件列表。</p>
    </li>
    <li>
      <p><code>=</code>：展开。<code>g</code>：收回。</p>
    </li>
    <li>
      <p><code>U</code>：上一级目录。</p>
    </li>
  </ol>
</blockquote>

<h3 id="section-5">2.3 代码补全</h3>

<p>代码补全使用<code>auto-complete</code>、<code>auto-complete-c-headers</code>、<code>semantic</code>包。在使用<code>auto-complete-c-headers</code>自动补全头文件名称时，使用以下命令获得头文件路径：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>gcc -xc -E -v -
</span><span class="line"><span class="nv">$ </span>gcc -xc++ -E -v -
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://yulongniu.bionutshell.org/images/emacs_config_c_autocomplete.png" width="900" height="900" title="image" alt="images" /></p>

<h2 id="debug">3. 编译和debug</h2>

<h3 id="gcc">3.1 使用gcc编译</h3>

<p>使用<code>M-x compile</code>对源文件进行编译链接；或者开启ansi-term模式<code>M-x ansi-term</code>，进入shell操作。一个直接编译–汇编–链接的简单例子：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>gcc helloworld.c -o helloworld
</span><span class="line"><span class="nv">$ </span>./helloworld
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-6">附加内容</h2>

<p><a id="c-mode-config">C/C++的Emacs编程环境设置</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Emacs configure </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
<span class="line-number">164</span>
<span class="line-number">165</span>
<span class="line-number">166</span>
<span class="line-number">167</span>
<span class="line-number">168</span>
<span class="line-number">169</span>
<span class="line-number">170</span>
<span class="line-number">171</span>
<span class="line-number">172</span>
<span class="line-number">173</span>
<span class="line-number">174</span>
<span class="line-number">175</span>
<span class="line-number">176</span>
<span class="line-number">177</span>
<span class="line-number">178</span>
<span class="line-number">179</span>
<span class="line-number">180</span>
<span class="line-number">181</span>
<span class="line-number">182</span>
<span class="line-number">183</span>
<span class="line-number">184</span>
<span class="line-number">185</span>
<span class="line-number">186</span>
<span class="line-number">187</span>
<span class="line-number">188</span>
<span class="line-number">189</span>
<span class="line-number">190</span>
<span class="line-number">191</span>
<span class="line-number">192</span>
<span class="line-number">193</span>
<span class="line-number">194</span>
<span class="line-number">195</span>
<span class="line-number">196</span>
<span class="line-number">197</span>
<span class="line-number">198</span>
<span class="line-number">199</span>
<span class="line-number">200</span>
<span class="line-number">201</span>
<span class="line-number">202</span>
<span class="line-number">203</span>
<span class="line-number">204</span>
<span class="line-number">205</span>
<span class="line-number">206</span>
<span class="line-number">207</span>
<span class="line-number">208</span>
<span class="line-number">209</span>
<span class="line-number">210</span>
<span class="line-number">211</span>
<span class="line-number">212</span>
<span class="line-number">213</span>
</pre></td><td class="code"><pre><code class="emacs-lisp"><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;set up helm</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;helm-config</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;helm-grep</span><span class="p">)</span>
</span><span class="line"><span class="c1">;; The default &quot;C-x c&quot; is quite close to &quot;C-x C-c&quot;, which quits Emacs.</span>
</span><span class="line"><span class="c1">;; Changed to &quot;C-c h&quot;. Note: We must set &quot;C-c h&quot; globally, because we</span>
</span><span class="line"><span class="c1">;; cannot change `helm-command-prefix-key&#39; once `helm-config&#39; is loaded.</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c h&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-command-prefix</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-unset-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-x c&quot;</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;&lt;tab&gt;&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-execute-persistent-action</span><span class="p">)</span> <span class="c1">; rebihnd tab to do persistent action</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-i&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-execute-persistent-action</span><span class="p">)</span> <span class="c1">; make TAB works in terminal</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-z&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-select-action</span><span class="p">)</span> <span class="c1">; list actions using C-z</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-grep-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;&lt;return&gt;&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-grep-mode-jump-other-window</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-grep-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;n&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-grep-mode-jump-other-window-forward</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-grep-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;p&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-grep-mode-jump-other-window-backward</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">executable-find</span> <span class="s">&quot;curl&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="k">setq</span> <span class="nv">helm-google-suggest-use-curl-p</span> <span class="no">t</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="k">setq</span>
</span><span class="line"> <span class="nv">helm-scroll-amount</span> <span class="mi">4</span> <span class="c1">; scroll 4 lines other window using M-&lt;next&gt;/M-&lt;prior&gt;</span>
</span><span class="line"> <span class="nv">helm-quick-update</span> <span class="no">t</span> <span class="c1">; do not display invisible candidates</span>
</span><span class="line"> <span class="nv">helm-ff-search-library-in-sexp</span> <span class="no">t</span> <span class="c1">; search for library in `require&#39; and `declare-function&#39; sexp.</span>
</span><span class="line"> <span class="nv">helm-split-window-in-side-p</span> <span class="no">t</span> <span class="c1">;; open helm buffer inside current window, not occupy whole other window</span>
</span><span class="line"> <span class="nv">helm-candidate-number-limit</span> <span class="mi">500</span> <span class="c1">; limit the number of displayed canidates</span>
</span><span class="line"> <span class="nv">helm-ff-file-name-history-use-recentf</span> <span class="no">t</span>
</span><span class="line"> <span class="nv">helm-move-to-line-cycle-in-source</span> <span class="no">t</span> <span class="c1">; move to end or beginning of source when reaching top or bottom of source.</span>
</span><span class="line"> <span class="nv">helm-buffers-fuzzy-matching</span> <span class="no">t</span>          <span class="c1">; fuzzy matching buffer names when non-nil</span>
</span><span class="line">                                        <span class="c1">; useful in helm-mini that lists buffers</span>
</span><span class="line">
</span><span class="line"> <span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;helm-sources-using-default-as-input</span> <span class="ss">&#39;helm-source-man-pages</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-x&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-M-x</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-y&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-show-kill-ring</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-x b&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-mini</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-x C-f&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-find-files</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-h SPC&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-all-mark-rings</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c h o&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-occur</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c h C-c w&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-wikipedia-suggest</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c h x&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-register</span><span class="p">)</span>
</span><span class="line"><span class="c1">;; (global-set-key (kbd &quot;C-x r j&quot;) &#39;jump-to-register)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="ss">&#39;help-command</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-f&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-apropos</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="ss">&#39;help-command</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;r&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-info-emacs</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="ss">&#39;help-command</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-l&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-locate-library</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; use helm to list eshell history</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;eshell-mode-hook</span>
</span><span class="line">          <span class="nf">#&#39;</span><span class="p">(</span><span class="k">lambda</span> <span class="p">()</span>
</span><span class="line">              <span class="p">(</span><span class="nv">define-key</span> <span class="nv">eshell-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-l&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-eshell-history</span><span class="p">)))</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;; Save current position to mark ring</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;helm-goto-line-before-hook</span> <span class="ss">&#39;helm-save-current-pos-to-mark-ring</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; show minibuffer history with Helm</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">minibuffer-local-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-p&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-minibuffer-history</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">minibuffer-local-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-n&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-minibuffer-history</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">find-tag]</span> <span class="ss">&#39;helm-etags-select</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">list-buffers]</span> <span class="ss">&#39;helm-buffers-list</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;; PACKAGE: helm-swoop                ;;</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;; Locate the helm-swoop folder to your path</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;helm-swoop</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; Change the keybinds to whatever you like :)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c h o&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-swoop</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c s&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-multi-swoop-all</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; When doing isearch, hand the word over to helm-swoop</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">isearch-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-i&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-swoop-from-isearch</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; From helm-swoop to helm-multi-swoop-all</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-swoop-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-i&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-multi-swoop-all-from-helm-swoop</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; Save buffer when helm-multi-swoop-edit complete</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-multi-swoop-edit-save</span> <span class="no">t</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; If this value is t, split window inside the current window</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-swoop-split-with-multiple-windows</span> <span class="no">t</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; Split direcion. &#39;split-window-vertically or &#39;split-window-horizontally</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-swoop-split-direction</span> <span class="ss">&#39;split-window-vertically</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;; If nil, you can slightly boost invoke speed in exchange for text color</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-swoop-speed-or-color</span> <span class="no">t</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">helm-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nb">provide</span> <span class="ss">&#39;setup-helm</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;setup-helm</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span>
</span><span class="line"> <span class="nv">helm-gtags-ignore-case</span> <span class="no">t</span>
</span><span class="line"> <span class="nv">helm-gtags-auto-update</span> <span class="no">t</span>
</span><span class="line"> <span class="nv">helm-gtags-use-input-at-cursor</span> <span class="no">t</span>
</span><span class="line"> <span class="nv">helm-gtags-pulse-at-cursor</span> <span class="no">t</span>
</span><span class="line"> <span class="nv">helm-gtags-prefix-key</span> <span class="s">&quot;\C-cg&quot;</span>
</span><span class="line"> <span class="nv">helm-gtags-suggested-key-mapping</span> <span class="no">t</span>
</span><span class="line"> <span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;helm-gtags</span><span class="p">)</span>
</span><span class="line"><span class="c1">;; Enable helm-gtags-mode</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;dired-mode-hook</span> <span class="ss">&#39;helm-gtags-mode</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;eshell-mode-hook</span> <span class="ss">&#39;helm-gtags-mode</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c-mode-hook</span> <span class="ss">&#39;helm-gtags-mode</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c++-mode-hook</span> <span class="ss">&#39;helm-gtags-mode</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;asm-mode-hook</span> <span class="ss">&#39;helm-gtags-mode</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c g a&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-gtags-tags-in-this-function</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-j&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-gtags-select</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-.&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-gtags-dwim</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;M-,&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-gtags-pop-stack</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c &lt;&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-gtags-previous-history</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-c &gt;&quot;</span><span class="p">)</span> <span class="ss">&#39;helm-gtags-next-history</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;enable semantic mode</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;cc-mode</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;semantic</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">global-semanticdb-minor-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-semantic-idle-scheduler-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-semantic-idle-summary-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">global-semantic-stickyfunc-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nv">semantic-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;open hs-mode</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c-mode-common-hook</span>   <span class="ss">&#39;hs-minor-mode</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;google-c-style</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c-mode-common-hook</span> <span class="ss">&#39;google-set-c-style</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c-mode-common-hook</span> <span class="ss">&#39;google-make-newline-indent</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;smartparens</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;smartparens-config</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">show-smartparens-global-mode</span> <span class="no">t</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">smartparens-global-mode</span> <span class="no">t</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">; auto-complete</span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;auto-complete</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;auto-complete-config</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">ac-config-default</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;; auto-complete-c-headers </span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nb">defun</span> <span class="nv">my:ac-c-header-init</span><span class="p">()</span>
</span><span class="line">  <span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;auto-complete-c-headers</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;ac-sources</span> <span class="ss">&#39;ac-source-c-headers</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;achead:include-directories</span> <span class="o">&#39;</span><span class="s">&quot;/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;achead:include-directories</span> <span class="o">&#39;</span><span class="s">&quot;/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/x86_64-redhat-linux&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;achead:include-directories</span> <span class="o">&#39;</span><span class="s">&quot;/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/backward&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;achead:include-directories</span> <span class="o">&#39;</span><span class="s">&quot;/usr/lib/gcc/x86_64-redhat-linux/4.9.2/include&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;achead:include-directories</span> <span class="o">&#39;</span><span class="s">&quot;/usr/local/include&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">&#39;achead:include-directories</span> <span class="o">&#39;</span><span class="s">&quot;/usr/include&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c++-mode-hook</span> <span class="ss">&#39;my:ac-c-header-init</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c-mode-hook</span> <span class="ss">&#39;my:ac-c-header-init</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="c1">;; auto-complete-clang </span>
</span><span class="line"><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class="line"><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;auto-complete-clang</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span> <span class="nv">ac-auto-start</span> <span class="no">t</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="k">setq</span> <span class="nv">ac-quick-help-delay</span> <span class="mf">0.5</span><span class="p">)</span>
</span><span class="line"><span class="c1">;; (ac-set-trigger-key &quot;TAB&quot;)</span>
</span><span class="line"><span class="c1">;; (define-key ac-mode-map  [(control tab)] &#39;auto-complete)</span>
</span><span class="line"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">ac-mode-map</span>  <span class="nv">[</span><span class="p">(</span><span class="nv">control</span> <span class="nv">tab</span><span class="p">)</span><span class="nv">]</span> <span class="ss">&#39;auto-complete</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">defun</span> <span class="nv">my-ac-config</span> <span class="p">()</span>
</span><span class="line">  <span class="p">(</span><span class="k">setq</span> <span class="nv">ac-clang-flags</span>
</span><span class="line">	<span class="p">(</span><span class="nb">mapcar</span><span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">item</span><span class="p">)(</span><span class="nv">concat</span> <span class="s">&quot;-I&quot;</span> <span class="nv">item</span><span class="p">))</span>
</span><span class="line">	       <span class="p">(</span><span class="nv">split-string</span>
</span><span class="line">		<span class="s">&quot;</span>
</span><span class="line"><span class="s">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2</span>
</span><span class="line"><span class="s">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/x86_64-redhat-linux</span>
</span><span class="line"><span class="s">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/backward</span>
</span><span class="line"><span class="s">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/include</span>
</span><span class="line"><span class="s">/usr/local/include</span>
</span><span class="line"><span class="s">/usr/include&quot;</span>
</span><span class="line">		<span class="p">)))</span>
</span><span class="line">  <span class="p">(</span><span class="nv">setq-default</span> <span class="nv">ac-sources</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">ac-source-abbrev</span> <span class="nv">ac-source-dictionary</span> <span class="nv">ac-source-words-in-same-mode-buffers</span><span class="p">))</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;emacs-lisp-mode-hook</span> <span class="ss">&#39;ac-emacs-lisp-mode-setup</span><span class="p">)</span>
</span><span class="line">  <span class="c1">;; (add-hook &#39;c-mode-common-hook &#39;ac-cc-mode-setup)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;ruby-mode-hook</span> <span class="ss">&#39;ac-ruby-mode-setup</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;css-mode-hook</span> <span class="ss">&#39;ac-css-mode-setup</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;auto-complete-mode-hook</span> <span class="ss">&#39;ac-common-setup</span><span class="p">)</span>
</span><span class="line">  <span class="p">(</span><span class="nv">global-auto-complete-mode</span> <span class="no">t</span><span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nb">defun</span> <span class="nv">my-ac-cc-mode-setup</span> <span class="p">()</span>
</span><span class="line">  <span class="p">(</span><span class="k">setq</span> <span class="nv">ac-sources</span> <span class="p">(</span><span class="nb">append</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">ac-source-clang</span> <span class="nv">ac-source-yasnippet</span><span class="p">)</span> <span class="nv">ac-sources</span><span class="p">)))</span>
</span><span class="line"><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;c-mode-common-hook</span> <span class="ss">&#39;my-ac-cc-mode-setup</span><span class="p">)</span>
</span><span class="line"><span class="c1">;; ac-source-gtags</span>
</span><span class="line"><span class="p">(</span><span class="nv">my-ac-config</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-7">参考资料</h3>

<ul>
  <li>
    <p><a href="http://tuhdo.github.io/c-ide.html#sec-1-3">C/C++ Development Environment for Emacs</a></p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=HTUE03LnaXA">YouTube Vedio</a></p>
  </li>
</ul>

<h3 id="section-8">更新记录</h3>

<p>2014年12月7日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[二代测序中的短序列比对]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/07/26/short-sequence-alignment/"/>
    <updated>2014-07-26T02:04:25+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/07/26/short-sequence-alignment</id>
    <content type="html"><![CDATA[<p>在二代测序数据分析中，非常重要的一步是将测得的短序列“对应”到基因组上。所使用的工具被称为“短序列比对工具（short sequence aligners）”。以下是一些常用工具的介绍。</p>

<h2 id="bowtie">1. Bowtie</h2>

<p><strong>简介</strong>：<a href="http://bowtie-bio.sourceforge.net/">Bowtie2</a>是现在广泛使用的序列比对工具。</p>

<p><strong>运行方式</strong>：所有平台</p>

<p><strong>特点</strong>：</p>

<ul>
  <li>
    <p>相比较<a href="http://bowtie-bio.sourceforge.net/index.shtml">Bowtie1</a>，处理大于50bp的短序列，速度更快、也更敏感。Bowtie1在处理小于50bp的短序列上，效果更好。</p>
  </li>
  <li>
    <p><a href="http://support.illumina.com/sequencing/sequencing_software/igenome.ilmn">iGenomes</a>提供一些事先编排（index）的基因组。
<!--more--></p>
  </li>
</ul>

<p><strong>快速运行</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 建立一系列FASTA文件目录</span>
</span><span class="line"><span class="nv">$ </span>bowtie2-build /filePath/genomeFastaFile indexName
</span><span class="line">
</span><span class="line"><span class="c"># 从已经index文件中提取原始基因组</span>
</span><span class="line"><span class="nv">$ </span>bowtie2-inspect indexName &gt; genomeFastaFile
</span><span class="line">
</span><span class="line"><span class="c"># unpaired序列比对</span>
</span><span class="line"><span class="nv">$ </span>bowtie2 -p <span class="m">4</span> -x indexName -U readFiles -S samFileName
</span><span class="line">
</span><span class="line"><span class="c"># paired序列比对</span>
</span><span class="line"><span class="nv">$ </span>bowtie2 -p <span class="m">4</span> -x indexName  -1 readFiles1 -2 readFiles2 -S eg2.sam
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p><code>-p</code>：多线程</p>
  </li>
  <li>
    <p><code>-x</code>：之后跟index名称</p>
  </li>
  <li>
    <p><code>-U</code>：测序文件（比如Fasta，Fastq文件）</p>
  </li>
  <li>
    <p><code>-1</code>/<code>-2</code>：标识paired文件</p>
  </li>
  <li>
    <p><code>-S</code>：SAM格式输出文件</p>
  </li>
</ul>

<h3 id="section">参考网址</h3>

<ul>
  <li><a href="http://lh3lh3.users.sourceforge.net/NGSalign.shtml">Heng Li总结的工具列表</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装和使用]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/07/23/octopress-install/"/>
    <updated>2014-07-23T01:45:46+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/07/23/octopress-install</id>
    <content type="html"><![CDATA[<p>安装和使用Octopress的一些注意事项，详细的内容可以<a href="#Ref">参考网址</a>。</p>

<h2 id="section">1. 安装</h2>

<p>请参考<a href="http://octopress.org/">官网</a>，其他的博客介绍的安装已经失效或者错误。</p>

<p>常用命令:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 预览，可自动更新。使用Ctrl+c终止。</span>
</span><span class="line"><span class="nv">$ </span>rake preview
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="ruby">2. Ruby版本调整</h2>

<p>因为Octopress需要使用Ruby旧版本，推荐使用<a href="https://rvm.io/">RVM</a>安装Ruby 1.9.3版本。在安转过程中可能会出现<code>"gpg: Can't check signature: public key not found"</code>的错误提示，需要执行一下类似命名，添加公用匙。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>使用以下操作设定ruby版本：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span><span class="nb">source</span> ~/.rvm/scripts/rvm
</span><span class="line"><span class="nv">$ </span>rvm use 1.9.3
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<h2 id="section-1">3. 预览错误</h2>

<p>如果在预览博文时出现<code class="language-bash">TCPServer Error: Address already in use - bind(2)</code>的错误，表示端口（Octopress默认4000）被占，解决办法:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 获取占据4000端口程序的PID</span>
</span><span class="line"><span class="nv">$ </span>lsof -wni tcp:4000
</span><span class="line"><span class="nv">$ </span><span class="nb">kill</span> -9 PID
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">4. 更新博文</h2>

<p>博文放置在<code class="language-bash">source/_posts</code>目录下。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>rake new_post<span class="o">[</span><span class="s2">&quot;new post&quot;</span><span class="o">]</span>
</span><span class="line"><span class="nv">$ </span>git add .
</span><span class="line"><span class="nv">$ </span>git commit -m <span class="s2">&quot;my comment&quot;</span>
</span><span class="line"><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span><span class="line"><span class="nv">$ </span>rake generate
</span><span class="line"><span class="nv">$ </span>rake deploy
</span><span class="line">
</span><span class="line"><span class="c"># 或者generate和deploy一步执行</span>
</span><span class="line"><span class="nv">$ </span>rake gen_deploy
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>如果需要在首页显示部分博文，在需要隔断的地方（博文markdown文件）加入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="c">&lt;!--more--&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">5. 使用主题</h2>

<p>当前博客使用的是<a href="http://kaworu.github.io/octopress/">octostrap</a>主题。</p>

<ul>
  <li>
    <p><a href="http://kaworu.github.io/octostrap3/blog/2013/10/03/category-list-aside/">添加Category侧边栏</a></p>
  </li>
  <li>
    <p><a href="http://kaworu.github.io/octostrap3/blog/2013/10/02/pick-a-theme-for-only-one-page/">每个页面更换主题</a></p>
  </li>
  <li>
    <p><a href="http://kaworu.github.io/octostrap3/setup/pick-a-theme/">选择Bootstrap主题</a></p>
  </li>
</ul>

<h2 id="section-4">6. 修改标签图标记</h2>

<p>可以使用<a href="http://converticon.com/">在线转换工具</a>，将png格式图片转换为ico格式（比如32*32），例如文件<code>favicon.ico</code>。之后，将<code>favicon.ico</code>移动到<code class="language-bash">source/</code>目录下。之后修改文件<code class="language-bash">source/_includes/head.html</code>，找到<code>favicon.png</code>将其改为<code>favicon.ico</code>。</p>

<h2 id="section-5">7. 404公益</h2>

<p>在<code class="language-bash">source</code>文件夹下添加<em>404.markdown</em>文件，之后写入</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="o">---</span>
</span><span class="line"><span class="nx">layout</span><span class="o">:</span> <span class="nx">page</span>
</span><span class="line"><span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;404 Error&quot;</span>
</span><span class="line"><span class="nx">date</span><span class="o">:</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">07</span><span class="o">-</span><span class="mi">22</span>
</span><span class="line"><span class="nx">comments</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="nx">sharing</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="nx">footer</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="o">---</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://www.qq.com/404/search_children.js?edition=small&quot;</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-6">8. 私密博文</h2>

<p>Octopress提供了隐藏博文的功能，即使文章已经推送到了github，也可以不在博客主页显示。具体方法是在每篇markdown文件头部添加：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="ss">published</span><span class="p">:</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果需要公开发表，将其删除或者改为：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="ss">published</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-7">9. 代码高亮设置</h2>

<p>安装<code>coderay</code>和<code>kramdown</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>gem install coderay
</span><span class="line"><span class="nv">$ </span>gem install kramdown
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在<code class="language-bash">_config.yml</code>文件中写入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">markdown: kramdown
</span><span class="line">kramdown:
</span><span class="line">  use_coderay: <span class="nb">true</span>
</span><span class="line"><span class="nb">  </span>coderay:
</span><span class="line">    coderay_line_numbers: table
</span><span class="line">    coderay_css: class
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="kramdown">10. Kramdown语法小技巧</h2>

<ul>
  <li>代码高亮</li>
</ul>

<p>代码段高亮参考<a href="http://octopress.org/docs/plugins/codeblock/">Octopress codeblock</a>，其中<code>[lang:language]</code>设置高亮语言种类。<code>[url]</code>和<code>[linktext]</code>非必须。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">{% codeblock [lang:language] [title] [url] [link text] %}
</span><span class="line">code snippet
</span><span class="line">{% endcodeblock %}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>行内引用代码使用
<code>`source/_includes/custom/head.html`{:.language-bash}</code></p>

<ul>
  <li>四个空格或者一个Tab可以生成一个文本块</li>
</ul>

<h2 id="section-8">11. 链接在新的选择卡中打开</h2>

<p>在<code class="language-bash">source/_includes/custom/head.html</code>的末尾添加：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="c">&lt;!-- link open with new tab  --&gt;</span>
</span><span class="line"><span class="nt">&lt;script&gt;</span>
</span><span class="line">  <span class="kd">function</span> <span class="nx">addBlankTargetForLinks</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;a[href^=&quot;http&quot;]&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;_blank&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;DOMNodeInserted&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">addBlankTargetForLinks</span><span class="p">();</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-9">12. 修改分页数</h2>

<p>修改<code class="language-bash">_config.yml</code>文件</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 每页最多展示的博文数目</span>
</span><span class="line">paginate: 5
</span><span class="line">
</span><span class="line"><span class="c"># 分页后博文地址</span>
</span><span class="line">paginate_path: <span class="s2">&quot;posts/:num&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-10">13. 添加图片</h2>

<p>将需要添加的图片移动到目录<code class="language-bash">source/images/</code>，之后在正文中添加：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">&lt;img <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;[class names]&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/path/to/image&quot;</span> <span class="nv">title</span><span class="o">=</span><span class="s2">&quot;[width] [height] [title text [alt text]]&quot;</span> &gt;
</span><span class="line">
</span><span class="line"><span class="c"># 例子</span>
</span><span class="line">&lt;img <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;left&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/images/testimg.png&quot;</span> <span class="nv">width</span><span class="o">=</span><span class="s2">&quot;350&quot;</span> <span class="nv">height</span><span class="o">=</span><span class="s2">&quot;350&quot;</span> <span class="nv">title</span><span class="o">=</span><span class="s2">&quot;image&quot;</span> <span class="nv">alt</span><span class="o">=</span><span class="s2">&quot;images&quot;</span>&gt;
</span><span class="line">&lt;img <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;right&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;http://placekitten.com/300/500&quot;</span> <span class="nv">width</span><span class="o">=</span><span class="s2">&quot;150&quot;</span> <span class="nv">height</span><span class="o">=</span><span class="s2">&quot;250&quot;</span> <span class="nv">title</span><span class="o">=</span><span class="s2">&quot;Place Kitten #3&quot;</span> &gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-11">14. 添加新页面</h2>

<p>首先，添加新的页面：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">rake new_page<span class="o">[</span>ANewPage<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这会生成一个新的文件<code class="language-bash">source/anewpage/index.markdown</code>。之后，修改<code class="language-bash">source/_includes/custom/navigation.html</code>文件，根据自己主题，添加如下类似内容</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;li {% if page.navbar == 'ANewPage' %}class="active"{% endif %}&gt;
</span><span class="line">  &lt;a href="{{ root_url }}/anewpage"&gt;ANewPage&lt;/a&gt;
</span><span class="line">&lt;/li&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-12">15. 添加表格</h2>

<p>建立新文件<code>source/stylesheets/data-table.css</code>，写入以下内容，其中<code>#00B9E3</code>是表头的背景颜色，可以更改为自己喜欢的颜色：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>data-table </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="p">{</span>
</span><span class="line">  <span class="k">border-style</span><span class="o">:</span><span class="k">solid</span><span class="p">;</span>
</span><span class="line">  <span class="k">border-width</span><span class="o">:</span><span class="m">1px</span><span class="p">;</span>
</span><span class="line">  <span class="k">border-color</span><span class="o">:</span><span class="m">#e7e3e7</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">,</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span> <span class="p">{</span>
</span><span class="line">  <span class="k">border-style</span><span class="o">:</span><span class="k">dashed</span><span class="p">;</span>
</span><span class="line">  <span class="k">border-width</span><span class="o">:</span><span class="m">1px</span><span class="p">;</span>
</span><span class="line">  <span class="k">border-color</span><span class="o">:</span><span class="m">#e7e3e7</span><span class="p">;</span>
</span><span class="line">  <span class="k">padding-left</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span>
</span><span class="line">  <span class="k">padding-right</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span> <span class="p">{</span>
</span><span class="line">  <span class="k">border-style</span><span class="o">:</span><span class="k">solid</span><span class="p">;</span>
</span><span class="line">  <span class="k">font-weight</span><span class="o">:</span><span class="k">bold</span><span class="p">;</span>
</span><span class="line">  <span class="k">background</span><span class="o">:</span> <span class="sx">url(&quot;/images/noise.png?1330434582&quot;)</span> <span class="k">repeat</span> <span class="k">scroll</span> <span class="k">left</span> <span class="k">top</span> <span class="m">#00B9E3</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">],</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class="line">  <span class="k">text-align</span><span class="o">:</span><span class="k">left</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">],</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class="line">  <span class="k">text-align</span><span class="o">:</span><span class="k">right</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">],</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class="line">  <span class="k">text-align</span><span class="o">:</span><span class="k">center</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>之后，在<code>source/_includes/head.html</code>中修改或者添加：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">
</span><span class="line">&lt;link href="{{ root_url }}/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css"&gt;
</span><span class="line">{% if page.styles contains 'data-table' %}
</span><span class="line">&lt;link href="{{ root_url }}/stylesheets/data-table.css" media="screen, projection" rel="stylesheet" type="text/css" /&gt;
</span><span class="line">{% endif %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>使用方法，在每篇博客头部位置添加<code>styles: [data-table]</code>，之后使用表格样式即可。如果使用Kramdown，表格对其方法如下：</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: left"><strong>X/Y</strong></th>
      <th style="text-align: center"><strong>1(Presence)</strong></th>
      <th style="text-align: center"><strong>0(Absence)</strong></th>
      <th style="text-align: right"><strong>Sum</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>1(Presence)</strong></td>
      <td style="text-align: center">a</td>
      <td style="text-align: center">b</td>
      <td style="text-align: right">a+b</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>0(Absence)</strong></td>
      <td style="text-align: center">c</td>
      <td style="text-align: center">d</td>
      <td style="text-align: right">c+d</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>Sum</strong></td>
      <td style="text-align: center">a+c</td>
      <td style="text-align: center">b+d</td>
      <td style="text-align: right">n=a+b+c+d</td>
    </tr>
  </tbody>
</table>

<hr />

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">|---------------+---------------+--------------+---------|
</span><span class="line">|**X/Y**        |**1(Presence)**|**0(Absence)**|**Sum**  |
</span><span class="line">|:--------------|:-------------:|:------------:|--------:|
</span><span class="line">|**1(Presence)**|a              |b             |a+b      |
</span><span class="line">|---------------|---------------|--------------|---------|
</span><span class="line">|**0(Absence)** |c              |d             |c+d      |
</span><span class="line">|---------------|---------------|--------------|---------|
</span><span class="line">|**Sum**        |a+c            |b+d           |n=a+b+c+d|
</span><span class="line">|---------------|---------------|--------------|---------|</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果使用Emacs，可以使用Emacs的<a href="http://orgmode.org/">org模式</a>快速建立和编辑表格。</p>

<h2 id="github">16. 重新克隆github上的博文和设置</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Re-set Octopress on local computer </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 注意切换到指定ruby版本</span>
</span><span class="line"><span class="c"># 克隆source分支到本地</span>
</span><span class="line"><span class="nv">$ </span>git clone -b <span class="nb">source </span>git@github.com:usrname/usrname.github.io.git octopress
</span><span class="line">
</span><span class="line"><span class="c"># 克隆master分支到_deploy文件夹</span>
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>octopress
</span><span class="line"><span class="nv">$ </span>git clone git@github.com:usrname/usrname.github.io.git _deploy
</span><span class="line">
</span><span class="line"><span class="c"># 安装bundle</span>
</span><span class="line"><span class="nv">$ </span>gem install bundler
</span><span class="line"><span class="nv">$ </span>bundle install
</span><span class="line">
</span><span class="line"><span class="c"># 重新关联github账户</span>
</span><span class="line"><span class="c"># 按照提示输入github的地址</span>
</span><span class="line"><span class="nv">$ </span>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如何遇到类似<code class="language-bash">error: failed to push some refs to</code>的错误，参考 <a href="http://stackoverflow.com/questions/24114676/git-error-failed-to-push-some-refs-to">stackoverflow</a>解决。</p>

<h2 id="section-13">17. 多台电脑共同编写博客</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Writing Octopress on more than one computer </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 设定好Octopress，假定Octopress目录为octopress</span>
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>octopress
</span><span class="line"><span class="nv">$ </span>git pull origin <span class="nb">source</span>
</span><span class="line"><span class="nv">$ </span><span class="nb">cd</span> ./_deploy
</span><span class="line"><span class="nv">$ </span>git pull origin master
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="a-idrefa"><a id="Ref">参考资料</a></h3>

<ul>
  <li>
    <p>Octopress安装和域名设置：<a href="http://tchen.me/posts/2012-12-16-first-blog.html">1</a>, <a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">2</a></p>
  </li>
  <li>
    <p>Octopress其他配制：<a href="http://812lcl.com/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi/">1</a>, <a href="http://cn.soulmachine.me/blog/20130402/">2</a></p>
  </li>
  <li>
    <p>添加多说：<a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">1</a>, <a href="http://kaiimeng.cn/my-first-octopress-blog/">2</a>, <a href="http://cn.soulmachine.me/blog/20130402/">3</a></p>
  </li>
  <li>
    <p>添加Mathjax支持：<a href="http://yanping.me/cn/blog/2012/03/10/octopress-with-latex/">1</a>, <a href="http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/">2</a>, <a href="http://adereth.github.io/blog/2013/11/29/colorful-equations/">Mathjax彩色公式</a></p>
  </li>
  <li>
    <p><a href="http://kramdown.gettalong.org/syntax.html">Kramdown语法</a></p>
  </li>
  <li>
    <p><a href="http://kramdown.gettalong.org/quickref.html">Kramdown演示</a></p>
  </li>
  <li>
    <p><a href="http://i.rexdf.org/blog/2014/09/26/octopressbo-ke-geng-xin-ri-zhi/">pygments错误详细提示</a></p>
  </li>
  <li>
    <p><a href="http://pygments.org/docs/lexers/">Octopress highlight language list</a></p>
  </li>
  <li>
    <p>标记Octopress自身语法：<a href="http://stackoverflow.com/questions/15786144/how-to-escape-in-markdown-on-octopress">1</a>，<a href="http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags/13582517#13582517">2</a></p>
  </li>
  <li>
    <p><a href="http://programus.github.io/blog/2012/03/07/add-table-data-css-for-octopress/">Octopress添加表格</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/hankai1024/article/details/12786201">Octopress重装或者多台电脑上并行写作同步</a>和<a href="http://boboshone.com/blog/2013/06/05/write-octopress-blog-on-multiple-machines/">在多台电脑上写Octopress博客</a></p>
  </li>
</ul>

<h3 id="section-14">更新记录</h3>

<p>2015年6月28日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Post]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/07/05/my-first-post/"/>
    <updated>2014-07-05T10:04:38+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/07/05/my-first-post</id>
    <content type="html"><![CDATA[<p>This is my first post. I want to say something. Then say something.</p>

<p>This is a piece of html code <code class="language-html">&lt;html&gt;</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">what?</span>
</span><span class="line">  <span class="mi">42</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<ol>
  <li>
    <p>Mathjax supports.</p>

    <script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align*}
   & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
   = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
   & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
   \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
   \vdots & \ddots & \vdots \\
   \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
 \end{array} \right)
   \left( \begin{array}{c}
   y_1 \\
   \vdots \\
   y_n
 \end{array} \right)
 \end{align*} %]]&gt;</script>
  </li>
  <li>
    <p>Colorful mathjax euqation.</p>

    <script type="math/tex; mode=display">\definecolor{energy}{RGB}{114,0,172}
 \definecolor{freq}{RGB}{45,177,93}
 \definecolor{spin}{RGB}{251,0,29}
 \definecolor{signal}{RGB}{18,110,213}
 \definecolor{circle}{RGB}{217,86,16}
 \definecolor{average}{RGB}{203,23,206}
 \color{energy} X_{\color{freq} k} \color{black} =
 \color{average} \frac{1}{N} \sum_{n=0}^{N-1}
 \color{signal}x_n \color{spin}
 e^{\mathrm{i} \color{circle} 2\pi \color{freq}k
 \color{average} \frac{n}{N}}</script>

    <p>To find <font color="#7200AC">the energy</font></p>
    <font color="2DB15D">at a particular frequency</font>
    <p>,</p>
    <font color="#FB001D">spin</font>
    <font color="#126ED5">your
 signal</font>
    <font color="#D04400">around a circle</font>
    <font color="2DB15D">at that frequency</font>
    <p>, and</p>
    <font color="#CB17CE">average a bunch of points along that
 path</font>
    <p>.</p>
  </li>
</ol>

<ul>
  <li>Show the block.</li>
</ul>

<blockquote>
  <p>This is the block</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R使用parallel包并行计算]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/06/25/parallel-package/"/>
    <updated>2014-06-25T10:10:20+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/06/25/parallel-package</id>
    <content type="html"><![CDATA[<p>最新版本的R已经内置<span style="color: blue">parallel</span>包，<span style="color: blue">parallel</span>包是从<span style="color: blue"><a href="http://cran.r-project.org/web/packages/snow/index.html">snow</a></span>包和<span style="color: blue"><a href="http://cran.r-project.org/web/packages/multicore/index.html">multicore</a></span>包继承而来，包含了很多非常好用的函数。<span style="color: blue">parallel</span>包可以通过PVM（<span style="color: blue">rpvm</span>包）、MPI（<span style="color: blue"><a href="http://cran.r-project.org/web/packages/Rmpi/index.html">Rmpi</a></span>包）、NetWorkSpaces（<span style="color: blue"><a href="http://cran.r-project.org/web/packages/nws/index.html">nws</a></span>包）和raw sockets（如果以上3种都不能使用）平台进行分布计算，支持cluster和多核个人/服务器计算机。在Linux系统上，通常使用<a href="http://www.open-mpi.org/">openMPI</a>。</p>

<h2 id="span-stylecolor-bluermpispan">1. 安装<span style="color: blue">Rmpi</span>包</h2>

<p>因为使用openMPI，所以<span style="color: blue">parallel</span>包需要<span style="color: blue">Rmpi</span>包来设定节点，所以首先需要在计算机上安装openMPI。</p>

<!--more-->

<h3 id="linuxopenmpi">1.1 Linux系统下安装openMPI环境</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># 安装openmpi环境</span>
</span><span class="line"><span class="c"># yum install openmpi openmpi-devel</span>
</span><span class="line">
</span><span class="line"><span class="c"># 配置环境（安装时执行，可能之后运行也要执行）</span>
</span><span class="line"><span class="c"># ldconfig /usr/lib64/openmpi/lib/</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在<code class="language-bash">~/.bashrc</code>下写入</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">
</span><span class="line"><span class="nb">export </span><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span><span class="s2">&quot;${LD_LIBRARY_PATH}${LD_LIBRARY_PATH:+:}/usr/lib64/openmpi/lib/&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>载入<code class="language-bash">~/.bashrc</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">
</span><span class="line"><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="rmpi">1.2 安装Rmpi包</h3>

<p>在启动的R窗口中输入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">install.packages<span class="p">(</span><span class="s">&quot;Rmpi&quot;</span><span class="p">,</span>
</span><span class="line">                 configure.args <span class="o">=</span>
</span><span class="line">                 <span class="kt">c</span><span class="p">(</span><span class="s">&quot;--with-Rmpi-include=/usr/include/openmpi-x86_64/&quot;</span><span class="p">,</span>
</span><span class="line">                   <span class="s">&quot;--with-Rmpi-libpath=/usr/lib64/openmpi/lib/&quot;</span><span class="p">,</span>
</span><span class="line">                   <span class="s">&quot;--with-Rmpi-type=OPENMPI&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="span-stylecolor-blueparallelspan">2. 使用<span style="color: blue">parallel</span>包</h2>

<h3 id="section">2.1 设定节点数</h3>

<p>首先，需要设定cluster的节点（nodes）数目</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">cl <span class="o">&lt;-</span> makeCluster<span class="p">(</span><span class="m">2</span><span class="p">,</span> type <span class="o">=</span> <span class="s">&quot;MPI&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这里对“节点数”设定做一些解释，如果使用cluster，可以直接设定cluster数据即可；如果是在小型服务器或者个人电脑上使用，最大节点数可以设定为“线程数（processor）-1”。比如一个双核四线程计算机，节点数目最大可以设定为3。这是因为<span style="color: blue">snow</span>包（<span style="color: blue">parallel</span>包的主要依赖包）在设计时，总是要保留一个<strong>“主线程”</strong>来处理和整合数据。</p>

<p>在linux系统下，线程数可以通过 <code class="language-bash">$ nproc</code> 查看。</p>

<h3 id="section-1">2.2 内置函数</h3>

<p>使用<span style="color: blue">parallel</span>包中的内置并行运算函数
比如使用<code class="language-r">parApply()</code>、<code class="language-r">parCapply()</code>、<code class="language-r">parRapply()</code>、<code class="language-r">parLapply()</code>和<code class="language-r">parSapply()</code>（如果返回矩阵，使用
<code class="language-r">cbind()</code>）等函数。其中文档中指出，<code class="language-r">parApply()</code>函数对于<strong>二维矩阵</strong>的每一个单元进行操作，因此要慢一些。如果可能，使用<code class="language-r">parCapply()</code>和<code class="language-r">parRapply()</code>对列和行进行操作，以加快运行速度。</p>

<h3 id="section-2">2.3 回收节点</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">stopCluster<span class="p">(</span>cl<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">3. 并行计算的包依赖问题</h3>

<p>在并行计算过程中，不可避免地会用到其他包辅助。这里涉及到<span style="color: blue">snow</span>包的一个设计原理：并行运算多个R进程，只有一个主进程载入完整的依赖包环境。这就意味着其他并行的R进程中也要载入依赖的包环境。</p>

<p>有两个思路，第一个思路是修改<code class="language-bash">Rprofile.site</code>文件，让任意R进程在启动时都载入依赖的包。但是，不推荐这种做法，因为这样会增加R载入的速度；并且如果不同的代码用了不同的依赖包，就要不停地修改<code class="language-bash">Rprofile.site</code>文件。</p>

<p>第二个思路是在新开的R进程中“动态”加载需要的包。所谓<strong>“动态”</strong>，没有什么高深的意思，就是“需要的时候加载即可”。根据需要，可以选择以下两种方法。</p>

<ul>
  <li>第一种方法是在直接在启动的R进程中加载包。</li>
</ul>

<p>这种方法非常直观，推荐。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="r"><span class="line"><span class="c1"># 以下代码摘抄自Parallel R，其中packages</span>
</span><span class="line"><span class="c1"># 是一个要选择加载的package列表，</span>
</span><span class="line"><span class="c1"># 比如c(&#39;bigmemory&#39;, &#39;foreach&#39;, &#39;doMC&#39;)</span>
</span><span class="line">worker.init <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>packages<span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kr">for</span> <span class="p">(</span>p <span class="kr">in</span> packages<span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kn">library</span><span class="p">(</span>p<span class="p">,</span> character.only<span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="kc">NULL</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>第二种方法是在调用函数中加入。</li>
</ul>

<p>这种方法不推荐，因为我们将看到这种方法是“投机”了<span style="color: blue">parallel</span>包的并行<code>apply</code>家族函数。原理是：<span style="color: blue">parallel</span>包中最主要的就是<code>apply</code>家族函数，比如<code class="language-r">parApply(cl = NULL, X, MARGIN, FUN, ...)</code>函数，是<span style="color: blue">base</span>包中<code class="language-r">apply()</code>的并行版本。其中会用到一个<code>FUN</code>函数，我们可以在这个函数中加载包，比如写入<code class="language-r">require('bigmemory')</code>等。这样，并行的R进程就会载入需要的包。举例如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">Getft <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">,</span> arg1<span class="p">,</span> arg2<span class="p">){</span>
</span><span class="line">  <span class="kn">require</span><span class="p">(</span>packages<span class="p">)</span>
</span><span class="line">  <span class="kc">...</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">adft <span class="o">&lt;-</span> parSapply<span class="p">(</span>cl<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> Getft<span class="p">,</span> argInput1<span class="p">,</span> argInput2<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="span-stylecolor-bluebigmemoryspan">4. 与<span style="color: blue">bigmemory</span>包结合</h2>

<p><span style="color: blue">parallel</span>包可以很好地与<span style="color: blue">bigmemory</span>包结合，进而进一步提升R操作大数据的能力。</p>

<p>但是，有一个问题是<code class="language-r">parApply()</code>、<code class="language-r">parCapply()</code>、<code class="language-r">parRapply()</code>函数是不能直接调用<span style="color: blue">bigmemory</span>包的<code>big.memory</code>这种S4对象。当然也可以使用<code>mat[, ]</code>之类语句引用big.matrix对象。但是这会把矩阵全部载入内存，也就失去了<code>big.matrix</code>对象的意义，只有在内存允许的情况下这样操作。</p>

<p>解决办法：</p>

<blockquote>
  <ol>
    <li>
      <p>将<code>big.matrix</code>对象的操作放在一个函数中，函数传入的是<code>big.matrix</code>的<code>description file</code>（描述文件），而不是<code>big.matrix</code>对象本身。</p>
    </li>
    <li>
      <p>把这个函数作为<code class="language-r">parLapply()</code>和<code class="language-r">parSapply()</code>的<code>FUN</code>，达到分布计算，而又不直接引用<code>big.matrix</code>对象的目的。</p>
    </li>
    <li>
      <p>这个思路的前提是：创建的<code>big.matrix</code>对象必须是“<strong>内存共享</strong>”的，否则不能将其分布到不同的节点计算。</p>
    </li>
  </ol>
</blockquote>

<p>举一个例子，完整版本见<a href="#final_version">补充材料：Final version</a>，这个例子中首先创建一个<code class="language-r">Getft()</code>函数，接受<code>adAllRowColDesc</code>和<code>adMatDesc</code>两个变量是<code>big.matrix</code>对象的描述文件。在这个函数中，<code class="language-r">attach.big.matrix()</code>通过描述文件引用<code>big.matrix</code>对象，并完成相关操作。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">Getft <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">,</span> adAllRowColDesc<span class="p">,</span> adMatDesc<span class="p">){</span>
</span><span class="line">  adAllRowColData <span class="o">&lt;-</span> attach.big.matrix<span class="p">(</span>adAllRowColDesc<span class="p">)</span>
</span><span class="line">  adMatData <span class="o">&lt;-</span> attach.big.matrix<span class="p">(</span>adMatDesc<span class="p">)</span>
</span><span class="line">  rowIndex <span class="o">&lt;-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">]</span>
</span><span class="line">  colIndex <span class="o">&lt;-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]</span>
</span><span class="line">  linkData <span class="o">&lt;-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>rowIndex<span class="p">],</span> rowNames<span class="p">[</span>colIndex<span class="p">],</span> adMatData<span class="p">[</span>rowIndex<span class="p">,</span> colIndex<span class="p">])</span>
</span><span class="line">  <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>之后，使用<code class="language-r">parSapply()</code>函数调用<code class="language-r">Getft()</code>函数，使用<code>1:nrow(adAllRowCol)</code>作为“<strong>计数器</strong>”。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">adft <span class="o">&lt;-</span> parSapply<span class="p">(</span>cl<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> Getft<span class="p">,</span> adAllRowColDescFile<span class="p">,</span> adMatDescFile<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果需要处理的<code>big.matrix</code>对象不大，也可以直接使用<code class="language-r">parSapply()</code>函数，详细参考<a href="#bigmatrix_direct">补充材料：Bigmatrix direct version</a>。</p>

<h2 id="span-stylecolor-blueforeachspan">5. 与<span style="color: blue">foreach</span>包比较</h2>

<p>另外一个支持并行计算的包是<span style="color: blue">foreach</span>包，它天生与<code>big.matrix</code>对象匹配。所以，我也提供了使用<code class="language-r">foreach</code>版本，详细参考<a href="#foreach">补充材料：Foreach version</a>。</p>

<p>通过测试可以发现，在数据量较少时（1000行左右），<code class="language-r">foreach</code><a href="#foreach">版本</a>和<code class="language-r">parSapply()</code><a href="#final_version">版本</a>速度基本持平。但是，数据量增大时（百万行），<code class="language-r">foreach</code><a href="#foreach">版本</a>速度明显减慢。原因是在使用<code class="language-r">foreach</code>并行计算时，计算开始时候需要建立索引。这个过程在循环数变大时，会变得非常缓慢。</p>

<p>因此，我们可以看到，如果使用<span style="color: blue">foreach</span>包，会减少代码量，而且程序逻辑也非常清晰，但是遇到超大循环数，速度明显减慢。同时，如果使用<span style="color: blue">parallel</span>包，那么需要一些“技巧”才能与<code>big.matrix</code>对象有效融合。所以，我们的结论是原生态的R（包括提供的一些包）不适合做并行大数据计算。</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="http://cran.r-project.org/web/views/HighPerformanceComputing.html">R task: High-Performance and Parallel Computing with R</a></p>
  </li>
  <li>
    <p><a href="http://www.jstatsoft.org/v31/i01/paper">State of the Art in Parallel Computing with R</a>，这篇文章详细介绍了很多R并行计算的平台</p>
  </li>
  <li>
    <p>Rmpi安装：<a href="http://www.stats.uwo.ca/faculty/yu/Rmpi/">1</a>, <a href="https://www.sharcnet.ca/help/index.php/Using_R_and_MPI">2</a>, <a href="http://www.cybaea.net/Blogs/R-tips-Installing-Rmpi-on-Fedora-Linux.html">3</a></p>
  </li>
  <li>
    <p><a href="http://www.sfu.ca/~sblay/R/snow.html">snow包介绍</a></p>
  </li>
  <li>
    <p><a href="http://www.stat.yale.edu/~mjk56/temp/bigmemory-vignette.pdf">The R Package bigmemory: Supporting Efficient Computation and Concurrent Programming with Large Data Sets.</a></p>
  </li>
  <li>
    <p>书籍<a href="http://shop.oreilly.com/product/0636920021421.do">Parallel R</a></p>
  </li>
</ul>

<h3 id="a-idappendixa"><a id="appendix">补充材料</a></h3>

<ul>
  <li><a id="final_version">Final version</a></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>combine parSapply and big.matrix </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">adj2ftBig <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>adMat<span class="p">,</span> adAllRowCol<span class="p">,</span> n <span class="o">=</span> <span class="m">2</span><span class="p">){</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># INPUT: &#39;adMat&#39; should be a bigmatrix. &#39;adAllRowCol&#39; is the row and column combination, also is a bigmatrix</span>
</span><span class="line">
</span><span class="line">  <span class="kn">require</span><span class="p">(</span>bigmemory<span class="p">)</span>
</span><span class="line">  <span class="kn">require</span><span class="p">(</span>parallel<span class="p">)</span>
</span><span class="line">  cl <span class="o">&lt;-</span> makeCluster<span class="p">(</span>n<span class="p">,</span> type <span class="o">=</span> <span class="s">&quot;MPI&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  adMatDescFile <span class="o">&lt;-</span> describe<span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">  adAllRowColDescFile <span class="o">&lt;-</span> describe<span class="p">(</span>adAllRowCol<span class="p">)</span>
</span><span class="line">
</span><span class="line">  rowNames <span class="o">&lt;-</span> <span class="kp">rownames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">  colNames <span class="o">&lt;-</span> <span class="kp">colnames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">
</span><span class="line">  ignore <span class="o">&lt;-</span> clusterEvalQ<span class="p">(</span>cl<span class="p">,</span> <span class="p">{</span><span class="kn">library</span><span class="p">(</span>bigmemory<span class="p">);</span> <span class="kc">NULL</span><span class="p">})</span>
</span><span class="line">
</span><span class="line">  Getft <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">,</span> adAllRowColDesc<span class="p">,</span> adMatDesc<span class="p">){</span>
</span><span class="line">    adAllRowColData <span class="o">&lt;-</span> attach.big.matrix<span class="p">(</span>adAllRowColDesc<span class="p">)</span>
</span><span class="line">    adMatData <span class="o">&lt;-</span> attach.big.matrix<span class="p">(</span>adMatDesc<span class="p">)</span>
</span><span class="line">    rowIndex <span class="o">&lt;-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">]</span>
</span><span class="line">    colIndex <span class="o">&lt;-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]</span>
</span><span class="line">    linkData <span class="o">&lt;-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>rowIndex<span class="p">],</span> rowNames<span class="p">[</span>colIndex<span class="p">],</span> adMatData<span class="p">[</span>rowIndex<span class="p">,</span> colIndex<span class="p">])</span>
</span><span class="line">    <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  adft <span class="o">&lt;-</span> parSapply<span class="p">(</span>cl<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> Getft<span class="p">,</span> adAllRowColDescFile<span class="p">,</span> adMatDescFile<span class="p">)</span>
</span><span class="line">
</span><span class="line">  stopCluster<span class="p">(</span>cl<span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="kr">return</span><span class="p">(</span>adft<span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><a id="bigmatrix_direct">Bigmatrix direct version</a></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>directly use the big.matrix </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">adj2ftBig3 <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>adMat<span class="p">,</span> adAllRowCol<span class="p">,</span> n <span class="o">=</span> <span class="m">2</span><span class="p">){</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># INPUT: &#39;adMat&#39; is a matrix. &#39;adAllRowCol&#39; is the row and column combination, also a matrix.</span>
</span><span class="line">
</span><span class="line">  <span class="kn">library</span><span class="p">(</span>parallel<span class="p">)</span>
</span><span class="line">  cl <span class="o">&lt;-</span> makeCluster<span class="p">(</span>n<span class="p">,</span> type <span class="o">=</span> <span class="s">&quot;MPI&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  rowNames <span class="o">&lt;-</span> <span class="kp">rownames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">  colNames <span class="o">&lt;-</span> <span class="kp">colnames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">
</span><span class="line">  adft <span class="o">&lt;-</span> parRapply<span class="p">(</span>cl <span class="o">=</span> cl<span class="p">,</span> adAllRowCol<span class="p">,</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> <span class="p">{</span>
</span><span class="line">    linkData <span class="o">&lt;-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>x<span class="p">[</span><span class="m">1</span><span class="p">]],</span> colNames<span class="p">[</span>x<span class="p">[</span><span class="m">2</span><span class="p">]],</span> adMat<span class="p">[</span>x<span class="p">[</span><span class="m">1</span><span class="p">],</span> x<span class="p">[</span><span class="m">2</span><span class="p">]])</span>
</span><span class="line">    <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class="line">  <span class="p">})</span>
</span><span class="line">
</span><span class="line">  stopCluster<span class="p">(</span>cl<span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="kr">return</span><span class="p">(</span>adft<span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><a id="foreach">Foreach version</a></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>apply foreach to big.matrix </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">adj2ftBig2 <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>adMat<span class="p">,</span> adAllRowCol<span class="p">,</span> n <span class="o">=</span> <span class="m">4</span><span class="p">){</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># INPUT: &#39;adMat&#39; should be a bigmatrix. &#39;adAllRowCol&#39; is the row and column combination, also a bigmatrix.</span>
</span><span class="line">
</span><span class="line">  <span class="kn">library</span><span class="p">(</span>bigmemory<span class="p">)</span>
</span><span class="line">  <span class="kn">library</span><span class="p">(</span>foreach<span class="p">)</span>
</span><span class="line">  <span class="kn">library</span><span class="p">(</span>doMC<span class="p">)</span>
</span><span class="line">  registerDoMC<span class="p">(</span>n<span class="p">)</span>
</span><span class="line">
</span><span class="line">  rowNames <span class="o">&lt;-</span> <span class="kp">rownames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">  colNames <span class="o">&lt;-</span> <span class="kp">colnames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class="line">
</span><span class="line">  adft <span class="o">&lt;-</span> foreach <span class="p">(</span>i <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> <span class="m">.</span>combine <span class="o">=</span> <span class="kp">rbind</span><span class="p">,</span> <span class="m">.i</span>norder<span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span> <span class="o">%dopar%</span> <span class="p">{</span>
</span><span class="line">    <span class="kp">print</span><span class="p">(</span><span class="kp">paste</span><span class="p">(</span><span class="s">&#39;It is running &#39;</span><span class="p">,</span> i<span class="p">,</span> <span class="s">&#39; in total of &#39;</span><span class="p">,</span> <span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> <span class="s">&#39;.&#39;</span><span class="p">,</span> sep <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">))</span>
</span><span class="line">    linkData <span class="o">&lt;-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">]],</span> colNames<span class="p">[</span>adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]],</span> adMat<span class="p">[</span>adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">],</span> adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]])</span>
</span><span class="line">    <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="kr">return</span><span class="p">(</span>adft<span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-4">更新记录</h3>

<p>2014年7月22日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[构建和展示进化树软件使用心得]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/05/02/phylo-tool-summary/"/>
    <updated>2014-05-02T05:13:59+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/05/02/phylo-tool-summary</id>
    <content type="html"><![CDATA[<h2 id="section">构建进化树</h2>

<h3 id="phyml">1. PhyML</h3>

<p><strong>构建进化树方法</strong>：Maximum Likelihood</p>

<p><strong>评估</strong>：选择bootstrap或者Likelihood-ratio test</p>

<p><strong>运行方式</strong>：所有平台和<a href="http://atgc.lirmm.fr/phyml/">网页</a></p>

<p><strong>心得</strong>：理论上支持4000条序列，小于2000000个字符。但是，对于个人电脑，通常100-200条序列比较合适。命令行运行时，可以选择非常简介的默认模式运行。在默认模式下，bootstrap需要手动开启。安装和使用非常方便，直接下载后可以直接使用。同时，bootstrap可以通过MPI分布计算，但是需要从源代码安装。</p>

<p><strong>快速运行</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">phyml -i align_file.phy --no_memory_check
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<ul>
  <li><code>-i</code>：后跟需要Phylip格式文件</li>
  <li><code>--no_memory_check</code>：不用检查内存，防止程序运行时跳出</li>
</ul>

<h3 id="raxml">2. RAxML</h3>

<p><strong>构建进化树方法</strong>：Maximum Likelihood</p>

<p><strong>运行方式</strong>：所有<a href="http://www.exelixis-lab.org/">平台</a>和网页。</p>

<p><strong>心得</strong>：推荐<a href="http://www.phylo.org/portal2/login!input.action">网页运行</a>，支持数据的存放和其他构建进化树的方法。本地安装支持MPI和PThreads的分布计算，但是安装有些复杂，需要仔细阅读文档。</p>

<p><strong>快速运行1</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">raxmlHPC-PTHREADS-AVX -x <span class="m">12345</span> -p <span class="m">12345</span> -# <span class="m">100</span> -m GTRGAMMA -T <span class="m">4</span> -s align_file.phy -n TEST
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>-x</code>：bootstrap运行时设定随机数，用于结果重现</li>
  <li><code>-p</code>：parsimony推断时设定随机数，用于结果重现</li>
  <li><code>-#</code>：bootstrap次数。也可以设定为autoMRE，最大次数是1000。</li>
  <li><code>-m</code>：设定使用的模型，GTRGAMMA为核苷酸序列适用模型</li>
  <li><code>-T</code>：设定线程数，不要超过最大线程</li>
  <li><code>-s</code>：输入文件，Phylip或者fasta文件</li>
  <li><code>-n</code>：输入文件记号</li>
</ul>

<p><strong>快速运行2</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">raxmlHPC-PTHREADS-AVX -f a -x <span class="m">12345</span> -p <span class="m">12345</span> -# autoMRE -m GTRCAT -T <span class="m">4</span> -s align_file.phy -n TEST
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>-f a</code>：选定算法，快速bootstrap</li>
</ul>

<h2 id="section-1">展示进化树</h2>

<h3 id="itol">1. iTOL</h3>

<p><strong>运行方式</strong>：<a href="http://itol.embl.de/">网页</a></p>

<p><strong>心得</strong>：</p>

<ul>
  <li>
    <p>用户可以添加很多自定义的项目，丰富和完善自己的进化树，比如添加柱状图、蛋白结构域、heatmap、基因平行转移（horizontal gene transfer）等；</p>
  </li>
  <li>
    <p>如果输入NCBI taxonomy编号，能够自动转化成物种名称；支持鼠标点击交互式运行，非常方便。
心得：可以在网站上建立自己的帐号，之后设定不同的project展示和存放自己的项目。尝试构建了2000条左右的序列，显示完全没有问题。</p>
  </li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2014年5月1日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[创建R包的最简流程]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/03/28/creat-r-package/"/>
    <updated>2014-03-28T02:53:05+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/03/28/creat-r-package</id>
    <content type="html"><![CDATA[<p>一个最简单创建R包的流程。</p>

<h2 id="section">1. 载入工具包</h2>

<p>安装并载入<span style="color: blue">devtools</span>包和<span style="color: blue">roxygen2</span>包。<span style="color: blue">devtools</span>包提供了一些包的检查、安装和打包的基本工具。<span style="color: blue">roxygen2</span>包则使得书写R帮助文档变得轻松简单。如果习惯使用Emacs，可以结合<a href="http://ess.r-project.org/">ESS</a>建立R包，可以将R代码和帮助文档有效组合在一起，便于管理。当然，也可以使用<a href="http://www.rstudio.com/">Rstudio</a>。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="r"><span class="line"><span class="kn">library</span><span class="p">(</span>devtools<span class="p">)</span>
</span><span class="line"><span class="kn">library</span><span class="p">(</span>roxygen2<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<h2 id="description">2. 创建DESCRIPTION文件模板</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">load_all<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>其中<code class="language-bash">import</code>栏目，在源代码中使用了哪些包，需要逐步在import项目中添加和修改。</p>

<h2 id="section-1">3. 更新文档和检查包</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">document<span class="p">()</span>
</span><span class="line">check<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">4. 安装包</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">install<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="targzlanguage-bash">5. 生成<code class="language-bash">.tar.gz</code>压缩文件</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">build<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="https://www.youtube.com/watch?v=9PyQlbAEujY">创建R包视频</a></li>
</ul>

<h3 id="section-3">更新记录</h3>

<p>2015年10月20日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Circos Notes]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/03/18/circos-notes/"/>
    <updated>2014-03-18T03:37:45+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/03/18/circos-notes</id>
    <content type="html"><![CDATA[<p>Mapping data onto a Circos figure requires that you identify what patterns in your data are (a) likely to be important and (b) likely to be present, and create a figure that exposes such patterns. Remember, if the pattern exists, you can’t afford to miss it. If it doesn’t exist, you can’t afford to be fooled into thinking that it’s there, or left wondering whether it’s occluded by other data.</p>

<h2 id="run-circos">1. Run circos</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">bin/circos
</span><span class="line">-png
</span><span class="line">-svg
</span><span class="line">-conf etc/circos.conf
</span><span class="line">-outputdir /path/to/your/output/directory
</span><span class="line">-outputfile yourimage.png
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<ul>
  <li>
    <p><code class="language-bash">-debug</code> is used for debugging</p>
  </li>
  <li>
    <p><code class="language-bash">-cdump</code> is used for check the parsing file.</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># store all debug output in circos.debug.txt and display only karyotype</span>
</span><span class="line">&gt; circos ... -group_debug _all <span class="p">|</span> tee circos.debug.txt <span class="p">|</span> egrep <span class="s2">&quot;debuggroup karyotype&quot;</span>
</span><span class="line"><span class="c"># extract other debug reports</span>
</span><span class="line">&gt; egrep <span class="s2">&quot;debuggroup rule&quot;</span> circos.debug.txt
</span><span class="line">&gt; egrep <span class="s2">&quot;debuggroup (rule|scale)&quot;</span> circos.debug.txt
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="syntax-and-configure-files">2. Syntax and configure files</h2>

<p>Configuration syntax is like:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;ideogram&gt;</span>
</span><span class="line"> thickness = 30p
</span><span class="line"> fill      = yes
</span><span class="line"> ...
</span><span class="line"><span class="nt">&lt;/ideogram&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>Usefule syntax: hierarchical structure <code class="language-html">&lt;ideogram&gt;</code>; all data points in all plot tracks <code class="language-html">&lt;links&gt;</code> and <code class="language-html">&lt;plots&gt;</code>; local data points in a given track <code class="language-html">&lt;link&gt;</code> and <code class="language-html">&lt;plot&gt;</code>; rules <code class="language-html">&lt;rules&gt;</code> and <code class="language-html">&lt;rule&gt;</code>; highlight<code class="language-html">&lt;hightlight&gt;</code>.</p>

<p>Extermal imports</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;image&gt;</span>
</span><span class="line"># Included from Circos distribution.
</span><span class="line"><span class="err">&lt;</span><span class="nt">&lt;include</span> <span class="na">etc</span><span class="err">/</span><span class="na">image</span><span class="err">.</span><span class="na">conf</span><span class="nt">&gt;</span>&gt;
</span><span class="line"><span class="nt">&lt;/image&gt;</span>
</span><span class="line">
</span><span class="line"># colors, fonts and fill patterns
</span><span class="line"><span class="err">&lt;</span><span class="nt">&lt;include</span> <span class="na">etc</span><span class="err">/</span><span class="na">colors_fonts_patterns</span><span class="err">.</span><span class="na">conf</span><span class="nt">&gt;</span>&gt;
</span><span class="line"># system and debug parameters
</span><span class="line"><span class="err">&lt;</span><span class="nt">&lt;include</span> <span class="na">etc</span><span class="err">/</span><span class="na">housekeeping</span><span class="err">.</span><span class="na">conf</span><span class="nt">&gt;</span>&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Accessing configuration values<code class="language-html">parameter2 = conf(parameter1)</code> or <code class="language-html">parameter2 = conf(block1,block2,parameter1)</code> for:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;block1&gt;</span>
</span><span class="line"><span class="nt">&lt;block2&gt;</span>
</span><span class="line">parameter1 = ...
</span><span class="line"><span class="nt">&lt;/block2&gt;</span>
</span><span class="line"><span class="nt">&lt;/block1&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Eval</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">track_color = blue
</span><span class="line">track_width = 100
</span><span class="line">track_start = 0.5
</span><span class="line">
</span><span class="line"><span class="nt">&lt;plots&gt;</span>
</span><span class="line"><span class="nt">&lt;plot&gt;</span>
</span><span class="line"># color=blue
</span><span class="line">color = conf(track_color)
</span><span class="line"># r0 = 0.5r
</span><span class="line">r0    = eval(conf(track_start) . &quot;r&quot;)
</span><span class="line"># r1 = 0.5r+100p
</span><span class="line">r1    = eval(conf(track_start) . &quot;r&quot; + conf(track_width) . &quot;p&quot;)
</span><span class="line"><span class="nt">&lt;/plot&gt;</span>
</span><span class="line"><span class="nt">&lt;/plots&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Color</p>

<p>Use the color name given, like <code class="language-html">red</code>, <code class="language-html">lred</code>, <code class="language-html">vlred</code>, <code class="language-html">vvlred</code>, <code class="language-html">dred</code>, <code class="language-html">vdred</code>, <code class="language-html">vvdred</code>. If a pure color is need, use <code class="language-html">pred</code>. For the transparent color, <code class="language-html">red_a1</code>, <code class="language-html">red_a2</code>, and to <code class="language-html">red_a5</code>. <code class="language-html">red_a1</code> has a 17% tansparency and <code class="language-html">red_a5</code> have a 83% transparency.</p>

<h2 id="ideogram">3. Ideogram</h2>

<p>One of the most common used ideogram is the karyotypes plot. The chromosome is marked as:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line">
</span><span class="line"><span class="nb">chr</span> <span class="o">-</span> <span class="n">id</span> <span class="n">label</span> <span class="n">start</span> <span class="n">end</span> <span class="n">color</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>for example</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">chr</span> <span class="o">-</span> <span class="n">hs1</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">249250621</span> <span class="n">chr1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The cytogenetic bands data is like:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">band</span> <span class="n">hs1</span> <span class="n">p36</span><span class="mf">.33</span> <span class="n">p36</span><span class="mf">.33</span> <span class="mi">0</span> <span class="mi">2300000</span> <span class="n">gneg</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ul>
  <li>Choose a subset of chromosomes</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chromosomes_display_default</span> <span class="o">=</span> <span class="nb">no</span>
</span><span class="line">
</span><span class="line"><span class="n">chromosomes</span> <span class="o">=</span> <span class="n">hs1</span><span class="p">;</span><span class="n">hs2</span><span class="p">;</span><span class="n">hs3</span><span class="p">;</span><span class="n">h4</span>
</span><span class="line"><span class="n">chromosomes</span> <span class="o">=</span> <span class="sr">/hs[1-4]$/</span>
</span><span class="line"><span class="n">chromosomes</span> <span class="o">=</span> <span class="sr">/hs[1-4]$/</span><span class="p">;</span><span class="n">hs10</span><span class="p">;</span><span class="n">hs11</span>
</span><span class="line"><span class="n">chromosomes</span> <span class="o">=</span> <span class="sr">/hs[1-4]$/</span><span class="p">;</span><span class="o">-</span><span class="n">hs3</span>
</span><span class="line"><span class="n">chromosomes</span> <span class="o">=</span> <span class="n">hs1:</span><span class="p">(</span><span class="o">-</span><span class="mi">100</span><span class="p">,</span><span class="mi">120</span><span class="o">-</span><span class="p">);</span><span class="n">hs2</span><span class="p">;</span><span class="n">hs3</span><span class="p">;</span><span class="n">h4</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Order</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chromosomes_order</span> <span class="o">=</span> <span class="n">hs2</span><span class="p">,</span><span class="n">hs3</span><span class="p">,</span><span class="n">hs1</span><span class="p">,</span><span class="n">hs5</span><span class="p">,</span><span class="n">hs4</span><span class="p">,</span><span class="n">hs8</span><span class="p">,</span><span class="n">hs7</span><span class="p">,</span><span class="n">hs6</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Scale</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chromosomes_scale</span> <span class="o">=</span> <span class="n">hs1</span><span class="o">=</span><span class="mf">0.25</span><span class="p">,</span><span class="n">hs2</span><span class="o">=</span><span class="mf">2.0</span>
</span><span class="line"><span class="c1"># 25% and 50%</span>
</span><span class="line"><span class="n">chromosomes_scale</span> <span class="o">=</span> <span class="n">hs1</span><span class="o">=</span><span class="mf">0.25</span><span class="n">r</span><span class="p">,</span><span class="n">hs2</span><span class="o">=</span><span class="mf">0.50</span><span class="n">r</span>
</span><span class="line"><span class="c1"># each is 25%</span>
</span><span class="line"><span class="n">chromosomes_scale</span> <span class="o">=</span> <span class="sr">/hs[12]/</span><span class="o">=</span><span class="mf">0.5</span><span class="n">rn</span>
</span><span class="line"><span class="c1"># all ideograms distributed evenly within entire figure</span>
</span><span class="line"><span class="n">chromosomes_scale</span>   <span class="o">=</span> <span class="sr">/./</span><span class="o">=</span><span class="mi">1</span><span class="n">rn</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Rotation</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;image&gt;</span>
</span><span class="line">angle_orientation* = counterclockwise
</span><span class="line"><span class="err">&lt;</span><span class="nt">&lt;include</span> <span class="na">etc</span><span class="err">/</span><span class="na">image</span><span class="nt">&gt;</span>&gt;
</span><span class="line"><span class="nt">&lt;/image&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chromosomes_reverse</span> <span class="o">=</span> <span class="sr">/hs[234]/</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Chromosome color</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chromosomes_color</span> <span class="o">=</span> <span class="n">hs1</span><span class="o">=</span><span class="n">red</span><span class="p">,</span><span class="n">hs2</span><span class="o">=</span><span class="n">orange</span><span class="p">,</span><span class="n">hs3</span><span class="o">=</span><span class="n">green</span><span class="p">,</span><span class="n">hs4</span><span class="o">=</span><span class="n">blue</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>Also, the color could be redefined as</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chr1</span><span class="o">*</span> <span class="o">=</span> <span class="n">red</span>
</span><span class="line"><span class="n">chr2</span><span class="o">*</span> <span class="o">=</span> <span class="n">orange</span>
</span><span class="line"><span class="n">chr3</span><span class="o">*</span> <span class="o">=</span> <span class="n">green</span>
</span><span class="line"><span class="n">chr4</span><span class="o">*</span> <span class="o">=</span> <span class="n">blue</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Position</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chromosomes_radius</span> <span class="o">=</span> <span class="n">hs4:0</span><span class="mf">.9</span><span class="n">r</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Show bands</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">band_transparency</span> <span class="o">=</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Add chromosome</li>
</ul>

<p>For example, add the human mitochondria chromosome.</p>

<p>Add the following to the file <code class="language-bash">data/karyotype/karyotype.human.txt</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">chr</span> <span class="o">-</span> <span class="n">hsMT</span> <span class="n">MT</span> <span class="mi">0</span> <span class="mi">16569</span> <span class="n">chrMT</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add “hsMT” color in the file <code class="language-bash">etc/colors.ucsc.conf</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">chrMT</span> <span class="o">=</span> <span class="mi">121</span><span class="p">,</span><span class="mi">204</span><span class="p">,</span><span class="mi">61</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="highlight">4. Highlight</h2>

<h3 id="data-type">4.1 Data type</h3>

<p>Data type of highlight is</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">chr</span> <span class="n">start</span> <span class="n">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>for exmaple,</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs1</span> <span class="mi">1298972</span> <span class="mi">1300443</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>We can also add the highlight information into the data file, for example:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs1</span> <span class="mi">100433463</span> <span class="mi">100487964</span> <span class="n">fill_color</span><span class="o">=</span><span class="n">red</span><span class="p">,</span><span class="n">r0</span><span class="o">=</span><span class="mf">0.6</span><span class="n">r</span><span class="p">,</span><span class="n">r1</span><span class="o">=</span><span class="mf">0.6</span><span class="n">r</span><span class="o">+</span><span class="mi">50</span><span class="n">p</span>
</span><span class="line"><span class="n">hs1</span> <span class="mi">232817594</span> <span class="mi">240828534</span> <span class="n">fill_color</span><span class="o">=</span><span class="n">chr9</span><span class="p">,</span><span class="n">z</span><span class="o">=</span><span class="mi">61</span><span class="p">,</span><span class="n">r0</span><span class="o">=</span><span class="mf">0.4</span><span class="n">r</span><span class="o">-</span><span class="mf">78.7058</span><span class="n">p</span><span class="p">,</span><span class="n">r1</span><span class="o">=</span><span class="mf">0.4</span><span class="n">r</span><span class="o">+</span><span class="mf">78.7058</span><span class="n">p</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="conf-format">4.2 Conf format</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;highlights&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;highlight&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="nt">&lt;/highlight&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;highlight&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="nt">&lt;/highlight&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;highlight&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="nt">&lt;/highlight&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;/highlights&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="parameters">4.3 Parameters</h3>

<p><code>r0</code>: inner radius of highlight</p>

<p><code>r1</code>: outer radius of highlight</p>

<p><code>offset</code>:  an offset applied to both r0 and r1 (useful for overriding default r0,r1 values defined at lower precedence)</p>

<p><code>fill_color</code>: color of the highlight slice</p>

<p><code>stroke_color</code>: color of the highlight border, drawn if stroke_thickness is set</p>

<p><code>stroke_thickness</code>: border thickness, if any, of the highlight slice</p>

<p><code>z</code>: z-depth of the highlight, controlling the order in which highlights are drawn</p>

<p><code>ideogram</code>: toggles the position of the highlight to be within the ideogram extent</p>

<h3 id="plot-hightlight">4.4 Plot hightlight</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;plots&gt;</span>
</span><span class="line"><span class="nt">&lt;plot&gt;</span>
</span><span class="line">type = highlight
</span><span class="line">file = data/3/chr.highlights.txt
</span><span class="line">r0   = 0.3r
</span><span class="line">r1   = 0.35r
</span><span class="line">z    = 10
</span><span class="line"><span class="nt">&lt;/plot&gt;</span>
</span><span class="line"><span class="nt">&lt;/plots&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="links">5. Links</h2>

<h3 id="data-type-1">5.1 Data type</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs1</span> <span class="mi">100</span> <span class="mi">200</span> <span class="n">hs2</span> <span class="mi">250</span> <span class="mi">300</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>or</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">segdup00010</span> <span class="n">hs1</span> <span class="mi">100</span> <span class="mi">200</span>
</span><span class="line"><span class="n">segdup00010</span> <span class="n">hs2</span> <span class="mi">250</span> <span class="mi">300</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>with link options</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs1</span> <span class="mi">100</span> <span class="mi">200</span> <span class="n">hs2</span> <span class="mi">250</span> <span class="mi">300</span> <span class="n">color</span><span class="o">=</span><span class="n">blue</span>
</span><span class="line"><span class="n">hs1</span> <span class="mi">400</span> <span class="mi">550</span> <span class="n">hs3</span> <span class="mi">500</span> <span class="mi">750</span> <span class="n">color</span><span class="o">=</span><span class="n">red</span><span class="p">,</span><span class="n">thickness</span><span class="o">=</span><span class="mi">5</span><span class="n">p</span>
</span><span class="line"><span class="n">hs1</span> <span class="mi">600</span> <span class="mi">800</span> <span class="n">hs4</span> <span class="mi">150</span> <span class="mi">350</span> <span class="n">color</span><span class="o">=</span><span class="n">black</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="conf-format-1">5.2 Conf format</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;links&gt;</span>
</span><span class="line"><span class="nt">&lt;link&gt;</span>
</span><span class="line">file          = data/5/segdup.txt
</span><span class="line">radius        = 0.8r
</span><span class="line">bezier_radius = 0r
</span><span class="line">color         = black_a4
</span><span class="line">thickness     = 2
</span><span class="line"><span class="nt">&lt;/link&gt;</span>
</span><span class="line"><span class="nt">&lt;/links&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="parameters-1">5.3 Parameters</h3>

<p><code>radius</code>: this is the radial position of the termination of the link; for relative values, if radius &lt; 1 then it is defined in terms of the inner ideogram radius, otherwise it is defined in terms of the outer ideogram radius</p>

<p><code>bezier_radius</code>: the radial position of the third control point (in addition to the two positions defined by the link coordinates) used to draw the Bezier curve; if this parameter is not defined then straight lines will be used</p>

<p><code>color</code>: color of the link line</p>

<p><code>thickness</code>: thickness of the link line (note that this is not stroke_thickness, since the line isn’t technically stroked)</p>

<p><code>record_limit</code>: if this is defined, the number of records read from the file is capped; coordinate records are sampled from the start of the file; useful for debugging</p>

<p>In each <code class="language-html">&lt;link&gt;</code>, <code class="language-html">&lt;rules&gt;</code> and <code class="language-html">&lt;rule&gt;</code> can be applied to special ruls. Each <code class="language-html">&lt;rule&gt;</code> contains three parts: <em>a condition</em>, <em>formatting statements</em> and <em>an optional ‘flow’ statement</em>.</p>

<p>Marker the priority of rules</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;rule&gt;</span>
</span><span class="line"># 1st
</span><span class="line">importance = 10
</span><span class="line"><span class="nt">&lt;/rule&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add a tag</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;rule&gt;</span>
</span><span class="line">flow = goto special_rule if true
</span><span class="line">...
</span><span class="line"><span class="nt">&lt;/rule&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;rule&gt;</span>
</span><span class="line">tag = special_rule
</span><span class="line">...
</span><span class="line"><span class="nt">&lt;/rule&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="histograms">6. Histograms</h2>

<p>Histogram, line plot, scatter plot, and heat map share the same data format</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">chr</span> <span class="n">start</span> <span class="n">end</span> <span class="n">value</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>for exmaple</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs3</span> <span class="mi">196000000</span> <span class="mi">197999999</span> <span class="mf">71.0000</span> <span class="n">fill_color</span><span class="o">=</span><span class="n">blue</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="c1"># in data file</span>
</span><span class="line"><span class="n">hs3</span> <span class="mi">196000000</span> <span class="mi">197999999</span> <span class="mf">71.0000</span> <span class="n">id</span><span class="o">=</span><span class="n">abc</span>
</span><span class="line">
</span><span class="line"><span class="c1"># in rule block</span>
</span><span class="line"><span class="sr">&lt;rule&gt;</span>
</span><span class="line"><span class="n">condition</span>  <span class="o">=</span> <span class="n">var</span><span class="p">(</span><span class="n">id</span><span class="p">)</span> <span class="ow">eq</span> <span class="s">&quot;abc&quot;</span>
</span><span class="line"><span class="n">fill_color</span> <span class="o">=</span> <span class="n">blue</span>
</span><span class="line"><span class="sr">&lt;/rule&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>Another data format has multiple values</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">chr</span> <span class="n">start</span> <span class="n">end</span> <span class="n">value</span><span class="p">,</span><span class="n">value</span><span class="p">,</span><span class="n">value</span><span class="p">,</span><span class="o">...</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>for example</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs3</span> <span class="mi">196000000</span> <span class="mi">197999999</span> <span class="mf">0.0000</span><span class="p">,</span><span class="mf">7.0000</span><span class="p">,</span><span class="mf">64.0000</span><span class="p">,</span><span class="mf">0.0000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Plot histogram</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;plots&gt;</span>
</span><span class="line"><span class="nt">&lt;plot&gt;</span>
</span><span class="line">type = histogram
</span><span class="line">file = data/5/segdup.hs1234.hist.txt
</span><span class="line">r1   = 0.88r
</span><span class="line">r0   = 0.81r
</span><span class="line">
</span><span class="line">fill_color = vdgrey
</span><span class="line">extend_bin = no
</span><span class="line"><span class="nt">&lt;/plot&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>For multiple values, <code class="language-bash">fill_color</code> is used to set the different colors.</p>

<ul>
  <li>Orientation</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">orientation = in
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Rules</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;rules&gt;</span>
</span><span class="line"><span class="err">&lt;</span><span class="nt">&lt;include</span> <span class="na">exclude</span><span class="err">.</span><span class="na">hs1</span><span class="err">.</span><span class="na">rule</span><span class="nt">&gt;</span>&gt;
</span><span class="line"><span class="nt">&lt;/rules&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Backgrounds and axes</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;plot&gt;</span>
</span><span class="line">...
</span><span class="line">
</span><span class="line"><span class="nt">&lt;axes&gt;</span>
</span><span class="line"> <span class="nt">&lt;axis&gt;</span>
</span><span class="line"> ...
</span><span class="line"> <span class="nt">&lt;/axis&gt;</span>
</span><span class="line"> <span class="nt">&lt;axis&gt;</span>
</span><span class="line"> ...
</span><span class="line"> <span class="nt">&lt;/axis&gt;</span>
</span><span class="line"> ...
</span><span class="line"><span class="nt">&lt;/axes&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;backgrounds&gt;</span>
</span><span class="line"> <span class="nt">&lt;background&gt;</span>
</span><span class="line"> ...
</span><span class="line"> <span class="nt">&lt;/background&gt;</span>
</span><span class="line"> <span class="nt">&lt;background&gt;</span>
</span><span class="line"> ...
</span><span class="line"> <span class="nt">&lt;/background&gt;</span>
</span><span class="line"> ...
</span><span class="line"><span class="nt">&lt;/backgrounds&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;/plot&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>text</li>
</ul>

<p>text data format is</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">chr</span> <span class="n">start</span> <span class="n">end</span> <span class="n">value</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>for exmaple</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="n">hs1</span> <span class="mi">100425066</span> <span class="mi">100487997</span> <span class="n">DBT</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;plots&gt;</span>
</span><span class="line"><span class="nt">&lt;plot&gt;</span>
</span><span class="line">type             = text
</span><span class="line">color            = black
</span><span class="line">file             = data/phylo/labelGene.txt
</span><span class="line"><span class="nt">&lt;/plot&gt;</span>
</span><span class="line"><span class="nt">&lt;/plots&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>apply rules</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;rules&gt;</span>
</span><span class="line"><span class="nt">&lt;rule&gt;</span>
</span><span class="line">importance = 90
</span><span class="line">condition  = var(value) eq &quot;GeneName&quot;
</span><span class="line">color = blue
</span><span class="line"><span class="nt">&lt;/rule&gt;</span>
</span><span class="line"><span class="nt">&lt;/rules&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="reference">Reference</h2>

<ul>
  <li><a href="http://circos.ca/images/scientific_literature/">Ciros grocery of published pictures</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Brief Intruction of Mutual Information and Demonstration With R]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2013/11/10/mutual-information/"/>
    <updated>2013-11-10T14:21:16+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2013/11/10/mutual-information</id>
    <content type="html"><![CDATA[<script type="text/x-mathjax-config">
MathJax.Hub.Config({
TeX: { equationNumbers: { autoNumber: "AMS" } }
});
</script>

<p>$\newcommand{\entropfrac}[2]{\frac{#1}{#2} \log \left( \frac{#1}{#2} \right)}$</p>

<h2 id="mututal-information-mi">Mututal Information (MI)</h2>

<h3 id="introduction">Introduction</h3>

<p><a href="http://en.wikipedia.org/wiki/Mutual_information">Mutual Information (MI)</a> distance is used to measure the distance between two genes vectors, for example $x_1 = {1, 0, 1, 1, 1, 1, 0}$ and $y_1 = {0, 1, 1, 1, 1, 1, 0}$. It is easily to transfer the two vectors into a binary table:</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: center"><strong>X/Y</strong></th>
      <th style="text-align: center"><strong>1(Presence)</strong></th>
      <th style="text-align: center"><strong>0(Absence)</strong></th>
      <th style="text-align: center"><strong>Sum</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><strong>1(Presence)</strong></td>
      <td style="text-align: center">a</td>
      <td style="text-align: center">b</td>
      <td style="text-align: center">a+b</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: center"><strong>0(Absence)</strong></td>
      <td style="text-align: center">c</td>
      <td style="text-align: center">d</td>
      <td style="text-align: center">c+d</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: center"><strong>Sum</strong></td>
      <td style="text-align: center">a+c</td>
      <td style="text-align: center">b+d</td>
      <td style="text-align: center">n=a+b+c+d</td>
    </tr>
  </tbody>
</table>

<hr />

<!--more-->

<p>Typically, here we give the example of two discrete variables, the mutual information between $x_1$ and $y_1$ is</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align}
\begin{split}
I(X;Y) &= H(X) + H(Y) - H(X,Y)\\
&= -\sum_{x \in \{0, 1\}}p(x)\log(p(x)) - \sum_{y \in \{0, 1\}}p(y)\log(p(y))\\
& \quad -\left( -\sum_{x \in \{0, 1\}}\sum_{y \in \{0, 1\}}p(x,y)\log(p(x,y)) \right)\\
\end{split}
\label{eq:1}
\end{align} %]]&gt;</script>

<p>The $\eqref{eq:1}$ is equal to</p>

<script type="math/tex; mode=display">\begin{equation}
I(X;Y) = \sum_{x \in \{1, 0\}}\sum_{y \in \{1, 0\}} p(x,y) \frac{\log(p(x,y))}{p(x)p(y)}
\label{eq:2}
\end{equation}</script>

<p>$p(x)$ is the probability that a symbol (here is 0 or 1) appears in the gene vector X regardless that what the symbol is in gene vector Y. $p(y)$ has a similar definition of $p(x). $$p(x, y)$ is probability of a symbol combination appears in gene vector X and Y. In this example, there are four kinds of symbol combination $(1, 1)$, $(1, 0)$, $(0, 1)$ and $(1, 1)$.</p>

<p>If we use the binary table to illustrate this equation, the $\eqref{eq:1}$ is:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align}
\begin{split}
I(X; Y) &= -\left( \entropfrac{a+c}{n} + \entropfrac{b+d}{n} \right)\\
& \quad -\left( \entropfrac{a+b}{n} + \entropfrac{c+d}{n} \right)\\
& \quad - \left( - \left(
\entropfrac{a}{n} + \entropfrac{b}{n} + \entropfrac{c}{n} + \entropfrac{d}{n}
\right) \right)\\
\end{split}
\label{eq:3}
\end{align} %]]&gt;</script>

<p>The $\eqref{eq:3}$ is mathmatically equal to:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align}
\begin{split}
I(X; Y) &= \frac{a}{n}\log\frac{na}{(a+b)(a+c)} + \frac{b}{n}\log\frac{nc}{(a+d)(b+d)}\\
& \quad \frac{c}{n}\log\frac{nc}{(a+b)(a+c)} + \frac{d}{n}\log\frac{nd}{(d+c)(d+b)}
\end{split}
\label{eq:4}
\end{align} %]]&gt;</script>

<h3 id="example">Example</h3>

<p>We can use R to directly calculate the MI between two gene vectors mentioned above.</p>

<ol>
  <li>Use basic R function</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">x1 <span class="o">&lt;-</span> <span class="kt">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
</span><span class="line">y1 <span class="o">&lt;-</span> <span class="kt">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
</span><span class="line"><span class="kp">table</span><span class="p">(</span>x1<span class="p">,</span> y1<span class="p">)</span>
</span><span class="line">   y1
</span><span class="line">x1  <span class="m">0</span> <span class="m">1</span>
</span><span class="line">  <span class="m">0</span> <span class="m">1</span> <span class="m">1</span>
</span><span class="line">  <span class="m">1</span> <span class="m">1</span> <span class="m">4</span>
</span><span class="line"><span class="c1"># calculate MI</span>
</span><span class="line"><span class="m">4</span><span class="o">/</span><span class="m">7</span> <span class="o">*</span> <span class="kp">log</span><span class="p">(</span><span class="m">28</span><span class="o">/</span><span class="m">25</span><span class="p">)</span> <span class="o">+</span> <span class="m">1</span><span class="o">/</span><span class="m">7</span> <span class="o">*</span> <span class="kp">log</span><span class="p">(</span><span class="m">7</span><span class="o">/</span><span class="m">10</span><span class="p">)</span> <span class="o">+</span> <span class="m">1</span><span class="o">/</span><span class="m">7</span> <span class="o">*</span> <span class="kp">log</span><span class="p">(</span><span class="m">7</span><span class="o">/</span><span class="m">10</span><span class="p">)</span> <span class="o">+</span> <span class="m">1</span><span class="o">/</span><span class="m">7</span> <span class="o">*</span> <span class="kp">log</span><span class="p">(</span><span class="m">7</span><span class="o">/</span><span class="m">4</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.04279723</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>Use R package <span style="color: blue">bioDist</span></li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="r"><span class="line"><span class="kn">library</span><span class="p">(</span>bioDist<span class="p">)</span>
</span><span class="line">mutualInfo<span class="p">(</span><span class="kp">rbind</span><span class="p">(</span>x1<span class="p">,</span> y1<span class="p">))</span>
</span><span class="line">           x1
</span><span class="line">y1 <span class="m">0.04279723</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="reference">Reference</h3>

<ul>
  <li>
    <p><a href="http://nlp.stanford.edu/IR-book/html/htmledition/mutual-information-1.html">An example of MI</a></p>
  </li>
  <li>
    <p><a href="http://www1.ece.uic.edu/~devroye/courses/ECE534/lectures/ch2.pdf">Slices of MI</a></p>
  </li>
  <li>
    <p><a href="http://people.cs.umass.edu/~elm/Teaching/Docs/mutInf.pdf">Entropy and Mutual Information</a></p>
  </li>
  <li>
    <p><a href="http://www.scholarpedia.org/article/Mutual_information">Useful Websites 1</a></p>
  </li>
  <li>
    <p><a href="http://montana.informatics.indiana.edu/LabWebPage/Presentations/Vikas_Nov02_2011.pdf">Slices about MI application in bioinformatics</a></p>
  </li>
  <li>
    <p>Seung-Seok Choi, Sung-Hyuk Cha, Charles C. Tappert: <a href="http://www.iiisci.org/journal/sci/Abstract.asp?var=&amp;id=GS315JG">A Survey of Binary Similarity and Distance Measures</a>.</p>
  </li>
  <li>
    <p>Huynen M, Snel B, Lathe W 3rd, Bork P: Predicting protein function by genomic context: quantitative evaluation and qualitative inferences.Genome Res. 2000;10(8):1204-10.</p>
  </li>
  <li>
    <p>Korber BT, Farber RM, Wolpert DH, Lapedes AS: Covariation of mutations in the V3 loop of human immunodeficiency virus type 1 envelope protein: an information theoretic analysis. Proc Natl Acad Sci U S A. 1993;90(15):7176-80.</p>
  </li>
  <li>
    <p>Kensche PR, van Noort V, Dutilh BE, Huynen MA: Practical and theoretical advances in predicting the function of a protein by its phylogenetic distribution. J R Soc Interface. 2008;5(19):151-70.</p>
  </li>
</ul>

<h3 id="update-record">Update record</h3>

<p>12/16/2014</p>
]]></content>
  </entry>
  
</feed>
