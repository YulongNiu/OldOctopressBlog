<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bioinfor | 牛牛龙]]></title>
  <link href="http://yulongniu.bionutshell.org/blog/categories/bioinfor/atom.xml" rel="self"/>
  <link href="http://yulongniu.bionutshell.org/"/>
  <updated>2017-10-15T21:00:08+08:00</updated>
  <id>http://yulongniu.bionutshell.org/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[朴素贝叶斯分类器应用于二元数据类型的尝试]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2017/10/15/naive-bayes-binary-multinomial/"/>
    <updated>2017-10-15T17:38:16+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2017/10/15/naive-bayes-binary-multinomial</id>
    <content type="html"><![CDATA[<script type="text/x-mathjax-config">
MathJax.Hub.Config({
TeX: { equationNumbers: { autoNumber: "AMS" } }
});
</script>

<h3 id="section">简介</h3>

<p>朴素贝叶斯分类器是一种简单、有效的分类器，其难点在于估算条件概率。比如，一个数据集拥有$N$个相互独立的特征，$C$个分组，对于$C_j$条件概率模型为：</p>

<!--more-->

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align}
\begin{split}
p(C_j|F_1,\cdots,F_n) &= \frac{p(F_1,\cdots,F_n|C_j)p(C_j)}{p(F_1,\cdots,F_n)} \\
&= p(F_1|C_j) \cdots p(F_n|C_j)p(C_j)(1/p(F_1,\cdots,F_n))
\end{split}
\label{eq:1}
\end{align} %]]&gt;</script>

<p>由于$1/p(F_1,\cdots,F_n)$在不同分组中为定值，因此：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align}
\begin{split}
p(C_j|F_1,\cdots,F_n) &\propto p(C_j)\prod_{i=1}^{N}p(F_i|C_j)
\end{split}
\label{eq:2}
\end{align} %]]&gt;</script>

<p>其中，$p(C_j)$通常容易求得，即$C_j$分组在测试数据集中出现的频率。而$p(F_i\ \vert C_j)$则根据不同的测试数据类型，有不同的估计值。</p>

<p>以下讨论两种二元数据类型，例如某个数据集有三种特征量：</p>

<script type="math/tex; mode=display">F = 
\left[
\begin{array}{f}
F_1\\
F_2\\
F_3
\end{array}
\right]</script>

<h3 id="section-1">伯努利分布</h3>

<p>每一个特征量的取值都为$0$或$1$。分组$C_j$含有两个已知样本为：</p>

<script type="math/tex; mode=display">C_{j1} = 
\left[
\begin{array}{cj1}
0\\
1\\
0
\end{array}
\right]</script>

<script type="math/tex; mode=display">C_{j2} = 
\left[
\begin{array}{cj2}
0\\
0\\
1
\end{array}
\right]</script>

<p>某个预测样本为：</p>

<script type="math/tex; mode=display">C_{jp1} = 
\left[
\begin{array}{cjp1}
1\\
0\\
1
\end{array}
\right]</script>

<p>由于$p(F_i \vert C_j)$不能为0，根据<a href="https://en.wikipedia.org/wiki/Rule_of_succession">Rule of succession</a>得各个特征的条件概率为：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align*}
\begin{split}
p(F1|C_j) &= \frac{0+1}{2+2} &= 1/4 \\
p(F2|C_j) &= \frac{1+1}{2+2} &= 1/2 \\
p(F3|C_j) &= \frac{1+1}{2+2} &= 1/2
\end{split}
\end{align*} %]]&gt;</script>

<h3 id="section-2">二项分布</h3>

<p>每一个特征量的取值都一个元素为$0$或$1$的向量（长度可不等）。分组$C_j$含有两个已知样本为：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
C_{j1} = 
\left[
\begin{array}{cj1}
0 & 1 & 0 & 1\\
1 & 0 & 1\\
0 & 0
\end{array}
\right] %]]&gt;</script>

<script type="math/tex; mode=display">% &lt;![CDATA[
C_{j2} = 
\left[
\begin{array}{cj2}
0 & 1 & 1 & 1\\
1 & 1 & 1\\
0 & 0
\end{array}
\right] %]]&gt;</script>

<p>某个预测样本为：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
C_{jp1} = 
\left[
\begin{array}{cjp1}
0 & 0 & 1 & 1\\
1 & 0 & 1\\
0 & 0
\end{array}
\right] %]]&gt;</script>

<p>各个特征的条件概率为：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{align*}
\begin{split}
p(F1|C_j) &= \left(\frac{3+1}{8+2}\right)^2 \times \left(\frac{5+1}{8+2}\right)^2 \\
p(F2|C_j) &= \left(\frac{5+1}{6+2}\right)^2 \times \left(\frac{1+1}{6+2}\right) \\
p(F3|C_j) &= \left(\frac{4+1}{4+2}\right)^2
\end{split}
\end{align*} %]]&gt;</script>

<h3 id="section-3">优化</h3>

<p>当特征较多时，会面临多个小数（$p$值）相乘。可以取对数后再相加，即$\sum\log{p}$。</p>

<h3 id="section-4">参考资料</h3>

<ul>
  <li>
    <p><a href="https://www.inf.ed.ac.uk/teaching/courses/inf2b/learnnotes/inf2b-learn-note07-2up.pdf">Text Classification using Naive Bayes</a></p>
  </li>
  <li>
    <p><a href="https://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html">Naive Bayes text classification</a></p>
  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HISAT2使用问答]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2016/09/10/hisat2-faq/"/>
    <updated>2016-09-10T16:32:47+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2016/09/10/hisat2-faq</id>
    <content type="html"><![CDATA[<p><a href="https://ccb.jhu.edu/software/hisat2/manual.shtml#the-hisat2-build-indexer">HISAT2</a>是一款用于“对应（map）”二代测序数据（全基因组、转录组和外显子组）至目标基因组的工具，用来替代<a href="http://ccb.jhu.edu/software/hisat/index.shtml">HISAT</a>和<a href="http://www.ccb.jhu.edu/software/tophat/index.shtml">TopHat2</a>。本文汇集一些使用HISAT2的常见问题问答。</p>

<h2 id="hisat2">1. 如何解读HISAT2的输出统计？</h2>

<p>一个常见的双端测序样本HISAT2输出统计：</p>

<!--more-->

<p>
<code>
10000 reads; of these:
  10000 (100.00%) were paired; of these:
    650 (6.50%) aligned concordantly 0 times
    8823 (88.23%) aligned concordantly exactly 1 time
    527 (5.27%) aligned concordantly &gt;1 times
    ----
    650 pairs aligned concordantly 0 times; of these:
      34 (5.23%) aligned discordantly 1 time
    ----
    616 pairs aligned 0 times concordantly or discordantly; of these:
      1232 mates make up the pairs; of these:
        660 (53.57%) aligned 0 times
        571 (46.35%) aligned exactly 1 time
        1 (0.08%) aligned &gt;1 times
96.70% overall alignment rate
</code>
</p>

<ul>
  <li>
    <p>总共10000对reads；</p>
  </li>
  <li>
    <p>8823对concordant pairs（一对既方向匹配又有合适距离的reads）有1次精确比对；527对concordant pairs有1次以上比对；34对disconcordant pairs;</p>
  </li>
  <li>
    <p>616对不是concordant pairs，也不是disconcordant pairs中，571个reads有1次精确比对；1个read有1次以上比对；660个reads没有比对成功。</p>
  </li>
  <li>
    <p>因此，整体比对率为1 - (660 / 2) / 10000</p>
  </li>
</ul>

<h2 id="hisat2-1">2. 使用HISAT2前，是否需要对原始数据进行清洗？</h2>

<p>需要。</p>

<h3 id="section">更新记录</h3>

<p>2016年9月10日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用参考基因组下载地址]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2016/09/10/reference-genome-location/"/>
    <updated>2016-09-10T13:17:00+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2016/09/10/reference-genome-location</id>
    <content type="html"><![CDATA[<p>本文收集了一些常用参考基因组的下载网址。</p>

<ol>
  <li>
    <p><a href="https://www.ncbi.nlm.nih.gov/genome/">NCBI genome</a></p>
  </li>
  <li>
    <p><a href="http://uswest.ensembl.org/info/data/ftp/index.html">Ensembl FTP</a></p>
  </li>
  <li>
    <p><a href="http://hgdownload.cse.ucsc.edu/goldenPath/">UCSC FTP</a></p>
  </li>
  <li>
    <p><a href="http://www.gencodegenes.org/">GENCODE</a>：只有人和大鼠，注释较好。</p>
  </li>
  <li>
    <p><a href="http://support.illumina.com/sequencing/sequencing_software/igenome.html">iGenomes</a>：部分模式生物bowtie、bowtie2和BWA索引基因组。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li><a href="https://ccb.jhu.edu/software/hisat2/index.shtml">HISAT2</a>：部分模式生物HISAT2索引基因组。</li>
</ol>

<h3 id="section">更新记录</h3>

<p>2016年9月10日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UCSC Table下载注释文件]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/06/02/download-ucsc-gene-mask/"/>
    <updated>2015-06-02T16:49:41+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/06/02/download-ucsc-gene-mask</id>
    <content type="html"><![CDATA[<p>在进行RNA-seq数据分析时，需要从<a href="http://genome.ucsc.edu/cgi-bin/hgTables">UCSC Table</a>下载各种注释信息。比如Cufflinks等要求的转录组注释信息、Cufflinks建议去除的rRNA/tRNA/线粒体组注释。</p>

<h2 id="section">1. 基因注释信息</h2>

<p>下载转录组Ensembl注释文件：</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_ensembl.png" title="image" alt="UCSC下载Ensembl注释" /></p>

<!--more-->

<p>在“table”选择中，<code class="language-bash">ensemblSource</code>表示Ensembl类型注释，<code class="language-bash">ensemblToGeneName</code>表示Ensembl到基因名注释对应。</p>

<h2 id="rrna">2. rRNA注释信息</h2>

<p>分为两步：</p>

<p>第一步， “table”选择<code class="language-bash">wgEncodeGencodeBasicV19</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA.png" title="image" alt="UCSC下载rRNA注释" /></p>

<p>第二步，按照下图编辑“filter”。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA_maskTable.png" title="image" alt="UCSC下载rRNA注释Table" /></p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA_mask.png" title="image" alt="UCSC下载rRNA注释筛选" /></p>

<h2 id="trna">3. tRNA注释信息</h2>

<p>分为两步：</p>

<p>第一步，“track”选择 <code class="language-bash">tRNA Genes</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_tRNA.png" title="image" alt="UCSC下载tRNA注释" /></p>

<p>第二步，保留pseudo tRNA注释。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_tRNA_mask.png" title="image" alt="UCSC下载tRNA注释" /></p>

<h2 id="section-1">4. 线粒体基因组注释</h2>

<p>分为两步：</p>

<p>第一步， “table”选择<code class="language-bash">wgEncodeGencodeBasicV19</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_chrM.png" title="image" alt="UCSC下载chrM注释" /></p>

<p>第二步，按照下图编辑“filter”。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_chrM_mask.png" title="image" alt="UCSC下载chrM注释筛选" /></p>

<h3 id="section-2">参考资料</h3>

<ul>
  <li>
    <p>USCS Genome Browser的Google论坛：<a href="https://groups.google.com/a/soe.ucsc.edu/forum/#!topic/genome/IL_aeOuPYU0">1</a>、<a href="https://groups.google.com/a/soe.ucsc.edu/forum/#!msg/genome/jSAY8w1JVVo/P6lk4OJzDNEJ">2</a></p>
  </li>
  <li>
    <p>另一种选择rRNA、tRNA和线粒体组注释的方法<a href="http://onetipperday.blogspot.tw/2012/08/how-to-get-trnarrnamitochondrial-gene.html">How to get tRNA/rRNA/mitochondrial gene GTF file</a></p>
  </li>
  <li>
    <p><a href="http://webappl.blogspot.tw/2015/02/extract-rrna-and-trna-features-from.html">Extract rRNA and tRNA features from UCSC Browser</a></p>
  </li>
</ul>

<h3 id="section-3">更新记录</h3>

<p>2015年6月1日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[确定TopHat中mate-inner-dist参数]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/23/tophat-inner-distance/"/>
    <updated>2015-05-23T19:08:19+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/23/tophat-inner-distance</id>
    <content type="html"><![CDATA[<p>对于双端测序RNA-seq数据，TopHat在运行时候，有两个参数<code class="language-bash">-r/--mate-inner-dist</code>和<code class="language-bash">--mate-std-dev</code>分别标识一对reads的间隔长度的期望平均值和标准差，其默认值分别为50bp和20bp。这两个参数本身是个估计值，用于TopHat在map过程中确定一对reads是否匹配到基因组正确位置。如果能够准确设定这两个数值，将会提升TopHat结果的准确性和完整性，参考<a href="http://yulongniu.bionutshell.org/blog/2014/07/23/rna-seq-analysis/">一个例子</a>。</p>

<p>有两种方法获得这对参数的准确值：</p>

<p>第一种：获取RNA-seq实验建库方法，之后按照以下网址说明计算，<a href="http://blog.qiuworld.com:8080/archives/3007">RNA-seq差异表达分析工作流程</a>。</p>

<!--more-->

<p>第二种：根据RNA-seq数据进行估算，具体步骤为：</p>

<ol>
  <li>
    <p>使用TopHat默认参数先跑一遍。</p>
  </li>
  <li>
    <p>使用<a href="http://miso.readthedocs.org/en/fastmiso/#computing-the-insert-length-distribution-and-its-statistics">MISO</a>的<code class="language-bash">pe_utils</code>工具估算。</p>
  </li>
</ol>

<p>以下详细介绍<code class="language-bash">pe_utils</code>使用方法。</p>

<p>第一步， 下载对应物种的基因注释文件GTF或者GFF，比如<a href="http://genome.ucsc.edu/cgi-bin/hgTables?command=start">USCS Table Browser</a>（<code class="language-bash">output format</code>选择<code class="language-bash">GTF</code>）或者使用MISO提供的<a href="http://miso.readthedocs.org/en/fastmiso/#human-mouse-gene-models-for-isoform-centric-analyses">Ensembl版本</a>。如果GTF文件，使用<a href="https://cole-trapnell-lab.github.io/cufflinks/file_formats/">Cufflinks</a>的<code class="language-bash">gffread</code>工具进行转换。</p>

<p>第二步，确定TopHat运行结果的bam文件与基因注释GFF文件，两者基因组命名方法一致。有的使用类似<code class="language-bash">chr1</code>命名，而另外一些使用<code class="language-bash">1</code>。如果不一致，建议修改GFF文件。</p>

<p><figure class='code'><figcaption><span>Summary Chromosomes’ Names</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 查看GFF文件中基因组命名</span>
</span><span class='line'><span class="nv">$ </span>awk ‘<span class="o">{</span>print <span class="nv">$1</span><span class="o">}</span>’ hg19USCS.gff <span class="p">|</span> sort -n <span class="p">|</span> uniq -c&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;bam&quot;</span>&gt;查看bam文件中基因组命名&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;samtools view accepted_hits.bam <span class="p">|</span> head -1000 <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$3</span><span class="o">}</span>’ <span class="p">|</span> sort -n <span class="p">|</span> uniq -c
</span></code></pre></td></tr></table></div></figure></p>

<p>第三步，筛选较长外显子，比如长度大于1000bp。MISO提供了<code class="language-bash">exon_utils</code>工具用于提取长外显子，但是我们没有能够成功运行过。因此这里提供一个R版本的脚本，比如基因注释文件名为<code class="language-bash">hg19USCS.gff</code>，输出筛选的文件名为<code class="language-bash">hg19USCS_selected.gff</code>。</p>

<p><figure class='code'><figcaption><span>R Script of Select exons with length &gt; 1000bp</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='R'><span class='line'>gffFile <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> read.table<span class="p">(</span>‘hg19USCS.gff’<span class="p">,</span> stringsAsFactors <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>gffExon <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> gffFile<span class="p">[</span>gffFile<span class="p">[,</span> <span class="m">3</span><span class="p">]</span> <span class="o">==</span> ‘exon’<span class="p">,</span> <span class="p">]</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>exonLen <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">abs</span><span class="p">(</span>gffExon<span class="p">[,</span> <span class="m">5</span><span class="p">]</span> <span class="o">-</span> gffExon<span class="p">[,</span> <span class="m">4</span><span class="p">])</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>gffExonSelect <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> gffExon<span class="p">[</span>exonLen <span class="o">&amp;</span>gt<span class="p">;</span><span class="o">=</span> <span class="m">1000</span><span class="p">,</span> <span class="p">]</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>write.table<span class="p">(</span>gffExonSelect<span class="p">,</span> ‘hg19USCS_selected.gff’<span class="p">,</span>
</span><span class='line'>            row.names <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> col.names <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span>
</span><span class='line'>            quote <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> sep <span class="o">=</span> ‘\<span class="kp">t</span>’<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>第四步，使用<code class="language-bash">pe_utils</code>，实例如下：</p>

<p><figure class='code'><figcaption><span>An example of how to use pe_utils</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 输入bam文件和GFF文件</span>
</span><span class='line'><span class="nv">$ </span>pe_utils –compute-insert-len accepted_hits.bam hg19USCS_selected.gff –output-dir insert-dist/&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;insert-distacceptedfilteredbaminsertlen&quot;</span>&gt;在insert-dist会出现类似accepted_filtered.bam.insert_len文件&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;# -r/–mate-inner-dist估计值为mean
</span><span class='line'><span class="c"># –mate-std-dev估计值为sdev</span>
</span><span class='line'><span class="nv">$ </span>head -1 accepted_filtered.bam.insert_len
</span><span class='line'><span class="c">#mean=165.3,sdev=45.2,dispersion=3.5,num_pairs=5622239</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="section">更新记录</h3>

<p>2015年5月23日</p>
]]></content>
  </entry>
  
</feed>
