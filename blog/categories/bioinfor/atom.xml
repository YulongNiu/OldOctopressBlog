<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bioinfor | 牛牛龙]]></title>
  <link href="http://yulongniu.bionutshell.org/blog/categories/bioinfor/atom.xml" rel="self"/>
  <link href="http://yulongniu.bionutshell.org/"/>
  <updated>2016-09-26T20:49:47+08:00</updated>
  <id>http://yulongniu.bionutshell.org/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HISAT2使用问答]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2016/09/10/hisat2-faq/"/>
    <updated>2016-09-10T16:32:47+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2016/09/10/hisat2-faq</id>
    <content type="html"><![CDATA[<p><a href="https://ccb.jhu.edu/software/hisat2/manual.shtml#the-hisat2-build-indexer">HISAT2</a>是一款用于“对应（map）”二代测序数据（全基因组、转录组和外显子组）至目标基因组的工具，用来替代<a href="http://ccb.jhu.edu/software/hisat/index.shtml">HISAT</a>和<a href="http://www.ccb.jhu.edu/software/tophat/index.shtml">TopHat2</a>。本文汇集一些使用HISAT2的常见问题问答。</p>

<h2 id="hisat2">1. 如何解读HISAT2的输出统计？</h2>

<p>一个常见的双端测序样本HISAT2输出统计：</p>

<!--more-->

<p>
<code>
10000 reads; of these:
  10000 (100.00%) were paired; of these:
    650 (6.50%) aligned concordantly 0 times
    8823 (88.23%) aligned concordantly exactly 1 time
    527 (5.27%) aligned concordantly &gt;1 times
    ----
    650 pairs aligned concordantly 0 times; of these:
      34 (5.23%) aligned discordantly 1 time
    ----
    616 pairs aligned 0 times concordantly or discordantly; of these:
      1232 mates make up the pairs; of these:
        660 (53.57%) aligned 0 times
        571 (46.35%) aligned exactly 1 time
        1 (0.08%) aligned &gt;1 times
96.70% overall alignment rate
</code>
</p>

<ul>
  <li>
    <p>总共10000对reads；</p>
  </li>
  <li>
    <p>8823对concordant pairs（一对既方向匹配又有合适距离的reads）有1次精确比对；527对concordant pairs有1次以上比对；34对disconcordant pairs;</p>
  </li>
  <li>
    <p>616对不是concordant pairs，也不是disconcordant pairs中，571个reads有1次精确比对；1个read有1次以上比对；660个reads没有比对成功。</p>
  </li>
  <li>
    <p>因此，整体比对率为1 - (660 / 2) / 10000</p>
  </li>
</ul>

<h2 id="hisat2-1">2. 使用HISAT2前，是否需要对原始数据进行清洗？</h2>

<p>需要。</p>

<h3 id="section">更新记录</h3>

<p>2016年9月10日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用参考基因组下载地址]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2016/09/10/reference-genome-location/"/>
    <updated>2016-09-10T13:17:00+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2016/09/10/reference-genome-location</id>
    <content type="html"><![CDATA[<p>本文收集了一些常用参考基因组的下载网址。</p>

<ol>
  <li>
    <p><a href="https://www.ncbi.nlm.nih.gov/genome/">NCBI genome</a></p>
  </li>
  <li>
    <p><a href="http://uswest.ensembl.org/info/data/ftp/index.html">Ensembl FTP</a></p>
  </li>
  <li>
    <p><a href="http://hgdownload.cse.ucsc.edu/goldenPath/">UCSC FTP</a></p>
  </li>
  <li>
    <p><a href="http://www.gencodegenes.org/">GENCODE</a>：只有人和大鼠，注释较好。</p>
  </li>
  <li>
    <p><a href="http://support.illumina.com/sequencing/sequencing_software/igenome.html">iGenomes</a>：部分模式生物bowtie、bowtie2和BWA索引基因组。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li><a href="https://ccb.jhu.edu/software/hisat2/index.shtml">HISAT2</a>：部分模式生物HISAT2索引基因组。</li>
</ol>

<h3 id="section">更新记录</h3>

<p>2016年9月10日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UCSC Table下载注释文件]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/06/02/download-ucsc-gene-mask/"/>
    <updated>2015-06-02T16:49:41+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/06/02/download-ucsc-gene-mask</id>
    <content type="html"><![CDATA[<p>在进行RNA-seq数据分析时，需要从<a href="http://genome.ucsc.edu/cgi-bin/hgTables">UCSC Table</a>下载各种注释信息。比如Cufflinks等要求的转录组注释信息、Cufflinks建议去除的rRNA/tRNA/线粒体组注释。</p>

<h2 id="section">1. 基因注释信息</h2>

<p>下载转录组Ensembl注释文件：</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_ensembl.png" title="image" alt="UCSC下载Ensembl注释" /></p>

<!--more-->

<p>在“table”选择中，<code class="language-bash">ensemblSource</code>表示Ensembl类型注释，<code class="language-bash">ensemblToGeneName</code>表示Ensembl到基因名注释对应。</p>

<h2 id="rrna">2. rRNA注释信息</h2>

<p>分为两步：</p>

<p>第一步， “table”选择<code class="language-bash">wgEncodeGencodeBasicV19</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA.png" title="image" alt="UCSC下载rRNA注释" /></p>

<p>第二步，按照下图编辑“filter”。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA_maskTable.png" title="image" alt="UCSC下载rRNA注释Table" /></p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_rRNA_mask.png" title="image" alt="UCSC下载rRNA注释筛选" /></p>

<h2 id="trna">3. tRNA注释信息</h2>

<p>分为两步：</p>

<p>第一步，“track”选择 <code class="language-bash">tRNA Genes</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_tRNA.png" title="image" alt="UCSC下载tRNA注释" /></p>

<p>第二步，保留pseudo tRNA注释。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_tRNA_mask.png" title="image" alt="UCSC下载tRNA注释" /></p>

<h2 id="section-1">4. 线粒体基因组注释</h2>

<p>分为两步：</p>

<p>第一步， “table”选择<code class="language-bash">wgEncodeGencodeBasicV19</code>。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_chrM.png" title="image" alt="UCSC下载chrM注释" /></p>

<p>第二步，按照下图编辑“filter”。</p>

<p><img src="http://yulongniu.bionutshell.org/images/hg19_chrM_mask.png" title="image" alt="UCSC下载chrM注释筛选" /></p>

<h3 id="section-2">参考资料</h3>

<ul>
  <li>
    <p>USCS Genome Browser的Google论坛：<a href="https://groups.google.com/a/soe.ucsc.edu/forum/#!topic/genome/IL_aeOuPYU0">1</a>、<a href="https://groups.google.com/a/soe.ucsc.edu/forum/#!msg/genome/jSAY8w1JVVo/P6lk4OJzDNEJ">2</a></p>
  </li>
  <li>
    <p>另一种选择rRNA、tRNA和线粒体组注释的方法<a href="http://onetipperday.blogspot.tw/2012/08/how-to-get-trnarrnamitochondrial-gene.html">How to get tRNA/rRNA/mitochondrial gene GTF file</a></p>
  </li>
  <li>
    <p><a href="http://webappl.blogspot.tw/2015/02/extract-rrna-and-trna-features-from.html">Extract rRNA and tRNA features from UCSC Browser</a></p>
  </li>
</ul>

<h3 id="section-3">更新记录</h3>

<p>2015年6月1日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[确定TopHat中mate-inner-dist参数]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/23/tophat-inner-distance/"/>
    <updated>2015-05-23T19:08:19+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/23/tophat-inner-distance</id>
    <content type="html"><![CDATA[<p>对于双端测序RNA-seq数据，TopHat在运行时候，有两个参数<code class="language-bash">-r/--mate-inner-dist</code>和<code class="language-bash">--mate-std-dev</code>分别标识一对reads的间隔长度的期望平均值和标准差，其默认值分别为50bp和20bp。这两个参数本身是个估计值，用于TopHat在map过程中确定一对reads是否匹配到基因组正确位置。如果能够准确设定这两个数值，将会提升TopHat结果的准确性和完整性，参考<a href="http://yulongniu.bionutshell.org/blog/2014/07/23/rna-seq-analysis/">一个例子</a>。</p>

<p>有两种方法获得这对参数的准确值：</p>

<p>第一种：获取RNA-seq实验建库方法，之后按照以下网址说明计算，<a href="http://blog.qiuworld.com:8080/archives/3007">RNA-seq差异表达分析工作流程</a>。</p>

<!--more-->

<p>第二种：根据RNA-seq数据进行估算，具体步骤为：</p>

<ol>
  <li>
    <p>使用TopHat默认参数先跑一遍。</p>
  </li>
  <li>
    <p>使用<a href="http://miso.readthedocs.org/en/fastmiso/#computing-the-insert-length-distribution-and-its-statistics">MISO</a>的<code class="language-bash">pe_utils</code>工具估算。</p>
  </li>
</ol>

<p>以下详细介绍<code class="language-bash">pe_utils</code>使用方法。</p>

<p>第一步， 下载对应物种的基因注释文件GTF或者GFF，比如<a href="http://genome.ucsc.edu/cgi-bin/hgTables?command=start">USCS Table Browser</a>（<code class="language-bash">output format</code>选择<code class="language-bash">GTF</code>）或者使用MISO提供的<a href="http://miso.readthedocs.org/en/fastmiso/#human-mouse-gene-models-for-isoform-centric-analyses">Ensembl版本</a>。如果GTF文件，使用<a href="https://cole-trapnell-lab.github.io/cufflinks/file_formats/">Cufflinks</a>的<code class="language-bash">gffread</code>工具进行转换。</p>

<p>第二步，确定TopHat运行结果的bam文件与基因注释GFF文件，两者基因组命名方法一致。有的使用类似<code class="language-bash">chr1</code>命名，而另外一些使用<code class="language-bash">1</code>。如果不一致，建议修改GFF文件。</p>

<p><figure class='code'><figcaption><span>Summary Chromosomes’ Names</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 查看GFF文件中基因组命名</span>
</span><span class='line'><span class="nv">$ </span>awk ‘<span class="o">{</span>print <span class="nv">$1</span><span class="o">}</span>’ hg19USCS.gff <span class="p">|</span> sort -n <span class="p">|</span> uniq -c&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;bam&quot;</span>&gt;查看bam文件中基因组命名&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;samtools view accepted_hits.bam <span class="p">|</span> head -1000 <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$3</span><span class="o">}</span>’ <span class="p">|</span> sort -n <span class="p">|</span> uniq -c
</span></code></pre></td></tr></table></div></figure></p>

<p>第三步，筛选较长外显子，比如长度大于1000bp。MISO提供了<code class="language-bash">exon_utils</code>工具用于提取长外显子，但是我们没有能够成功运行过。因此这里提供一个R版本的脚本，比如基因注释文件名为<code class="language-bash">hg19USCS.gff</code>，输出筛选的文件名为<code class="language-bash">hg19USCS_selected.gff</code>。</p>

<p><figure class='code'><figcaption><span>R Script of Select exons with length &gt; 1000bp</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='R'><span class='line'>gffFile <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> read.table<span class="p">(</span>‘hg19USCS.gff’<span class="p">,</span> stringsAsFactors <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>gffExon <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> gffFile<span class="p">[</span>gffFile<span class="p">[,</span> <span class="m">3</span><span class="p">]</span> <span class="o">==</span> ‘exon’<span class="p">,</span> <span class="p">]</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>exonLen <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">abs</span><span class="p">(</span>gffExon<span class="p">[,</span> <span class="m">5</span><span class="p">]</span> <span class="o">-</span> gffExon<span class="p">[,</span> <span class="m">4</span><span class="p">])</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>gffExonSelect <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> gffExon<span class="p">[</span>exonLen <span class="o">&amp;</span>gt<span class="p">;</span><span class="o">=</span> <span class="m">1000</span><span class="p">,</span> <span class="p">]</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>write.table<span class="p">(</span>gffExonSelect<span class="p">,</span> ‘hg19USCS_selected.gff’<span class="p">,</span>
</span><span class='line'>            row.names <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> col.names <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span>
</span><span class='line'>            quote <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> sep <span class="o">=</span> ‘\<span class="kp">t</span>’<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>第四步，使用<code class="language-bash">pe_utils</code>，实例如下：</p>

<p><figure class='code'><figcaption><span>An example of how to use pe_utils</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 输入bam文件和GFF文件</span>
</span><span class='line'><span class="nv">$ </span>pe_utils –compute-insert-len accepted_hits.bam hg19USCS_selected.gff –output-dir insert-dist/&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;insert-distacceptedfilteredbaminsertlen&quot;</span>&gt;在insert-dist会出现类似accepted_filtered.bam.insert_len文件&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;# -r/–mate-inner-dist估计值为mean
</span><span class='line'><span class="c"># –mate-std-dev估计值为sdev</span>
</span><span class='line'><span class="nv">$ </span>head -1 accepted_filtered.bam.insert_len
</span><span class='line'><span class="c">#mean=165.3,sdev=45.2,dispersion=3.5,num_pairs=5622239</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="section">更新记录</h3>

<p>2015年5月23日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[过滤TopHat分析双端测序的输出]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/05/16/filter-tophat2-output/"/>
    <updated>2015-05-16T04:33:10+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/05/16/filter-tophat2-output</id>
    <content type="html"><![CDATA[<script type="text/x-mathjax-config">
MathJax.Hub.Config({
TeX: { equationNumbers: { autoNumber: "AMS" } }
});
</script>

<h2 id="section">0. 结论</h2>

<p>在使用TopHat2匹配双端测序结果后，建议根据成对reads的map基因组位置唯一、方向正确和距离合适的标准，筛选得到的匹配结果。比如，TopHat2可能生成<code class="language-bash">accepted_hits.bam</code>文件，处理方法如下：</p>

<p><figure class='code'><figcaption><span>Filter TopHat Outputs</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;bam&quot;</span>&gt;首先查看bam文件头部有多少行&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view -H accepted_hits.bam <span class="p">|</span> wc -l
</span><span class='line'>86&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;mapreadsnr--86&quot;</span>&gt;筛选成对且成功map到基因组唯一位置的reads，按照上一条输出结果，调整“NR <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">=</span> 86”&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view -h accepted_hits.bam <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>    awk ‘<span class="o">{</span><span class="k">if</span> <span class="o">(</span>NR <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">=</span> 86<span class="o">)</span> print <span class="nv">$0</span><span class="o">}</span><span class="p">;</span> <span class="o">{</span><span class="k">if</span><span class="o">(</span><span class="nv">$5</span> <span class="o">==</span> <span class="m">50</span> <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> <span class="o">(</span><span class="nv">$2</span> <span class="o">==</span> <span class="m">163</span> <span class="o">||</span> <span class="nv">$2</span> <span class="o">==</span> <span class="m">147</span> <span class="o">||</span> <span class="nv">$2</span> <span class="o">==</span> <span class="m">83</span> <span class="o">||</span> <span class="nv">$2</span> <span class="o">==</span> 99<span class="o">))</span> print <span class="nv">$0</span><span class="o">}</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>    samtools view -b - <span class="p">&amp;</span>gt<span class="p">;</span> accepted_filtered.bam&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view accepted_filtered.bam <span class="p">|</span> wc -l
</span><span class='line'>79143942
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="tophatsam">1. TopHat输出sam文件的第五列</h2>

<p><a href="http://ccb.jhu.edu/software/tophat/manual.shtml">TopHat文档</a>没有解释其输出bam文件（比如<code class="language-bash">accepted_hits.bam</code>）的第五列的意义。按照<a href="http://bowtie-bio.sourceforge.net/bowtie2/index.shtml">Bowtie2</a>输出结果来看，是表示映射质量指标Mapping Quality scores（MAPQ），具体计算参考公式$\eqref{eq:1}$。</p>

<script type="math/tex; mode=display">\begin{align}
MAPQ = -10 \times log_{10}(pvalue)
\label{eq:1}
\end{align}</script>

<!--more-->

<p>MAPQ值越大，表示对应的read的alignment质量越高。然而，在TopHat输出结果中，MAPQ所代表意义略有不同。</p>

<p><figure class='code'><figcaption><span>“MAPQ” distribution from TopHat2 accepted mapping reads</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 查看accepted_hits.bam文件的MAPQ数值，并统计出现频数</span>
</span><span class='line'><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$5</span><span class="o">}</span>’ <span class="p">|</span> sort –parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class='line'><span class="m">5057430</span> 0
</span><span class='line'><span class="m">3117731</span> 1
</span><span class='line'><span class="m">8058500</span> 3
</span><span class='line'><span class="m">93044727</span> 50&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;mapqnhin&quot;</span>&gt;查看前100位MAPQ数值和NH:i:n分布&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$5</span><span class="o">}</span>’ <span class="p">|</span> head -100 <span class="p">|</span> sort –parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class='line'><span class="m">35</span> 0
</span><span class='line'><span class="m">42</span> 1
</span><span class='line'><span class="m">22</span> 3
</span><span class='line'><span class="m">1</span> 50&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$20</span><span class="o">}</span>’ <span class="p">|</span> head -100 <span class="p">|</span> sort –parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class='line'><span class="m">1</span> NH:i:1
</span><span class='line'><span class="m">22</span> NH:i:2
</span><span class='line'><span class="m">3</span> NH:i:20
</span><span class='line'><span class="m">13</span> NH:i:3
</span><span class='line'><span class="m">29</span> NH:i:4
</span><span class='line'><span class="m">5</span> NH:i:5
</span><span class='line'><span class="m">21</span> NH:i:6
</span><span class='line'><span class="m">1</span> NH:i:7
</span><span class='line'><span class="m">2</span> NH:i:8
</span><span class='line'><span class="m">3</span> NH:i:9&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;mapqnhin-1&quot;</span>&gt;查看前200位MAPQ数值和NH:i:n分布&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$5</span><span class="o">}</span>’ <span class="p">|</span> head -200 <span class="p">|</span> sort –parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class='line'><span class="m">60</span> 0
</span><span class='line'><span class="m">43</span> 1
</span><span class='line'><span class="m">67</span> 3
</span><span class='line'><span class="m">30</span> 50&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> awk ‘<span class="o">{</span>print <span class="nv">$20</span><span class="o">}</span>’ <span class="p">|</span> head -200 <span class="p">|</span> sort –parallel<span class="o">=</span><span class="m">4</span> -n <span class="p">|</span> uniq -c
</span><span class='line'><span class="m">30</span> NH:i:1
</span><span class='line'><span class="m">8</span> NH:i:12
</span><span class='line'><span class="m">7</span> NH:i:14
</span><span class='line'><span class="m">67</span> NH:i:2
</span><span class='line'><span class="m">3</span> NH:i:20
</span><span class='line'><span class="m">13</span> NH:i:3
</span><span class='line'><span class="m">30</span> NH:i:4
</span><span class='line'><span class="m">5</span> NH:i:5
</span><span class='line'><span class="m">31</span> NH:i:6
</span><span class='line'><span class="m">1</span> NH:i:7
</span><span class='line'><span class="m">2</span> NH:i:8
</span><span class='line'><span class="m">3</span> NH:i:9
</span></code></pre></td></tr></table></div></figure></p>

<p>首先，我们可以看到TopHat输出的MAPQ只有四个数值，分别为<code class="language-bash">50</code>、<code class="language-bash">3</code>、<code class="language-bash">1</code>和<code class="language-bash">0</code>。根据<a href="http://samtools.github.io/hts-specs/SAMv1.pdf">sam文件标准</a>，<code class="language-bash">NH:i:n</code>表示含有查询序列的alignment的数量。因此，通过上述前100位和前200位分析可以发现，MAPQ并不是按照公式$\eqref{eq:1}$计算，而有可能是以下关系：</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: left">MAPQ (tophat)</th>
      <th style="text-align: center">Tag</th>
      <th style="text-align: right">描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">50</td>
      <td style="text-align: center">NH:i:1</td>
      <td style="text-align: right">map至唯一位置</td>
    </tr>
    <tr>
      <td style="text-align: left">3</td>
      <td style="text-align: center">NH:i:2</td>
      <td style="text-align: right">map至2个位置</td>
    </tr>
    <tr>
      <td style="text-align: left">1</td>
      <td style="text-align: center">NH:i:3/NH:i:4</td>
      <td style="text-align: right">map至3个或4个位置</td>
    </tr>
    <tr>
      <td style="text-align: left">0</td>
      <td style="text-align: center">NH:i:n (n &gt; 4)</td>
      <td style="text-align: right">map到多余4个位置</td>
    </tr>
  </tbody>
</table>

<hr />

<p>展示一个<code class="language-bash">NH:i:1</code>的例子，注意Illumina双端测序平台<code class="language-bash">fr-unstranded</code>：</p>

<p><figure class='code'><figcaption><span>Two pairs of unique mapped reads from Illumina HiSeq2000 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>HISEQ2000-02:436:C2PG3ACXX:3:2313:10972:95322   <span class="m">163</span>     chr1    <span class="m">637224</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">637339</span>  <span class="m">215</span>     AAATGATCTGTACAATAACCCCCTGTGACACCAGTCTACCTATGTAACAAATGCCCCTAAACTTAAAATAAAAGTTAAAAAAAAAGAAAATTAAAATCTC  <span class="p">&amp;</span>lt<span class="p">;</span>@@BDABBDFBCDGEGHIGIIGIABAFHBGDFGGGHIIIFIEIGGGGIIIFFDHIGIIIIIIIICEHIIIIIIHEHHDHFFCBCCB@BCAACCCCCECCC    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span><span class='line'>HISEQ2000-02:436:C2PG3ACXX:3:2313:10972:95322   <span class="m">83</span>      chr1    <span class="m">637339</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">637224</span>  -215    GTAATATGAAAAACACAAATCTTTCATTCATTCCTTTCAACTGATGAGGAAAATGAGGCATCGGGAGTTAGTAAAAGTCCACATTGAGATATGAGACCCA  <span class="nv">CCADDDCCCCCCCDEEEECAEHEEGGIIHGFAAGGGHEF</span><span class="o">=</span>IGGGIIGGHGCGIEIIIGIIIIIIIFIHIIIIIIGIIHFEAIGGIIGFFDFHDDDAD@@@    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;HISEQ2000-06:325:C2RC0ACXX:5:2205:6961:88285    <span class="m">99</span>      chr1    <span class="m">643662</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">643707</span>  <span class="m">145</span>     CCTATCAAAATCTTAGCATTCCTCTTAGCCCTCAACAAAGCATTTCTAAAATGTGTATAGAAGACCAAAGGGCCAAAAGAGTCAACTTCTGAAGAAGCGC  CCCFFFFFHHHHHJJJJIJJHJJJJJJJIIJJJJJJJJJJJJIJJJJJIIIJJIIIJJJJJJJJJIJJJJIJJJIHHHHFFEFFFEEEEEEEDDCDDCDD    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span><span class='line'>HISEQ2000-06:325:C2RC0ACXX:5:2205:6961:88285    <span class="m">147</span>     chr1    <span class="m">643707</span>  <span class="m">50</span>      <span class="nv">100M</span>    <span class="o">=</span>       <span class="m">643662</span>  -145    CTAAAATGTGTATAGAAGACCAAAGGGCCAAAAGAGTCAACTTCTGAAGAAGCGCAAAAAGAAAGTTGAGGAAATCTTAAAACATGTTATTGAGCTTAAA  CEEEDDDDEDFEEEEEEEBFFFFFHHHHEJJJJJJJJIJJJJGJIIIIHFJJJIIJJJJJIJJJJJJJJJJJJGHJJJJIJJJJJJJGHHHHFFFFFCCC    AS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:100     YT:Z:UU  NH:i:1
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="sam">2. sam文件的第二列</h2>

<p>sam文件中的第二列提供了具体的map情况，下列表格摘自<a href="http://samtools.github.io/hts-specs/SAMv1.pdf">sam文件标准</a>，sam/bam文件中第二列各种条件<strong>求和</strong>的<strong>十进制</strong>标识，<a href="http://broadinstitute.github.io/picard/explain-flags.html">快速解释第二列的bitwise FLAG</a>：</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: center">Decimal</th>
      <th style="text-align: center">Hexadecimal</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0x1</td>
      <td style="text-align: left">template having multiple segments in sequencing</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">0x2</td>
      <td style="text-align: left">each segment properly aligned according to the aligner</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">0x4</td>
      <td style="text-align: left">segment unmapped</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">0x8</td>
      <td style="text-align: left">next segment in the template unmapped</td>
    </tr>
    <tr>
      <td style="text-align: center">16</td>
      <td style="text-align: center">0x10</td>
      <td style="text-align: left">SEQ being reverse complemented</td>
    </tr>
    <tr>
      <td style="text-align: center">32</td>
      <td style="text-align: center">0x20</td>
      <td style="text-align: left">SEQ of the next segment in the template being reverse complemented</td>
    </tr>
    <tr>
      <td style="text-align: center">64</td>
      <td style="text-align: center">0x40</td>
      <td style="text-align: left">the first segment in the template</td>
    </tr>
    <tr>
      <td style="text-align: center">128</td>
      <td style="text-align: center">0x80</td>
      <td style="text-align: left">the last segment in the template</td>
    </tr>
    <tr>
      <td style="text-align: center">256</td>
      <td style="text-align: center">0x100</td>
      <td style="text-align: left">secondary alignment</td>
    </tr>
    <tr>
      <td style="text-align: center">512</td>
      <td style="text-align: center">0x200</td>
      <td style="text-align: left">not passing quality controls</td>
    </tr>
    <tr>
      <td style="text-align: center">1024</td>
      <td style="text-align: center">0x400</td>
      <td style="text-align: left">PCR or optical duplicate</td>
    </tr>
    <tr>
      <td style="text-align: center">2048</td>
      <td style="text-align: center">0x800</td>
      <td style="text-align: left">supplementary alignment</td>
    </tr>
  </tbody>
</table>

<hr />

<p>在map完成双端测序序列中，我们感兴趣的是一对reads都正确align到基因组上，而且方相匹配又距离合适。符合这样条件的reads，对应的第二列数值为99、147、83和163，具体图示参考<a href="https://biobeat.wordpress.com/2013/04/29/directional-rna-seq-part-1-extract-strand-information-from-sam-file/">Directional RNA-seq— Part 1: SAM file flags</a>。下面表格解释四个数值的具体意义，其中<code class="language-bash">1</code>标识双端测序，<code class="language-bash">2</code>表示一对reads正确地map到基因组合适位置，表格中着重陈述<code class="language-bash">64</code>、<code class="language-bash">32</code>、<code class="language-bash">128</code>和<code class="language-bash">16</code>。</p>

<hr />

<table>
  <thead>
    <tr>
      <th>Flag</th>
      <th>Composition</th>
      <th>Explanation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>99</td>
      <td>64+32+2+1</td>
      <td>一对引物中第一个map到基因组正义链；第二个反方向map到基因组正义链</td>
    </tr>
    <tr>
      <td>147</td>
      <td>128+16+2+1</td>
      <td>一对引物中第二个反方向map基因组正义链；第一个map到基因组正义链</td>
    </tr>
    <tr>
      <td>83</td>
      <td>64+16+2+1</td>
      <td>一对引物中第一个map到基因组反义链；第二个反方向map到基因组反义链</td>
    </tr>
    <tr>
      <td>163</td>
      <td>128+32+2+1</td>
      <td>一对引物中第二个反方向map基因组正义链；第一个map到基因组正义链</td>
    </tr>
  </tbody>
</table>

<hr />

<p>之后，我们需要筛选含有这些flags的reads。由于我们通常需要操作bam文件，也希望输出是bam文件，中间过程不希望再重新生成sam文件。那么，就需要结合使用<code class="language-bash">awk</code>进行筛选，具体方法见本篇文章开头所示。当然，如果是只是查看，可以使用下面例子中的 <code class="language-bash">samtools view -f 0x2</code>。</p>

<p><figure class='code'><figcaption><span>Count number of unique pair-mapped alignments</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># map到基因组上唯一位置的reads数目</span>
</span><span class='line'><span class="nv">$ </span>samtools view -q <span class="m">50</span> accepted_hits.bam <span class="p">|</span> wc -l
</span><span class='line'>93044727
</span><span class='line'><span class="c"># 成对reads都map到基因组对应位置的reads数目</span>
</span><span class='line'><span class="nv">$ </span>samtools view -f 0x2 accepted_hits.bam <span class="p">|</span> wc -l
</span><span class='line'>88793640
</span><span class='line'><span class="c"># 成对且唯一mapped的reads数目</span>
</span><span class='line'><span class="nv">$ </span>samtools view -q <span class="m">50</span> -f 0x2 accepted_hits.bam <span class="p">|</span> wc -l
</span><span class='line'>79143942
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="tophat">3. 操作TopHat输出的文件命令集锦</h2>

<p><figure class='code'><figcaption><span>Useful bash for bam files from TopHat</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># samtools的view -c命令，其实就是输出sam文件有多少行</span>
</span><span class='line'><span class="nv">$ </span>samtools view accepted_hits.bam <span class="p">|</span> wc -l
</span><span class='line'>109278388
</span><span class='line'><span class="nv">$ </span>samtools view -c accepted_hits.bam
</span><span class='line'>109278388&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;bammappedreads&quot;</span>&gt;查看bam文件中mapped的reads长度分布&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;# 第二种方法是运行FastQC，输出结果中也有显示
</span><span class='line'>samtools view accepted_hits.bam <span class="p">|</span> awk ‘<span class="o">{</span>print length<span class="o">(</span><span class="nv">$10</span><span class="o">)}</span>’ <span class="p">|</span> sort -n <span class="p">|</span> uniq -c&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;bed&quot;</span>&gt;查看bed文件前几行&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>head junction.bed
</span><span class='line'><span class="c"># 统计bed文件有多少行，需要去除第一行注释</span>
</span><span class='line'><span class="c"># 以下两种方式相同，但不够完美</span>
</span><span class='line'><span class="nv">$ </span>wc -l junction.bed
</span><span class='line'><span class="m">220648</span> junctions.bed
</span><span class='line'><span class="nv">$ </span>awk ‘END <span class="o">{</span>print NR<span class="o">}</span>’ junctions.bed
</span><span class='line'>220648
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="dnamrna">4. DNA链和mRNA链的称呼总结</h2>

<p>双链DNA和单链mRNA，对每条链都有特定的称呼。总结如下：</p>

<p><figure class='code'><figcaption><span>DNA/RNA strands </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>3’~~~~~UCUGAU~~~~~ 5’ mRNA的对应基因信息在reverse strand&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;5’—–AGACTA———-ATTGTT—– 3’
</span><span class='line'>3’—–TCTGAT———-TAACAA—– 5’&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;            5<span class="s1">&#39;~~~~~AUUGUU~~~~~ 3&#39;</span> mRNA的对应基因信息在forward strand
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<p>对于一条双链DNA，称呼列表如下：</p>

<table>
  <thead>
    <tr>
      <th>方向<sup>a</sup></th>
      <th>名称1</th>
      <th>名称2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>从左至右</td>
      <td>forward</td>
      <td>plus</td>
    </tr>
    <tr>
      <td>从右至左</td>
      <td>reverse</td>
      <td>minus</td>
    </tr>
  </tbody>
</table>

<p><sup>a</sup>：方向是指5’至3’的阅读方向，用于区分两条DNA链条</p>

<hr />

<p>对于一条RNA链，其对应的双链DNA称呼如下：</p>

<table>
  <thead>
    <tr>
      <th>mRNA方向<sup>a</sup></th>
      <th>名称1</th>
      <th>名称2</th>
      <th>名称3</th>
      <th>名称4</th>
      <th>名称5</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>同向</td>
      <td>coding</td>
      <td>nontemplate</td>
      <td>sense</td>
      <td>positive</td>
      <td>+</td>
    </tr>
    <tr>
      <td>反向</td>
      <td>template</td>
      <td>noncoding</td>
      <td>antisense</td>
      <td>negative</td>
      <td>-</td>
    </tr>
  </tbody>
</table>

<p><sup>a</sup>：mRNA方向是指5’至3’。</p>

<hr />

<h3 id="section-1">参考网址</h3>

<ul>
  <li>
    <p><a href="http://blog.qiuworld.com:8080/archives/3321">关于map当中的unique mapped reads问题</a></p>
  </li>
  <li>
    <p>TopHat的bam输出文件第五列（类似MAPQ）的讨论： <a href="https://groups.google.com/forum/#!topic/tuxedo-tools-users/m0p1qXDEqKA">tophat mapping quality</a>和<a href="http://www.acgt.me/blog/2015/3/17/more-madness-with-mapq-scores-aka-why-bioinformaticians-hate-poor-and-incomplete-software-documentation">More madness with MAPQ scores</a></p>
  </li>
  <li>
    <p><a href="https://biobeat.wordpress.com/2013/05/01/directional-rna-seq-part-2-using-samtools/">Directional RNA-seq— Part 2: Explore SAM flags using samtools</a></p>
  </li>
  <li>
    <p><a href="http://www.acgt.me/blog/2015/4/15/filtering-a-sam-file-generated-by-tophat-to-find-uniquely-mapped-concordant-read-pairs-awk-vs-samtools">Filtering a SAM file generated by TopHat to find uniquely mapped, concordant read pairs: AWK vs SAMtools</a></p>
  </li>
  <li>
    <p><a href="https://www.biostars.org/p/3423/">Question: Forward And Reverse Strand Conventions</a></p>
  </li>
  <li>
    <p><a href="http://en.wikipedia.org/wiki/Sense_(molecular_biology)">wiki</a></p>
  </li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2015年5月25日</p>
]]></content>
  </entry>
  
</feed>
