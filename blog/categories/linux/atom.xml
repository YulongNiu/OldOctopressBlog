<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 牛牛龙]]></title>
  <link href="http://yulongniu.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://yulongniu.github.io/"/>
  <updated>2015-05-09T15:46:43+08:00</updated>
  <id>http://yulongniu.github.io/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fedora安装与使用PostgreSQL]]></title>
    <link href="http://yulongniu.github.io/blog/2015/05/08/install-use-postgresql/"/>
    <updated>2015-05-08T18:30:54+08:00</updated>
    <id>http://yulongniu.github.io/blog/2015/05/08/install-use-postgresql</id>
    <content type="html"><![CDATA[<h2 id="postgresql">1. 安装和开启postgresql</h2>

<p>Fedora直接使用<code class="language-bash">yum</code>安装相关组件。</p>

<p>{% codeblock lang:bash %}
# 安装PostgreSQL
# yum install postgresql postgresql-server postgresql-contrib postgresql-devel pgadmin3
{% endcodeblock %}</p>

<!--more-->

<p>初始化（只需要执行一次）。如果出现类似<code class="language-bash">Data directory is not empty!</code>报错，可以尝试执行删除操作<code>rm -f -r /usr/local/pgsql/data</code></p>

<p>{% codeblock lang:bash %}
# 初始化
# postgresql-setup initdb</p>

<h1 id="section">开启服务</h1>
<p># service postgresql start</p>

<h1 id="section-1">查询工作状态</h1>
<p># service postgresql status</p>

<h1 id="section-2">关闭服务</h1>
<p># service postgresql stop</p>

<h1 id="section-3">开机启动</h1>
<p># chkconfig postgresql on
{% endcodeblock %}</p>

<h2 id="section-4">2. 创建用户和数据库</h2>

<p>为了方便使用，可以在PostgreSQL中创建一个与当前系统用户名相同的用户，比如目前系统登陆用户为Kitty。</p>

<p>{% codeblock lang:bash %}
# 进入home路径
$ cd \home</p>

<h1 id="postgresroot">进入默认postgres用户，需要输入root密码。</h1>
<p># 之后系统命令提示符会变成类似“bash-4.3$”。
$ su postgres</p>

<h1 id="section-5">创建用户</h1>
<p># -P：创建用户后立即创建密码
# -s：用户为superuser
# -e：打印消息
bash-4.3$ createuser -P -s -e Kitty</p>

<h1 id="section-6">创建数据库</h1>
<p># -O：制定用户
bash-4.3$ createdb -O Kitty testdb</p>

<h1 id="section-7">退出</h1>
<p>bash-4.3$ exit</p>

<h1 id="postgres">再创建新的数据库时，不需要进入postgres。</h1>
<p># 直接在当前登录用户下创建即可。
# 由于PostgreSQL用户与系统登录用户相同，不需要指定PostgreSQL用户
$ creatdb testdb2</p>

<h1 id="section-8">删除数据库</h1>
<p>$ dropdb testdb2
{% endcodeblock %}</p>

<p>创建完用户和对应数据库后，可以登录数据库控制台。登录后，系统命令提示符会变成类似“testdb=#”。</p>

<p>{% codeblock lang:bash %}</p>

<h1 id="testdb">登录testdb数据库控制台</h1>
<p>$ psql testdb</p>

<h1 id="section-9">完整登录命令</h1>
<p># -U：用户名
# -d：数据库
# -h：host，默认为local socket
# -p：端口
$ psql -U Yulong -d testdb -h /var/run/postgresql -p 5432</p>

<h1 id="postgresql-1">查看PostgreSQL配制文件路径</h1>
<p>testdb=# SHOW config_file;</p>

<h1 id="section-10">查看所有用户</h1>
<p>testdb=# \du</p>

<h1 id="table">查看表格（table）</h1>
<p>testdb=# \dt</p>

<h1 id="section-11">查看所有数据库</h1>
<p>testdb=# \l</p>

<h1 id="section-12">退出</h1>
<p>testdb=# \q
{% endcodeblock %}</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="http://www.postgresql.org/docs/9.4/interactive/index.html">PostgreSQL 9.4 Manuals</a></p>
  </li>
  <li>
    <p><a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL新手入门</a></p>
  </li>
  <li>
    <p><a href="http://www.heatware.net/linux-unix/how-install-postgresql-8-4-centos-5/">初始化错误</a></p>
  </li>
</ul>

<h3 id="section-13">更新记录</h3>

<p>2015年5月9日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux常用命令集锦]]></title>
    <link href="http://yulongniu.github.io/blog/2010/11/09/linux-command/"/>
    <updated>2010-11-09T06:00:40+08:00</updated>
    <id>http://yulongniu.github.io/blog/2010/11/09/linux-command</id>
    <content type="html"><![CDATA[<h2 id="section">1. 压缩与解压缩</h2>

<p><code class="language-bash">.tar.gz</code>格式文件</p>

<p>{% codeblock lang:bash %}
# 解压 
$ tar -zxvf /filePath/filename.tar.gz</p>

<h1 id="section-1">压缩</h1>
<p>$ tar -zcvf /filePath/filename.tar.gz /filePath/filename</p>

<h1 id="section-2">解压到特定文件夹</h1>
<p>$ tar -zxvf /filePath/filename.tar.gz -C /filePath/filename </p>

<h1 id="section-3">压缩到特定文件夹</h1>
<p>$ tar -zcvf /filePath/filename.tar.gz -C /filePath/filename </p>

<h1 id="txt">压缩所有txt类型文件</h1>
<p>$ gzip *.txt
{% endcodeblock %}</p>

<p><code class="language-bash">.tar.bz2</code>格式文件</p>

<p>{% codeblock lang:bash %}
# 解压 
$ tar -jxvf /filePath/filename.taz.bz2</p>

<h1 id="section-4">压缩</h1>
<p>$ tar -jcvf /filePath/filename.tar.bz2 /filePath/filename
{% endcodeblock %}</p>

<!--more-->

<p><code class="language-bash">.rar</code>格式文件</p>

<p>需要安装<a href="http://www.rarsoft.com/download.html">rar工具</a>, 下载对应的linux版本，解压，<code class="language-bash">make</code>即可。</p>

<p>{% codeblock lang:bash %}
# 解压
$ rar e /filePath/filename.rar /filePath/filename</p>

<h1 id="section-5">压缩</h1>
<p>$ rar a -m5 /filePath/filename.rar /filePath/filename
{% endcodeblock %}</p>

<p><code class="language-bash">.zip</code>格式文件</p>

<p>需要安装zip和unzip工具</p>

<p>{% codeblock lang:bash %}
# yum install zip
# yum install unzip
{% endcodeblock %}</p>

<p>{% codeblock lang:bash %}
# 解压
$ unzip filename.zip</p>

<h1 id="section-6">只打印最简短解压信息，并不解压</h1>
<p>$ unzip -tq filename.zip</p>

<h1 id="section-7">解压其中一个文件</h1>
<p>$ unzip filename.zip onefile</p>

<h1 id="section-8">解压到特定目录</h1>
<p>$ unzip filename.zip -d /filePath/filename</p>

<h1 id="section-9">压缩当前目录</h1>
<p>$ zip filename *</p>

<h1 id="section-10">压缩当前目录包括所有子目录</h1>
<p>$ zip -r filename *
{% endcodeblock %}</p>

<h2 id="section-11">2. 文件夹操作</h2>

<p>{% codeblock lang:bash %}
# 创建 
$ mkdir</p>

<h1 id="section-12">删除</h1>
<p>$ rm  </p>

<h1 id="section-13">删除整个文件夹</h1>
<p>$ rm -rf</p>

<h1 id="section-14">复制</h1>
<p>$ cp   </p>

<h1 id="section-15">复制文件夹</h1>
<p>$ cp -r
{% endcodeblock %}</p>

<h2 id="section-16">3. 目录</h2>

<p>{% codeblock lang:bash %}
# 显示 
$ ls</p>

<h1 id="section-17">列表显示文件和相关权限</h1>
<p>$ ls -l</p>

<h1 id="section-18">列表显示文件并按照文件名逆序排列</h1>
<p>$ ls -rl</p>

<h1 id="section-19">显示隐藏文件</h1>
<p>$ ls -a      </p>

<h1 id="section-20">可以配合使用</h1>
<p>$ ls -al</p>

<h1 id="section-21">查看文件夹大小</h1>
<p>$ ls -lhs</p>

<h1 id="section-22">查看目录树</h1>
<p>$ tree
{% endcodeblock %}</p>

<h2 id="sh">4. 运行 *.sh文件</h2>

<p>{% codeblock lang:bash %}
# 将sh文件赋予可执行权限
$ chomd 777 filename.sh
$ sh /filePath/filename.sh
{% endcodeblock %}</p>

<h2 id="section-23">5. 更改文件名</h2>

<p>{% codeblock lang:bash %}
$ mv oldfile newfile
{% endcodeblock %}</p>

<h2 id="md5">6. md5报文摘要算法</h2>

<p>md5（Message-Digest Algorithm 5）报文摘要，可以用来验证网络文件传输的完整性。</p>

<p>{% codeblock lang:bash %}
$ md5sum file
{% endcodeblock %}</p>

<h2 id="java">7. java类型文件</h2>

<p>Java Control Panel位置<code class="language-bash">/usr/java/jdk1.7.0_45/bin/ControlPanel</code></p>

<p>{% codeblock lang:bash %}
# 执行.jar格式文件
$ java -jar filename.jar</p>

<h1 id="jnlp">执行.jnlp格式文件</h1>
<p>$ javaws filename.jnlp
{% endcodeblock %}</p>

<h2 id="section-24">8. 查看文件</h2>

<p>{% codeblock lang:bash %}
# 将文件直接打印在屏幕上
$ cat filename  <br />
{% endcodeblock %}</p>

<h2 id="section-25">9. 查看自己系统32位还是64位</h2>

<p>{% codeblock lang:bash %}
$ uname -a
{% endcodeblock %}</p>

<h2 id="section-26">10. 查看当前路径</h2>

<p>{% codeblock lang:bash %}
$ pwd
{% endcodeblock %}</p>

<h2 id="section-27">11. 查看某个程序/库的安装路径</h2>

<p>{% codeblock lang:bash %}
# 比如查看R的安装位置
$ which R</p>

<h1 id="section-28">查看某个文件的位置</h1>
<p>$ whereis filename
{% endcodeblock %}</p>

<h2 id="section-29">12. 查看一个命令的文档帮助</h2>

<p>{% codeblock lang:bash %}
# 比如man R
$ man commandname
{% endcodeblock %}</p>

<h2 id="section-30">13. 批量处理文件</h2>

<p>{% codeblock lang:bash %}
# 删除满足条件的数据
$ find ./ -iname ‘*’ | xargs rm -rf </p>

<h1 id="section-31">移动大数据量的文件.</h1>
<p>$ find ./ -name “*.gif” | xargs -i mv {} /filePath/ 
{% endcodeblock %}</p>

<h2 id="path">14. 修改PATH</h2>

<p>假设我们程序的绝对路径是<code class="language-bash">/opt/arbtest/arb</code>
两种方法: </p>

<ul>
  <li>直接命令行运行</li>
</ul>

<p>{% codeblock lang:bash %}
# export PATH=$PATH:/opt/arbtest
{% endcodeblock %}</p>

<p>这种方法当前有效，重启之后就失效了。</p>

<p>{% codeblock lang:bash %}
# 查看修改该好的PATH
$ export
{% endcodeblock %}
* 修改<code class="language-bash">/etc/profile</code>（系统设置，任何用户都可使用）或者<code class="language-bash">~/.bashrc</code>（当前用户）文件。
向这两个文件中添加<code class="language-bash">export PATH=$PATH:/opt/arbtest</code></p>

<p>{% codeblock lang:bash %}
# 载入修改好的文件 </p>

<h1 id="rootprofile">载入root权限profile</h1>
<p># source /etc/profile</p>

<h1 id="bashrc">载入当前用户.bashrc文件</h1>
<p>$ source ~/.bashrc</p>

<h1 id="section-32">查看修改好的路径</h1>
<p>$ echo $PATH
{% endcodeblock %}</p>

<h2 id="section-33">15. 定向输入输出</h2>

<p>禁止屏幕输出，即将屏幕输出导入Linux的无底洞 <code class="language-bash">/dev/null</code>，比如 </p>

<p>{% codeblock lang:bash %}
$ cat myFile &gt; /dev/null
{% endcodeblock %}</p>

<p>此时，导入的是标准屏幕输出（标号为1）stdout。如果要导入标准错误输出（标号为2）stderr，执行</p>

<p>{% codeblock lang:bash %}
$ cat myFile 2 &gt; /dev/null
{% endcodeblock %}</p>

<p>如果将两种输出全部导入<code class="language-bash">/dev/null</code>，执行</p>

<p>{% codeblock lang:bash %}
# 最后的”2&gt;$1”表示2的操作等同于1
$ cat myFile &gt; /dev/null 2&gt;$1
{% endcodeblock %}</p>

<h2 id="section-34">16. 更改文件权限和所有者</h2>

<p>使用命令<code class="language-bash">chmod</code>更改文件权限。</p>

<ul>
  <li>
    <p><code class="language-bash">u</code>：所有者（user）</p>
  </li>
  <li>
    <p><code class="language-bash">g</code>：群组（group）</p>
  </li>
  <li>
    <p><code class="language-bash">o</code>：其他人（others）</p>
  </li>
  <li>
    <p><code class="language-bash">a</code>：所有人（all）</p>
  </li>
  <li>
    <p><code class="language-bash">r</code>：表示可读（read），对应数值4</p>
  </li>
  <li>
    <p><code class="language-bash">w</code>：表示可写（write），对应数值2</p>
  </li>
  <li>
    <p><code class="language-bash">x</code>：表示可执行（excute），对应数值1</p>
  </li>
  <li>
    <p><code class="language-bash">-</code>：表示什么操作都不行，对应数值0</p>
  </li>
</ul>

<p>{% codeblock lang:bash %}
# 比如rw-rw-r–对应664
$ chomd 664 filename
{% endcodeblock %}</p>

<p>使用命令<code class="language-bash">chown</code>更改文件所有者</p>

<h2 id="section-35">17.更改文件时间戳</h2>

<p>{% codeblock lang:bash %}
# 更新myfile的存取和修改时间；如果myfile不存在，则创建该文件
$ touch filename
{% endcodeblock %}</p>

<h2 id="ntfs">18. 挂载NTFS分区</h2>

<p>CentOS需要手动挂在NTFS分区，下载并安装<a href="http://www.tuxera.com/community/ntfs-3g-download/">NTFS-3G</a>，安装方法：</p>

<p>{% codeblock lang:bash %}
# ./configure 
# make
# make install 
{% endcodeblock %}</p>

<p>查找NTFS分区路径，此处假定为<code class="language-bash">/dev/sta1</code>：</p>

<p>{% codeblock lang:bash %}
# 查看硬盘分区
# fdisk -l</p>

<h1 id="ntfs-1">挂载NTFS分区</h1>
<p># mkdir /mnt/NTFStest
# mount -t ntfs-3g /dev/sta1 /mnt/NTFStest</p>

<h1 id="section-36">卸载分区</h1>
<p># umount /mnt/NTFStest
{% endcodeblock %} </p>

<p>如果需要自动挂载ntfs分区，首先要查看分区信息，比如uuid</p>

<p>{% codeblock lang:bash %}
# blkid
{% endcodeblock %}</p>

<p>之后修改<code class="language-bash">/etc/fstab</code>，添加需要挂载的分区</p>

<p>{% codeblock lang:bash %}
UUID=12D345251F34 /media/D ntfs defaults 0 0
{% endcodeblock %}</p>

<h2 id="yum">19. yum服务相关</h2>

<p>以下命令都可以配合<code class="language-bash">grep</code>使用</p>

<p>{% codeblock lang:bash %}
# 终止yum安装
# rm -f /var/run/yum.pid</p>

<h1 id="section-37">查询包</h1>
<p># yum search pkg</p>

<h1 id="section-38">重新安装包</h1>
<p># yum reinstall pkg</p>

<h1 id="section-39">升级包</h1>
<p># yum update pkg</p>

<h1 id="section-40">卸载包</h1>
<p># yum remove pkg</p>

<h1 id="section-41">查询已安装包信息</h1>
<p># yum info pkg</p>

<h1 id="section-42">查看仓库包列表</h1>
<p># yum list pkg*</p>

<h1 id="section-43">查看已安装的包</h1>
<p># yum list installed
{% endcodeblock %}</p>

<h2 id="section-44">20. 修改配置文件</h2>

<p>可以使用多种文本编辑器，最常用的是<a href="http://www.gnu.org/software/emacs/">Emacs</a>和<a href="http://www.vim.org/">Vim</a>，使用方法直<code class="language-bash">emacs</code>或者<code class="language-bash">vim</code>和文件名即可。</p>

<p>{% codeblock lang:bash %}
# 修改Apache服务器配制文件
$ vim httpd.conf
$ emacs httpd.conf
{% endcodeblock %}</p>

<h2 id="section-45">21. 用户管理</h2>

<p>{% codeblock lang:bash %}
# 查看用户 
$ w 
$ who
# 超过500为后建用户
$ cat /etc/passwd</p>

<h1 id="section-46">新建用户</h1>
<p>$ useradd usrname</p>

<h1 id="section-47">新建用户设置密码</h1>
<p>$ passwd usrname newpasswd</p>

<h1 id="section-48">删除用户</h1>
<p>$ userdel -r usrname</p>

<h1 id="section-49">查看用户登陆</h1>
<p>$ last
$ last usrname</p>

<h1 id="section-50">查看当前任务</h1>
<p>$ top
{% endcodeblock %}</p>

<h2 id="debrpm">22. deb和rpm包互转</h2>

<ul>
  <li>第一种方法是使用<a href="http://joeyh.name/code/alien/">alien</a></li>
</ul>

<p>{% codeblock lang:bash %}
# deb转换为rpm
$ alien -r filename.deb</p>

<h1 id="rpmdeb">rpm转换成deb</h1>
<p>$ alien -d filename.rpm
{% endcodeblock %}</p>

<ul>
  <li>第二种方法是直接使用<code class="language-bash">apt</code>，非常方便，配置方法如下</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install apt
# apt-get update
# apt-get pkg
{% endcodeblock %}</p>

<h2 id="section-51">23. 查看和终止进程</h2>

<p>{% codeblock lang:bash %}
# 查看进程树
$ pstree -p</p>

<h1 id="section-52">看全部进程</h1>
<p>$ ps -A</p>

<h1 id="section-53">强制终止进程</h1>
<p>$ kill -9 7473</p>

<h1 id="section-54">释放内存</h1>
<p>$ free -m
{% endcodeblock %}</p>

<h2 id="section-55">24. 查看网络有监听的端口</h2>

<p>{% codeblock lang:bash %}
$ netstat -lntp
{% endcodeblock %}</p>

<h2 id="ssh">25. 断开SSH终端，程序后台执行</h2>

<p>使用<code class="language-bash">nohup</code>命令</p>

<p>{% codeblock lang:bash %}
$ nohup /filepath/testScript.py 
{% endcodeblock %}</p>

<h2 id="section-56">26. 查看某一个库文件的位置</h2>

<p>{% codeblock lang:bash %}
$ locate libGLU.so
{% endcodeblock %}</p>

<h2 id="rpm">27. rpm包</h2>

<p>{% codeblock lang:bash %}
# 安装rpm包 
# rpm -ivh pkg.rpm</p>

<h1 id="rpm-1">更新rpm包</h1>
<p># rpm -Uvh pkg.rpm</p>

<h1 id="section-57">查看已经安装的包</h1>
<p># rpm -qa | grep pkg.rpm</p>

<h1 id="rpm-2">卸载rpm包</h1>
<p># rpm -e pkg
{% endcodeblock %}</p>

<h2 id="centos-6--python-27">28. Centos 6 升级 python 2.7</h2>

<p>参考网址 <a href="https://github.com/0xdata/h2o/wiki/Installing-python-2.7-on-centos-6.3.-Follow-this-sequence-exactly-for-centos-machine-only">1</a>, <a href="http://toomuchdata.com/2012/06/25/how-to-install-python-2-7-3-on-centos-6-2/">2</a></p>

<h2 id="cpu">29. CPU信息</h2>

<p>{% codeblock lang:bash %}
# 查询CPU信息
$ lscpu</p>

<h1 id="cpu-1">物理CPU个数</h1>
<p>$ grep ‘physical id’ /proc/cpuinfo | sort -u | wc -l</p>

<h1 id="section-58">核心个数</h1>
<p>$ grep ‘core id’ /proc/cpuinfo | sort -u | wc -l</p>

<h1 id="section-59">线程个数</h1>
<p>$ grep ‘processor’ /proc/cpuinfo | sort -u | wc -l
$ nproc
{% endcodeblock %} </p>

<p>查看CPU温度</p>

<p>{% codeblock lang:bash %}
# 安装lm_sensors工具
# yum install lm_sensors
$ sensors
{% endcodeblock %}</p>

<h2 id="section-60">30. 查询文件和文件夹大小</h2>

<p>{% codeblock lang:bash %}
$ du -h myfile
$ du -h filepath
{% endcodeblock %}</p>

<h2 id="section-61">31. 查看内存情况</h2>

<p>{% codeblock lang:bash %}
# 查看内存使用情况
$ free</p>

<h1 id="section-62">物理内存</h1>
<p># dmidecode -t memory | grep Size
{% endcodeblock %}</p>

<h2 id="section-63">32. 查看文件头部和尾部</h2>

<p>{% codeblock lang:bash %}
# 头部
$ head -5 file</p>

<h1 id="section-64">尾部</h1>
<p>$ tail -7 file
{% endcodeblock %}</p>

<h2 id="section-65">33. 下载命令</h2>

<p>{% codeblock lang:bash %}
$ wget -c -t 0 -w 30 httplink
{% endcodeblock %}</p>

<ul>
  <li>
    <p><code class="language-bash">-c</code>：表示接着下载没下载的文件</p>
  </li>
  <li>
    <p><code class="language-bash">-t</code>：表示尝试连接次数</p>
  </li>
  <li>
    <p><code>0</code>：表示不停尝试</p>
  </li>
  <li>
    <p><code class="language-bash">-w</code>：表示每两次尝试的时间间隔</p>
  </li>
</ul>

<h2 id="section-66">34. 开机启动</h2>

<p>{% codeblock lang:bash %}
# 开机启动httpd
# chkconfig httpd on
# 关闭httpd
# chkconfig httpd off
# 开启启动列表
# chkconfig –list
{% endcodeblock %}</p>

<h2 id="section-67">35. 系统运行日志</h2>

<p>{% codeblock lang:bash %}
# cat /var/log/messages
{% endcodeblock %}</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="http://blog.csdn.net/dqswuyundong/article/details/5970004">大量文件操作</a></p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/amboyna/archive/2008/03/08/1096024.html">修改PATH</a></p>
  </li>
  <li>
    <p>挂载NTFS分区：<a href="http://www.ha97.com/2832.html">1</a>, <a href="http://blog.csdn.net/zouyongjin/article/details/6439232">2</a></p>
  </li>
  <li>
    <p>rpm下的apt：<a href="http://wiki.debian.org.hk/w/Install_APT_in_Fedora_Linux">1</a>, <a href="http://yinbiao.blog.51cto.com/2765456/511542">2</a></p>
  </li>
  <li>
    <p><a href="http://www.liukai.cn/in-linux-setup-rar-for-linux/">Linux使用rar</a></p>
  </li>
  <li>
    <p><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-nohup/">后台执行程序</a></p>
  </li>
  <li>
    <p><a href="http://www.dayuer.com/freebsd-tooltips/wget_help">wget使用</a></p>
  </li>
  <li>
    <p><a href="http://www.cyberciti.biz/tips/how-can-i-zipping-and-unzipping-files-under-linux.html">zip/unzip</a></p>
  </li>
</ul>

<h3 id="section-68">更新记录</h3>

<p>2015年5月8日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux常用软件集锦]]></title>
    <link href="http://yulongniu.github.io/blog/2010/07/08/linux-software/"/>
    <updated>2010-07-08T11:09:31+08:00</updated>
    <id>http://yulongniu.github.io/blog/2010/07/08/linux-software</id>
    <content type="html"><![CDATA[<p>本文收集了一些好用或者好玩的Linux软件，安装方法使用<a href="https://getfedora.org/">Fedora</a>系统示例。</p>

<h2 id="section">1. 添加常用源</h2>

<p>添加<a href="http://rpmfusion.org/Configuration">rpmfusion</a>的free和nonfree源。</p>

<h2 id="section-1">2. 互联网</h2>

<ul>
  <li>Skype</li>
</ul>

<blockquote>
  <p><a href="http://www.skype.com/">Skype</a>提供了常用Linux发行版的安装包，可以直接下载使用。</p>
</blockquote>

<!--more-->

<h2 id="section-2">3. 影音</h2>

<ul>
  <li>VLC</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install vlc
{% endcodeblock %}</p>

<ul>
  <li>Mplayer</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install mplayer-gui xine smplayer
{% endcodeblock %}</p>

<ul>
  <li>录音工具Audacity</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install audacity
{% endcodeblock %}</p>

<ul>
  <li>屏幕录制RecordMyDesktop</li>
</ul>

<p>Linux下有很多录制屏幕的软件，推荐RecordMyDesktop。可以自己选定屏幕区域和大小，也可以把界面缩小到屏幕的下方，变成一个小的按钮，以方便操作。录制的文件为ogv格式，推荐使用VLC打开。</p>

<p>{% codeblock lang:bash %}
# 安装方法
# yum install recordmydesktop</p>

<h1 id="section-3">使用方法</h1>
<p>$ qt-recordMyDesktop
{% endcodeblock %}</p>

<h2 id="section-4">4. 办公</h2>

<ul>
  <li>字典GoldenDict</li>
</ul>

<p>Linux下曾经风靡一时的字典StarDict，现在有了更加先进和方便的接班人<a href="http://goldendict.org/">GoldenDict</a> 。GoldenDict的主要特点有：</p>

<ol>
  <li>
    <p>字典库丰富;</p>
  </li>
  <li>
    <p>直接查询维基百科和其他网络字典;</p>
  </li>
  <li>
    <p>支持字典分类、发音（字典库包括发音）、光标取词等。</p>
  </li>
</ol>

<p><strong>安装方法：</strong></p>

<p>参考GoldenDict的<a href="https://github.com/goldendict/goldendict">GitHub安装介绍</a>，字典发音需要安装Mplayer，Fedora安装可能依赖的库如下：</p>

<p>{% codeblock lang:bash %}
# yum install bzip2-devel gcc-c++ git hunspell-devel \
libvorbis-devel libXtst-devel phonon-devel \
qt-devel qtwebkit ffmpeg ffmpeg-devel \
lzo lzo-devel eb eb-devel
{% endcodeblock %}</p>

<p><strong>添加离线字典</strong></p>

<ul>
  <li>安装dictd-server</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install dictd-server
{% endcodeblock %}</p>

<ul>
  <li>dsl文件处理</li>
</ul>

<p>GoldenDict只能识别dsl格式的字典文件，所以先进行处理。一般得到dsl文件内容如下：</p>

<p>{% raw %}
<code>
mydict.dsl
mydict.bmp
mydict.ann
mydict.images.rar
mydict.sounds.rar
</code>
{% endraw %}</p>

<blockquote>
  <p>压缩dsl文件：</p>
</blockquote>

<p>{% codeblock lang:bash %}
# dictzip mydict.dsl 
{% endcodeblock %}</p>

<blockquote>
  <p>解压images和sounds的所有文件到同一个文件夹，之后将其<a href="http://forum.ubuntu.org.cn/viewtopic.php?f=48&amp;t=316122&amp;start=0">全部压缩到一个文件夹中</a>：</p>
</blockquote>

<p>{% codeblock lang:bash %}
# find . -name “*” -print | zip -9 ../mydict.dsl.dz.files.zip -@
{% endcodeblock %}</p>

<blockquote>
  <p>最后，得到如下文件，使用GoldenDict载入即可，注意文件的命名都统一为<code>mydict</code>：</p>
</blockquote>

<p>{% raw %}
<code>
mydict.dsl.dz
mydict.dsl.dz.files.zip
mydict.ann
mydict.bmp
</code>
{% endraw %}</p>

<p>以下是两张在GoldenDict中查询维基百科和大英百科的效果图。</p>

<p><img src="http://yulongniu.github.io/images/linux_software_goldendict1.png" width="500" height="700" title="image" alt="images" /></p>

<p><img src="http://yulongniu.github.io/images/linux_software_goldendict2.png" width="500" height="700" title="image" alt="images" /></p>

<ul>
  <li>chm阅读器</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install kchmviewer
{% endcodeblock %}</p>

<ul>
  <li>文档注释工具Xournal</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install xournal
{% endcodeblock %}</p>

<ul>
  <li>ePub文件阅读器</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install fbreader
{% endcodeblock %}</p>

<ul>
  <li>djvu文件阅读器</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install djvulibre
{% endcodeblock %}</p>

<ul>
  <li>unrar解压工具</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install unrar
{% endcodeblock %}</p>

<ul>
  <li>截屏工具KSnapshot</li>
</ul>

<p>{% codeblock lang:bash %}
# yum install ksnapshot
{% endcodeblock %}</p>

<ul>
  <li>图片转换工具<a href="http://www.imagemagick.org/">ImageMagick</a></li>
</ul>

<p>{% codeblock lang:bash %}
# yum install ImageMagick</p>

<h1 id="section-5">设置转换图片质量，1质量最低，100质量最高</h1>
<p>$ convert -quality 100 input.pdf output.jpg</p>

<h1 id="px">设置像素，比如转换的是500px</h1>
<p>$ convert -density 500 input.pdf output.jpg
{% endcodeblock %}</p>

<ul>
  <li>TeX文本编辑器</li>
</ul>

<p><a href="http://texstudio.sourceforge.net/">TeXstudio</a>支持自动补全、代码高亮、错误提示、文档预览、图片表格公式生成、LaTeX/PDFLaTeX/XeLaTeX。甚至还有一个“放大镜”，放大观察生成文档字体和公式细节。TeXstudio仍然保持持续更新的态势，以下是安装方法和一个阅览图。</p>

<p>{% codeblock lang:bash %}
# yum install texstudio
{% endcodeblock %}</p>

<p><img src="http://yulongniu.github.io/images/linux_software_texstudio.jpg" width="500" height="700" title="image" alt="images" /></p>

<h2 id="windows">5. 模拟Windows程序</h2>

<ul>
  <li>Wine</li>
</ul>

<p>Wine可以尽可能模拟Window软件</p>

<p>{% codeblock lang:bash %}
# yum install wine
{% endcodeblock %}</p>

<p>同时可能需要Winetricks辅助</p>

<p>{% codeblock lang:bash %}
# wget http://www.kegel.com/wine/winetricks
# chmod +x winetricks
# mv winetricks /usr/local/bin
# winetricks mfc42 
{% endcodeblock %}</p>

<ul>
  <li>PlayOnLinux</li>
</ul>

<p>{% codeblock lang:bash %}
# wget http://rpm.playonlinux.com/playonlinux.repo
# mv playonlinux.repo /etc/yum.repos.d/
# yum update
# yum install playonlinux
{% endcodeblock %}</p>

<h2 id="section-6">6. 驱动程序</h2>

<ul>
  <li>Fedora安装NVIDIA显卡驱动</li>
</ul>

<p>安装过程参考<a href="http://blog.csdn.net/icemango1209/article/details/18766353">Fedora 20安装Nvidia 显卡驱动</a>。需要注意关闭窗口界面，从而进入完全字符界面操作。</p>

<p>{% codeblock lang:bash %}
# 进入字符界面
# init 3</p>

<h1 id="section-7">进入图形界面</h1>
<p># init 5
{% endcodeblock %}</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="http://xmodulo.com/convert-pdf-files-to-jpg-format-on-linux.html">pdf转换jpg/jpeg文件</a></li>
</ul>

<h3 id="section-8">更新记录</h3>

<p>2015年4月6日</p>

]]></content>
  </entry>
  
</feed>
