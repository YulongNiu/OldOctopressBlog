<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lisp | 牛牛龙]]></title>
  <link href="http://yulongniu.bionutshell.org/blog/categories/lisp/atom.xml" rel="self"/>
  <link href="http://yulongniu.bionutshell.org/"/>
  <updated>2015-12-19T18:49:03+08:00</updated>
  <id>http://yulongniu.bionutshell.org/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spacemacs使用记录]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2015/09/30/spacemacs-tutorial/"/>
    <updated>2015-09-30T16:31:09+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2015/09/30/spacemacs-tutorial</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/syl20bnr/spacemacs">Spacemacs</a>结合了Vim和Emacs，而且定制了各种好用的设置，极大地减轻了Emacs的配置负担。推荐使用<code>hybrid</code>模式，这样浏览代码时可以使用Vim快捷键，进入Insert mode后使用Emacs快捷键。<code>hybrid</code>模式还有一个好处，编辑时方便汉字输入。Vim模式的先导键是<code>SPC</code>，在Emacs模式下是<code>M-m</code>。</p>

<!--more-->

<h2 id="vim">1. Vim快捷键记录</h2>

<p>在Spacemacs中<code>SPC-h-T</code>进入Emacs Evil快速入门。</p>

<h3 id="section">1.1 移动</h3>

<ul>
  <li>
    <p><code>h</code>：前</p>
  </li>
  <li>
    <p><code>j</code>：上</p>
  </li>
  <li>
    <p><code>k</code>：下</p>
  </li>
  <li>
    <p><code>l</code>：后</p>
  </li>
  <li>
    <p><code>gg</code>：</p>

    <ul>
      <li>
        <p>文档开始位置。</p>
      </li>
      <li>
        <p><code>G</code>：文档结束位置。</p>
      </li>
      <li>
        <p><code>:[number]</code>：跳转到制定行。</p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="section-1">1.2 插入和替换</h3>

<ul>
  <li>
    <p><code>i</code>：</p>

    <ul>
      <li>
        <p>在<strong>光标前</strong>的位置，进入insert mode，进行编辑。</p>
      </li>
      <li>
        <p><code>ESC</code>或者<code>C-[</code>退出insert mode。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>r</code>：替换<strong>光标所在位置</strong>的单个字符。</p>
  </li>
  <li>
    <p><code>[number] d object</code>：</p>

    <ul>
      <li>
        <p><code>cw</code>或<code>ce</code>：从光标处删除整个单词，并进入insert mode。</p>
      </li>
      <li>
        <p><code>c$</code>：从光标处删除整行，并进入insert mode。</p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="section-2">1.3 搜索和替换</h3>

<ul>
  <li>
    <p><code>\</code>：</p>

    <ul>
      <li>
        <p><code>\searchWord</code>：输入搜索内容，<code>n</code>向下搜索，<code>N</code>向上搜索。</p>
      </li>
      <li>
        <p><code>%</code>：在各种括号跳转。</p>
      </li>
      <li>
        <p><code>:s/old/new</code>：替换第一个匹配；<code>:s/old/new/g</code>：替换当前行匹配；<code>:#,#s/old/new/g</code>：替换行（<code>#</code>为行号）之间匹配；<code>:%s/old/new/g </code>：替换全文匹配。</p>
      </li>
      <li>
        <p><code>:%s/old/new/gc</code>：替换全文匹配，每一个匹配会提示是否匹配（输入<code>y</code>表示执行替换，<code>n</code>表示跳过匹配）。</p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="section-3">1.4 删除、剪切和粘贴</h3>

<ul>
  <li>
    <p><code>x</code>：删除<strong>光标所在位置</strong>的单个字符。</p>
  </li>
  <li>
    <p><code>[number] d object</code>：</p>

    <ul>
      <li>
        <p><code>dw</code>：从光标处删除整个单词，包括单词后的空格。</p>
      </li>
      <li>
        <p><code>de</code>：从光标处删除整个单词，不包括空格。</p>
      </li>
      <li>
        <p><code>d$</code>：从光标处删除整行。</p>
      </li>
      <li>
        <p><code>dd</code>：删除光标所在的整行。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code>p</code>：在<strong>光标后</strong>的位置粘贴剪切（<code>d</code>类和<code>x</code>操作）的内容。</p>
  </li>
</ul>

<h3 id="section-4">1.5 撤销</h3>

<ul>
  <li>
    <p><code>u</code>：撤销</p>
  </li>
  <li>
    <p><code>Ctr-R</code>：反撤销</p>
  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs配置C语言编程环境]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2014/12/02/emacs-config-c/"/>
    <updated>2014-12-02T06:36:41+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2014/12/02/emacs-config-c</id>
    <content type="html"><![CDATA[<p>有很多优秀的C语言IDE用来实现高效的编程，比如<a href="https://www.jetbrains.com/clion/">CLion</a>。目前，CLion还在处于公开测试阶段，可以下载试用。本文介绍在Emacs下配置C/C++编程环境。</p>

<!--more-->

<h2 id="section">1. 安装和基本配置</h2>

<h3 id="section-1">1.1. 安装需求</h3>

<ul>
  <li>安装<a href="http://www.gnu.org/software/global/">GNU Global</a></li>
</ul>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># dnf install global llvm llvm-devel clang* </span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li>安装Emacs的<code>helm</code>、<code>helm-swoop</code>、<code>helm-gtags</code>、<code>sr-speedbar</code>、<code>smartparens</code>、<code>google-c-style</code>、<code>auto-complete</code>、<code>auto-complete-c-headers</code>、<code>auto-complete-clang</code>包。</li>
</ul>

<h3 id="emacs">1.2. Emacs配置</h3>

<p>将<a href="#c-mode-config">附加环境设置</a>添加到Emacs设置文件，比如<code class="language-bash">~/.emacs</code>，此环境配置参考<a href="https://github.com/tuhdo/emacs-c-ide-demo/blob/master/custom/setup-helm.el">tuhdo</a>。</p>

<h2 id="section-2">2. 文件操作</h2>

<h3 id="section-3">2.1. 查找</h3>

<ul>
  <li>当前buffer查找函数、类的定义</li>
</ul>

<blockquote>
  <p><code>C-c h i</code>（helm-semantic-or-imenu）：可以输入部分关键词、空格等，以快速搜索。</p>
</blockquote>

<ul>
  <li>当前project查找定义</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p><code>M-.</code>（helm-gtags-dwim）：输入查找内容。<code>M-,</code>（tags-loop-continue）：返回上一个buffer。</p>
    </li>
    <li>
      <p><code>C-j</code>（helm-gtags-select）：列出当前project所有定义，并且查找。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li>查找引用</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p><code>C-c g r</code>（helm-gtags-find-rtags）：光标停留在函数内部，查找该函数名；如果光标停留在函数名，查找该函数的所有引用。</p>
    </li>
    <li>
      <p><code>C-c g s</code>（helm-gtags-find-symbol）：光标停留在变量时的查找。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li>查找当前函数引用的函数</li>
</ul>

<blockquote>
  <p><code>C-c g a</code>（helm-gtags-tags-in-this-function）</p>
</blockquote>

<ul>
  <li>查找文件</li>
</ul>

<blockquote>
  <p><code>C-c g P</code>（elm-gtags-find-files）</p>
</blockquote>

<h3 id="section-4">2.2. 列出源码树</h3>

<ul>
  <li>开启和关闭</li>
</ul>

<blockquote>
  <p><code>M-x sr-speedbar-open RET</code>：开启。<code>M-x sr-speedbar-close RET</code>：关闭。</p>
</blockquote>

<ul>
  <li>操作</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p><code>b</code>和<code>f</code>切换到当前buffer和所有文件列表。</p>
    </li>
    <li>
      <p><code>=</code>：展开。<code>g</code>：收回。</p>
    </li>
    <li>
      <p><code>U</code>：上一级目录。</p>
    </li>
  </ol>
</blockquote>

<h3 id="section-5">2.3 代码补全</h3>

<p>代码补全使用<code>auto-complete</code>、<code>auto-complete-c-headers</code>、<code>semantic</code>包。在使用<code>auto-complete-c-headers</code>自动补全头文件名称时，使用以下命令获得头文件路径：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gcc -xc -E -v -
</span><span class='line'><span class="nv">$ </span>gcc -xc++ -E -v -
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="http://yulongniu.bionutshell.org/images/emacs_config_c_autocomplete.png" width="900" height="900" title="image" alt="images" /></p>

<h2 id="debug">3. 编译和debug</h2>

<h3 id="gcc">3.1 使用gcc编译</h3>

<p>使用<code>M-x compile</code>对源文件进行编译链接；或者开启ansi-term模式<code>M-x ansi-term</code>，进入shell操作。一个直接编译–汇编–链接的简单例子：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gcc helloworld.c -o helloworld
</span><span class='line'><span class="nv">$ </span>./helloworld
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="section-6">附加内容</h2>

<p><a id="c-mode-config">C/C++的Emacs编程环境设置</a></p>

<p><figure class='code'><figcaption><span>Emacs configure </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
</pre></td><td class='code'><pre><code class='emacs-lisp'><span class='line'><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;set up helm</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">helm-config</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">helm-grep</span><span class="p">)</span>
</span><span class='line'><span class="c1">;; The default “C-x c” is quite close to “C-x C-c”, which quits Emacs.</span>
</span><span class='line'><span class="c1">;; Changed to “C-c h”. Note: We must set “C-c h” globally, because we</span>
</span><span class='line'><span class="c1">;; cannot change &lt;code&gt;helm-command-prefix-key&#39; once &lt;/code&gt;helm-config’ is loaded.</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">h</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-command-prefix</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-unset-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-x</span> <span class="nv">c</span><span class="err">”</span><span class="p">))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">&lt;tab&gt;</span><span class="s">&quot;) &#39;helm-execute-persistent-action) ; rebihnd tab to do persistent action</span>
</span><span class='line'><span class="s">(define-key helm-map (kbd &quot;</span><span class="nv">C-i</span><span class="s">&quot;) &#39;helm-execute-persistent-action) ; make TAB works in terminal</span>
</span><span class='line'><span class="s">(define-key helm-map (kbd &quot;</span><span class="nv">C-z</span><span class="s">&quot;)  &#39;helm-select-action) ; list actions using C-z&lt;/tab&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;(define-key helm-grep-mode-map (kbd “&lt;return&gt;&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-grep-mode-jump-other-window</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-grep-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;n&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-grep-mode-jump-other-window-forward</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-grep-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;p&quot;</span><span class="p">)</span>  <span class="ss">&#39;helm-grep-mode-jump-other-window-backward</span><span class="p">)</span><span class="nv">&lt;/return&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">executable-find</span> <span class="err">“</span><span class="nv">curl</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">helm-google-suggest-use-curl-p</span> <span class="no">t</span><span class="p">))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="k">setq</span>
</span><span class='line'> <span class="nv">helm-scroll-amount</span> <span class="mi">4</span> <span class="c1">; scroll 4 lines other window using M-&lt;next&gt;/M-&lt;prior&gt;</span>
</span><span class='line'> <span class="nv">helm-quick-update</span> <span class="no">t</span> <span class="c1">; do not display invisible candidates</span>
</span><span class='line'> <span class="nv">helm-ff-search-library-in-sexp</span> <span class="no">t</span> <span class="c1">; search for library in `require&#39; and `declare-function&#39; sexp.</span>
</span><span class='line'> <span class="nv">helm-split-window-in-side-p</span> <span class="no">t</span> <span class="c1">;; open helm buffer inside current window, not occupy whole other window</span>
</span><span class='line'> <span class="nv">helm-candidate-number-limit</span> <span class="mi">500</span> <span class="c1">; limit the number of displayed canidates</span>
</span><span class='line'> <span class="nv">helm-ff-file-name-history-use-recentf</span> <span class="no">t</span>
</span><span class='line'> <span class="nv">helm-move-to-line-cycle-in-source</span> <span class="no">t</span> <span class="c1">; move to end or beginning of source when reaching top or bottom of source.</span>
</span><span class='line'> <span class="nv">helm-buffers-fuzzy-matching</span> <span class="no">t</span>          <span class="c1">; fuzzy matching buffer names when non-nil</span>
</span><span class='line'>                                        <span class="c1">; useful in helm-mini that lists buffers&lt;/prior&gt;&lt;/next&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">helm-sources-using-default-as-input</span> <span class="err">‘</span><span class="nv">helm-source-man-pages</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-x</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-M-x</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-y</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-show-kill-ring</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-x</span> <span class="nv">b</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-mini</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-x</span> <span class="nv">C-f</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-find-files</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-h</span> <span class="nv">SPC</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-all-mark-rings</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">h</span> <span class="nv">o</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-occur</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">h</span> <span class="nv">C-c</span> <span class="nv">w</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-wikipedia-suggest</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">h</span> <span class="nv">x</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-register</span><span class="p">)</span>
</span><span class='line'><span class="c1">;; (global-set-key (kbd “C-x r j”) ‘jump-to-register)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">define-key</span> <span class="err">‘</span><span class="nv">help-command</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-f</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-apropos</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="err">‘</span><span class="nv">help-command</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">r</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-info-emacs</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="err">‘</span><span class="nv">help-command</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-l</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-locate-library</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; use helm to list eshell history</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">eshell-mode-hook</span>
</span><span class='line'>          <span class="err">#’</span><span class="p">(</span><span class="k">lambda</span> <span class="p">()</span>
</span><span class='line'>              <span class="p">(</span><span class="nv">define-key</span> <span class="nv">eshell-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-l</span><span class="err">”</span><span class="p">)</span>  <span class="err">‘</span><span class="nv">helm-eshell-history</span><span class="p">)))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;; Save current position to mark ring</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">helm-goto-line-before-hook</span> <span class="err">‘</span><span class="nv">helm-save-current-pos-to-mark-ring</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; show minibuffer history with Helm</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">minibuffer-local-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-p</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-minibuffer-history</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">minibuffer-local-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-n</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-minibuffer-history</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">find-tag]</span> <span class="err">‘</span><span class="nv">helm-etags-select</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">list-buffers]</span> <span class="err">‘</span><span class="nv">helm-buffers-list</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;; PACKAGE: helm-swoop                ;;</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;; Locate the helm-swoop folder to your path</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">helm-swoop</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; Change the keybinds to whatever you like :)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">h</span> <span class="nv">o</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-swoop</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">s</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-multi-swoop-all</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; When doing isearch, hand the word over to helm-swoop</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">isearch-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-i</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-swoop-from-isearch</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; From helm-swoop to helm-multi-swoop-all</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-swoop-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-i</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-multi-swoop-all-from-helm-swoop</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; Save buffer when helm-multi-swoop-edit complete</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-multi-swoop-edit-save</span> <span class="no">t</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; If this value is t, split window inside the current window</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-swoop-split-with-multiple-windows</span> <span class="no">t</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; Split direcion. ‘split-window-vertically or ‘split-window-horizontally</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-swoop-split-direction</span> <span class="err">‘</span><span class="nv">split-window-vertically</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;; If nil, you can slightly boost invoke speed in exchange for text color</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">helm-swoop-speed-or-color</span> <span class="no">t</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">helm-mode</span> <span class="mi">1</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nb">provide</span> <span class="err">‘</span><span class="nv">setup-helm</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">setup-helm</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span>
</span><span class='line'> <span class="nv">helm-gtags-ignore-case</span> <span class="no">t</span>
</span><span class='line'> <span class="nv">helm-gtags-auto-update</span> <span class="no">t</span>
</span><span class='line'> <span class="nv">helm-gtags-use-input-at-cursor</span> <span class="no">t</span>
</span><span class='line'> <span class="nv">helm-gtags-pulse-at-cursor</span> <span class="no">t</span>
</span><span class='line'> <span class="nv">helm-gtags-prefix-key</span> <span class="err">“</span><span class="nv">\C-cg</span><span class="err">”</span>
</span><span class='line'> <span class="nv">helm-gtags-suggested-key-mapping</span> <span class="no">t</span>
</span><span class='line'> <span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">helm-gtags</span><span class="p">)</span>
</span><span class='line'><span class="c1">;; Enable helm-gtags-mode</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">dired-mode-hook</span> <span class="err">‘</span><span class="nv">helm-gtags-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">eshell-mode-hook</span> <span class="err">‘</span><span class="nv">helm-gtags-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c-mode-hook</span> <span class="err">‘</span><span class="nv">helm-gtags-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c++-mode-hook</span> <span class="err">‘</span><span class="nv">helm-gtags-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">asm-mode-hook</span> <span class="err">‘</span><span class="nv">helm-gtags-mode</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">g</span> <span class="nv">a</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-gtags-tags-in-this-function</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-j</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-gtags-select</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-.</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-gtags-dwim</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">M-,</span><span class="err">”</span><span class="p">)</span> <span class="err">‘</span><span class="nv">helm-gtags-pop-stack</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">&amp;lt</span><span class="c1">;”) ‘helm-gtags-previous-history)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">helm-gtags-mode-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="err">“</span><span class="nv">C-c</span> <span class="nv">&amp;gt</span><span class="c1">;”) ‘helm-gtags-next-history)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;enable semantic mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">cc-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">semantic</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">global-semanticdb-minor-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-semantic-idle-scheduler-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-semantic-idle-summary-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">global-semantic-stickyfunc-mode</span> <span class="mi">1</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">semantic-mode</span> <span class="mi">1</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;open hs-mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c-mode-common-hook</span>   <span class="err">‘</span><span class="nv">hs-minor-mode</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;google-c-style</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c-mode-common-hook</span> <span class="err">‘</span><span class="nv">google-set-c-style</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c-mode-common-hook</span> <span class="err">‘</span><span class="nv">google-make-newline-indent</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;smartparens</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">smartparens-config</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">show-smartparens-global-mode</span> <span class="no">t</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">smartparens-global-mode</span> <span class="no">t</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">; auto-complete</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">auto-complete</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">auto-complete-config</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">ac-config-default</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;; auto-complete-c-headers </span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">my:ac-c-header-init</span><span class="p">()</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">auto-complete-c-headers</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">ac-sources</span> <span class="err">‘</span><span class="nv">ac-source-c-headers</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">achead:include-directories</span> <span class="err">‘“</span><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">achead:include-directories</span> <span class="err">‘“</span><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/x86_64-redhat-linux</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">achead:include-directories</span> <span class="err">‘“</span><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/backward</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">achead:include-directories</span> <span class="err">‘“</span><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/include</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">achead:include-directories</span> <span class="err">‘“</span><span class="nv">/usr/local/include</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">achead:include-directories</span> <span class="err">‘“</span><span class="nv">/usr/include</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c++-mode-hook</span> <span class="err">‘</span><span class="nv">my:ac-c-header-init</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c-mode-hook</span> <span class="err">‘</span><span class="nv">my:ac-c-header-init</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;; auto-complete-clang </span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">auto-complete-clang</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">ac-auto-start</span> <span class="no">t</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">ac-quick-help-delay</span> <span class="mf">0.5</span><span class="p">)</span>
</span><span class='line'><span class="c1">;; (ac-set-trigger-key “TAB”)</span>
</span><span class='line'><span class="c1">;; (define-key ac-mode-map  [(control tab)] ‘auto-complete)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">ac-mode-map</span>  <span class="nv">[</span><span class="p">(</span><span class="nv">control</span> <span class="nv">tab</span><span class="p">)</span><span class="nv">]</span> <span class="err">‘</span><span class="nv">auto-complete</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">my-ac-config</span> <span class="p">()</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">ac-clang-flags</span>
</span><span class='line'>	<span class="p">(</span><span class="nb">mapcar</span><span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">item</span><span class="p">)(</span><span class="nv">concat</span> <span class="err">“</span><span class="nv">-I</span><span class="err">”</span> <span class="nv">item</span><span class="p">))</span>
</span><span class='line'>	       <span class="p">(</span><span class="nv">split-string</span>
</span><span class='line'>		<span class="err">“</span>
</span><span class='line'><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2</span>
</span><span class='line'><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/x86_64-redhat-linux</span>
</span><span class='line'><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/../../../../include/c++/4.9.2/backward</span>
</span><span class='line'><span class="nv">/usr/lib/gcc/x86_64-redhat-linux/4.9.2/include</span>
</span><span class='line'><span class="nv">/usr/local/include</span>
</span><span class='line'><span class="nv">/usr/include</span><span class="err">”</span>
</span><span class='line'>		<span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">setq-default</span> <span class="nv">ac-sources</span> <span class="err">‘</span><span class="p">(</span><span class="nv">ac-source-abbrev</span> <span class="nv">ac-source-dictionary</span> <span class="nv">ac-source-words-in-same-mode-buffers</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">emacs-lisp-mode-hook</span> <span class="err">‘</span><span class="nv">ac-emacs-lisp-mode-setup</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">;; (add-hook ‘c-mode-common-hook ‘ac-cc-mode-setup)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">ruby-mode-hook</span> <span class="err">‘</span><span class="nv">ac-ruby-mode-setup</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">css-mode-hook</span> <span class="err">‘</span><span class="nv">ac-css-mode-setup</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">auto-complete-mode-hook</span> <span class="err">‘</span><span class="nv">ac-common-setup</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">global-auto-complete-mode</span> <span class="no">t</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">my-ac-cc-mode-setup</span> <span class="p">()</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">ac-sources</span> <span class="p">(</span><span class="nb">append</span> <span class="err">‘</span><span class="p">(</span><span class="nv">ac-source-clang</span> <span class="nv">ac-source-yasnippet</span><span class="p">)</span> <span class="nv">ac-sources</span><span class="p">)))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">c-mode-common-hook</span> <span class="err">‘</span><span class="nv">my-ac-cc-mode-setup</span><span class="p">)</span>
</span><span class='line'><span class="c1">;; ac-source-gtags</span>
</span><span class='line'><span class="p">(</span><span class="nv">my-ac-config</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="section-7">参考资料</h3>

<ul>
  <li>
    <p><a href="http://tuhdo.github.io/c-ide.html#sec-1-3">C/C++ Development Environment for Emacs</a></p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=HTUE03LnaXA">YouTube Vedio</a></p>
  </li>
</ul>

<h3 id="section-8">更新记录</h3>

<p>2014年12月7日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs配置HTML/JS/CSS编辑环境]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2012/07/30/emacs-html-css-js/"/>
    <updated>2012-07-30T22:31:13+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2012/07/30/emacs-html-css-js</id>
    <content type="html"><![CDATA[<p>以下所有Emacs mode都使用<a href="http://yulongniu.bionutshell.org/blog/2012/06/25/emacs-extend-skills/">Emacs包安装系统</a>。</p>

<h2 id="web-mode">1. web-mode</h2>

<p><a href="http://web-mode.org/">web-mode</a> 提供了很好的wen配件（HTML、JavaScript、CSS、PHP等）的代码缩进、折叠和高亮等出色的功能。</p>

<p>有用技巧：</p>

<ul>
  <li>
    <p><code class="language-emacs-lisp">C-c C-n</code>：放在HTML标签上，在标签间跳转。</p>
  </li>
  <li>
    <p><code class="language-emacs-lisp">C-c C-f</code>：放在HTML标签上，在标签折叠。
<!--more--></p>
  </li>
</ul>

<h2 id="emmet-mode">2. emmet-mode</h2>

<p><a href="https://github.com/smihica/emmet-mode">emmet-mode</a>是<a href="http://emmet.io/">emmet</a>的Emacs扩展，取代了陈旧的<a href="http://www.emacswiki.org/emacs/ZenCoding">ZenCoding</a>。只需要输入制定的缩写，这个工具可以自动补全HTML标签。非常方便。</p>

<p>有用技巧：</p>

<ul>
  <li>
    <p><code class="language-emacs-lisp">M-x emmet-mode</code>：打开emmet-mode。</p>
  </li>
  <li>
    <p><code class="language-emacs-lisp">C-j</code>：自动补全。</p>
  </li>
</ul>

<p>补全缩写规律：</p>

<ul>
  <li>
    <p><code class="language-emacs-lisp">a</code>：a+href</p>
  </li>
  <li>
    <p><code class="language-emacs-lisp">#q</code>：div+id(q)</p>
  </li>
  <li>
    <p><code class="language-emacs-lisp">.x</code>：div+class(x)</p>
  </li>
  <li>
    <p><code class="language-emacs-lisp">#q.x</code>：div+id(q)+class(x)</p>
  </li>
</ul>

<h2 id="section">附加内容</h2>

<p>Emacs编程环境设置</p>

<p><figure class='code'><figcaption><span>Emacs web config </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='emacs-lisp'><span class='line'><span class="c1">;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;emmet-mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">emmet-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">sgml-mode-hook</span> <span class="err">‘</span><span class="nv">emmet-mode</span><span class="p">)</span> <span class="c1">;; Auto-start on any markup modes</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">html-mode-hook</span> <span class="err">‘</span><span class="nv">emmet-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">web-mode-hook</span> <span class="err">‘</span><span class="nv">emmet-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">css-mode-hook</span>  <span class="err">‘</span><span class="nv">emmet-mode</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;web-mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">web-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.phtml\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.tpl\.php\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.[agj]sp\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.as[cp]x\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.erb\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.mustache\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.djhtml\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">auto-mode-alist</span> <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">\.html?\’</span><span class="err">”</span> <span class="o">.</span> <span class="nv">web-mode</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">my-web-mode-hook</span> <span class="p">()</span>
</span><span class='line'>  <span class="err">“</span><span class="nv">Hooks</span> <span class="nv">for</span> <span class="nv">Web</span> <span class="nv">mode.</span><span class="err">”</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">web-mode-markup-indent-offset</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">web-mode-hook</span>  <span class="err">‘</span><span class="nv">my-web-mode-hook</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="section-1">参考资料</h3>

<ul>
  <li><a href="http://web-mode.org/">web-mode说明文档</a></li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2015年8月30日</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs高级使用技巧]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2012/06/25/emacs-extend-skills/"/>
    <updated>2012-06-25T08:01:36+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2012/06/25/emacs-extend-skills</id>
    <content type="html"><![CDATA[<h2 id="emacs">1. Emacs配置文件位置</h2>

<p>在Fedora系统下，Emacs的配置文件位置是<code class="language-bash">~/.emacs</code>。在Emacs配置文件中添加内容后，使用<code class="language-emacs-lisp">M-x eval-buffer</code>，使当前配置生效。编译代码以加快加载速度，<code class="language-eamcs-lisp">M-x byte-compile-file</code>。</p>

<p>使用Eamcs解释器<code class="language-emacs-lisp">M-x ielm</code>。</p>

<h2 id="emacs-1">2. Emacs自带的包管理系统</h2>

<p>在Emacs24之后，自带包管理系统，使用<code class="language-bash">M-x eval-buffer</code>进入。可以添加<a href="http://melpa.org/">MELPA源</a>、<a href="https://marmalade-repo.org/">marmalade源</a>、<a href="http://elpa.gnu.org/packages/">GNU源</a>。</p>

<p><figure class='code'><figcaption><span>Add repositories of Emacs packages</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='emacs-lisp'><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nc">package</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">package-archives</span>
</span><span class='line'>	     <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">melpa</span><span class="err">”</span> <span class="o">.</span> <span class="err">“</span><span class="nv">http://melpa.milkbox.net/packages/</span><span class="err">”</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-to-list</span> <span class="err">‘</span><span class="nv">package-archives</span>
</span><span class='line'>	     <span class="err">‘</span><span class="p">(</span><span class="err">“</span><span class="nv">gnu</span><span class="err">”</span> <span class="o">.</span> <span class="err">“</span><span class="nv">http://elpa.gnu.org/packages/</span><span class="err">”</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">package-initialize</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<!--more-->

<p>这样设置之后，就不需要类似<code class="language-emacs-lisp">(add-to-list 'load-path "~/.emacs.d/elpa/popup-20140207.1702/")</code>的语句了，因为Emacs会自动识别安装的包。但是，如果需要对某个包进行进一步设置，需要加上<code class="language-bash">(require 'popup)</code>之类的语句。</p>

<h2 id="section">3. 显示行号</h2>

<p>使用<code class="language-eamcs-lisp">M-x linum-mode</code>添加行号。如果需要永久显示，在Emacs配置文件中添加一下内容。</p>

<p><figure class='code'><figcaption><span>Show line number</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='emacs-lisp'><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;open linum mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">linum-format</span> <span class="err">“</span><span class="nv">%4d</span> <span class="nv">\u2502</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">prog-mode-hook</span> <span class="err">‘</span><span class="nv">linum-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">ess-mode-hook</span> <span class="err">‘</span><span class="nv">linum-mode</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="shell">4. 进入Shell</h2>

<p>三种方法：</p>

<ul>
  <li>
    <p><code class="language-eamcs-lisp">M-x shell</code></p>
  </li>
  <li>
    <p><code class="language-eamcs-lisp">M-x ansi-term</code></p>
  </li>
  <li>
    <p><code class="language-eamcs-lisp">M-x eshell</code></p>
  </li>
</ul>

<h2 id="root">5. root权限</h2>

<p><code class="language-eamcs-lisp">C-x C-f</code> 之后输入root密码<code class="language-eamcs-lisp">/su:root@usrname password</code></p>

<h2 id="section-1">6. 移动整体代码块</h2>

<p>选中代码块后：
向左移动2个字符：<code class="language-eamcs-lisp">C-u -2 C-x TAB</code>
向右移动4个字符：<code class="language-eamcs-lisp">C-u 4 C-x TAB</code></p>

<h2 id="section-2">7. 添加彩虹猫</h2>

<p>添加<code>nyan-mode</code>包，之后在Emacs配置文档中写入：</p>

<p><figure class='code'><figcaption><span>Add nyan in modeline</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='emacs-lisp'><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;nyan-mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nv">nyan-mode</span> <span class="no">t</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="yasnippet">8. 自定义YASnippet模板</h2>

<p>使用<code class="language-emacs-lisp">M-x yas-new-snippet</code>，打开一个模板。比如，添加Octopress的语言高亮模板</p>

<p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># -&lt;em&gt;- mode: snippet; require-final-newline: nil -&lt;/em&gt;-
</span><span class='line'># name: Highlight Language
</span><span class='line'># key: hl
</span><span class='line'># binding: direct-keybinding
</span><span class='line'># contributor: Yulong Niu &lt;a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#121;&#117;&#108;&#111;&#110;&#103;&#046;&#110;&#105;&#117;&#064;&#097;&#111;&#108;&#046;&#099;&#111;&#109;"&gt;&#121;&#117;&#108;&#111;&#110;&#103;&#046;&#110;&#105;&#117;&#064;&#097;&#111;&#108;&#046;&#099;&#111;&#109;&lt;/a&gt;
</span><span class='line'># –&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;{% codeblock lang:${1:bash} %}
</span><span class='line'>$0
</span><span class='line'>{% endcodeblock %}</span></code></pre></td></tr></table></div></figure>
</p>

<p>其中 <code class="languag-emacs-lisp">${1:bash}</code>表示光标跳转位置，编号从1开始。<code class="language-emacs-lisp">$0</code>表示光标最后停留位置。如果不需要插入空行，在模板中把多余空行去掉。</p>

<p>自定义的模板建议存放与 <code class="language-bash">~/.emacs.d/snippets/</code>的对应mode文件夹下。比如在markdown模式下使用的模板，存放与 <code class="language-bash">~/.emacs.d/snippets/markdown-mode/</code>。</p>

<h3 id="section-3">参考资料</h3>

<ul>
  <li>
    <p><a href="http://capitaomorte.github.io/yasnippet/">YASnippet Tutorial</a></p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ibgo/p/3900317.html">自定义 Yasnippet 模板</a></p>
  </li>
  <li>
    <p><a href="https://github.com/mad4alcohol/mad4a-blog/blob/master/_posts/2012-08-02-emacs-summary-cont.md">YASnippet添加模板</a></p>
  </li>
  <li>
    <p><a href="Copy/Paste in emacs ansi-term shell">Copy/Paste in emacs ansi-term shell</a></p>
  </li>
</ul>

<h3 id="section-4">更新记录</h3>

<p>2015年5月9日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs和ESS的使用技巧]]></title>
    <link href="http://yulongniu.bionutshell.org/blog/2011/08/13/emacs-ess-tips/"/>
    <updated>2011-08-13T05:20:57+08:00</updated>
    <id>http://yulongniu.bionutshell.org/blog/2011/08/13/emacs-ess-tips</id>
    <content type="html"><![CDATA[<h2 id="ess">1. 安装ESS</h2>

<p>有两种方法可以安装，一种是直接使用系统自带的包安装系统，比如<code>yum</code>：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install emacs-ess</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>但是，有时可能不是ESS最新版本。所以，推荐第二种方法，使用Emacs自带的包系统，方便、更新及时，设置方法<a href="http://yulongniu.bionutshell.org/blog/2012/06/24/emacs-extend-skills/">参考</a>，安装<code>ess</code>包。</p>

<h2 id="ess-1">2. 使用ESS</h2>

<p>进入GNU Emacs界面之后，输入<code>M-X R</code> 即可进入R界面。在这个过程中，会询问是否在当前运行目录下运行R，可以选择在不同目录下运行。</p>

<ul>
  <li><code>M-x R</code>：</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p>启动R。R运行的buffer因为是在Emacs编辑器下运行，所以称为inferior（Emacs文档中称之为iESS buffer）。</p>
    </li>
    <li>
      <p><code>C-u M-x R RET --no-save RET</code>：启动R并且不保存。</p>
    </li>
    <li>
      <p><code>M-x ess-transcript-clean-region</code>：清理R界面。</p>
    </li>
    <li>
      <p><code>C-c C-z</code>：强制停止运行的R进程。</p>
    </li>
  </ol>
</blockquote>

<!--more-->

<ul>
  <li><code>C-c C-x</code>：</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p>代替<code class="language-r">ls()</code>函数。</p>
    </li>
    <li>
      <p><code>C-c C-s</code>：代替<code class="language-r">search()</code>函数。</p>
    </li>
    <li>
      <p><code>C-c C-d</code>：修改已经建立的对象，非常实用。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li><code>C-c C-n</code>：</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p>把当前行送到R。</p>
    </li>
    <li>
      <p><code>C-c C-c</code>：把当前段送到R。</p>
    </li>
    <li>
      <p><code>C-c C-b</code>：把当前整个文件送到R。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li>
    <p><code>C-c tab</code>：自动补全R代码。</p>
  </li>
  <li>
    <p><code>C-x o</code>：滚动屏幕。</p>
  </li>
  <li>
    <p><code>C--</code>：</p>
  </li>
</ul>

<blockquote>
  <ol>
    <li>
      <p>自动给出R语言中特有的 <code>&lt;-</code>。</p>
    </li>
    <li>
      <p><code>C---</code>：连按两下–，则可以显示下划线。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li><code>C-c C-o</code>：</li>
</ul>

<blockquote>
  <ol>
    <li>
      <p>在函数头按下会激活ESS对R代码的注释功能。</p>
    </li>
    <li>
      <p><code>M-x customize-group RET ess RET</code>：配置默认模板，如果需要插入空行，回车没用，猛戳空格。</p>
    </li>
    <li>
      <p><code>C-c C-e C-c</code>：将代码注释为roxygen的<code>##'</code>开头格式，特别是注释example的时候很好用。</p>
    </li>
    <li>
      <p><code>C-c C-e p</code>：光标跳转到注释段落开头。</p>
    </li>
    <li>
      <p><code>C-c C-e n</code>：光标跳转到注释所在函数段落结尾。</p>
    </li>
    <li>
      <p><code>M-q</code>：整理roxygen注释，将多行注释压缩整理。</p>
    </li>
  </ol>
</blockquote>

<p><img class="middle" src="/images/Emacs_ESS_snap.jpg" width="900" height="900" title="‘Emacs ESS #1’ ‘a snap of Emacs ESS’" ></p>

<h2 id="section">3. 高级设置</h2>

<p>结合Emacs的自动补全、补全括号、颜色显示等功能，设置更加强大的ESS编辑环境。将<a href="#c-mode-config">附加环境设置</a>添加到Emacs设置文件，比如<code class="language-bash">~/.emacs</code>。所需要的包使用<code class="language-emacs-lisp">M-x list-package</code>安装。</p>

<ul>
  <li>自动补全：<code>auto-complete</code>包</li>
</ul>

<p><img src="http://yulongniu.bionutshell.org/images/emacs_ess_tipes_autocomplete.png" width="900" height="900" title="image" alt="images" /></p>

<ul>
  <li>
    <p>代码折叠：<code>hs-minor-mode</code>（系统自带）</p>
  </li>
  <li>
    <p>括号补全：<code>smartparens</code></p>
  </li>
  <li>
    <p>括号颜色：<code>rainbow-delimiters</code></p>
  </li>
  <li>
    <p>颜色显示：<code>rainbow-mode</code></p>
  </li>
</ul>

<p><img src="http://yulongniu.bionutshell.org/images/emacs_ess_tipes_parent.png" width="500" height="500" title="image" alt="images" /></p>

<h2 id="section-1">附加内容</h2>

<p><a id="c-mode-config">ESS的Emacs编程环境设置</a></p>

<p><figure class='code'><figcaption><span>Emacs configure </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='emacs-lisp'><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">; auto-completion</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">auto-complete</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">auto-complete-config</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">ac-config-default</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">; ESS set</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">ess-site</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">ess-use-auto-complete</span> <span class="no">t</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;open hs-mode</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">ess-mode-hook</span> <span class="err">‘</span><span class="nv">hs-minor-mode</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;smartparens</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">smartparens-config</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">show-smartparens-global-mode</span> <span class="no">t</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">smartparens-global-mode</span> <span class="no">t</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;rainbow mode </span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">rainbow-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">hook</span> <span class="err">‘</span><span class="p">(</span><span class="nv">ess-mode-hook</span> <span class="nv">inferior-ess-mode-hook</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="nv">hook</span> <span class="err">‘</span><span class="nv">rainbow-turn-on</span><span class="p">))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;rainbow-delimiters</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="err">‘</span><span class="nv">rainbow-delimiters</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">prog-mode-hook</span> <span class="err">‘</span><span class="nv">rainbow-delimiters-mode</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="err">‘</span><span class="nv">ess-mode-hook</span> <span class="err">‘</span><span class="nv">rainbow-delimiters-mode</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-idrefa"><a id="Ref">参考资料</a></h3>

<ul>
  <li>
    <p><a href="http://cos.name/2011/05/write-r-packages-like-a-ninja/">像忍者一样写R包</a></p>
  </li>
  <li>
    <p><a href="http://google-styleguide.googlecode.com/svn/trunk/google-r-style.html">google code R stype</a></p>
  </li>
  <li>
    <p><a href="http://joysofprogramming.com/install-emacs-ess-el-fedora-rhel/">记载ESS的博客</a></p>
  </li>
  <li>
    <p><a href="http://www.damtp.cam.ac.uk/user/sje30/ess11/ess-slides.pdf">ESS幻灯片</a></p>
  </li>
  <li>
    <p><a href="http://ess.r-project.org/Manual/ess.html">ESS文档</a></p>
  </li>
  <li>
    <p><a href="http://ygc.name/2014/12/07/auto-complete-in-ess/">YGC auto-complete in ESS</a></p>
  </li>
</ul>

<h3 id="section-2">更新记录</h3>

<p>2015年6月30日</p>

]]></content>
  </entry>
  
</feed>
