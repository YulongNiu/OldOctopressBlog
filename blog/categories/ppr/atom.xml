<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ppr | 牛牛龙]]></title>
  <link href="http://yulongniu.github.io/blog/categories/ppr/atom.xml" rel="self"/>
  <link href="http://yulongniu.github.io/"/>
  <updated>2015-05-09T15:46:43+08:00</updated>
  <id>http://yulongniu.github.io/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Django使用介绍]]></title>
    <link href="http://yulongniu.github.io/blog/2015/05/09/django-tutorial/"/>
    <updated>2015-05-09T13:42:15+08:00</updated>
    <id>http://yulongniu.github.io/blog/2015/05/09/django-tutorial</id>
    <content type="html"><![CDATA[<p>本文是学习<a href="https://docs.djangoproject.com/en/1.8/intro/tutorial01/">Django Tutorial</a>的记录，目的为了帮助快速浏览和查找Django使用细节。</p>

<h2 id="django">1. 安装Django</h2>

<p>本文使用<a href="https://www.python.org/">Python 3.3.6</a>和<a href="http://www.postgresql.org/">PostgreSQL 9.3.6</a>学习Django。可以参考<a href="http://yulongniu.bionutshell.org/blog/2015/05/09/python-different-version/">“使用Pyenv控制多个版本Python”</a>和 <a href="http://yulongniu.bionutshell.org/blog/2015/05/08/install-use-postgresql/">“Fedora安装与使用PostgreSQL”</a>，安装对应版本Python和PostgreSQL。</p>

<p>{% codeblock lang:bash %}
# 安装Django
$ pip install django</p>

<h1 id="postgresqlpsycopg2">安装PostgreSQL支持psycopg2</h1>
<p>$ pip install psycopg2 
{% endcodeblock %}</p>

<!--more-->

<p>{% highlight lang:bash %}
# 检查Django版本
$ python -c “import django; print(django.get_version())”
{% endhighlight %}</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="https://docs.djangoproject.com/en/1.8/intro/tutorial01/">Django Tutorial</a></li>
</ul>

<h3 id="section">更新记录</h3>

<p>2015年5月9日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Pyenv控制多个版本Python]]></title>
    <link href="http://yulongniu.github.io/blog/2015/05/09/python-different-version/"/>
    <updated>2015-05-09T00:14:10+08:00</updated>
    <id>http://yulongniu.github.io/blog/2015/05/09/python-different-version</id>
    <content type="html"><![CDATA[<p>同时在一台电脑上使用多个版本的Python，可以通过<a href="https://github.com/yyuu/pyenv">pyenv</a>控制和管理。</p>

<h2 id="section">1. 安装方法</h2>

<p>{% codeblock lang:bash %}
$ git clone git://github.com/yyuu/pyenv.git ~/.pyenv</p>

<h1 id="section-1">写入路径信息</h1>
<p>$ echo ‘export PYENV_ROOT=”$HOME/.pyenv”’ » ~/.bashrc
$ echo ‘export PATH=”$PYENV_ROOT/bin:$PATH”’ » ~/.bashrc
$ echo ‘eval “$(pyenv init -)”’ » ~/.bashrc</p>

<h1 id="section-2">重新载入</h1>
<p>$ source ~/.bashrc
{% endcodeblock %}</p>

<!--more-->

<h2 id="python">2. 安装多个版本Python和对应包</h2>

<p>{% codeblock lang:bash %}
# 查看可提供的Python版本列表
$ pyenv install –list</p>

<h1 id="python-1">安装Python所依赖包</h1>
<p># yum install readline readline-devel readline-static openssl openssl-devel openssl-static sqlite-devel bzip2-devel bzip2-libs
# 安装其他版本Python
$ pyenv install 3.4.3
$ pyenv rehash</p>

<h1 id="python-2">查看已安装Python版本</h1>
<p>$ pyenv versions</p>

<h1 id="python-3">全局切换Python版本</h1>
<p>$ pyenv global 3.4.3</p>

<h1 id="python-4">安装对应版本Python包。</h1>
<p># 每次安装包之后，都要执行rehash。
$ pip install ipython
$ pyenv rehash
{% endcodeblock %}</p>

<h2 id="pyenv">3. 更新pyenv</h2>

<p>{% codeblock lang:bash %}
$ cd ~/.pyenv
$ git pull
{% endcodeblock %}</p>

<h2 id="python-5">4. 删除特定版本Python</h2>

<p>{% codeblock lang:bash %}
# 查找特定版本Python文件夹位置，之后直接删除即可。
$ pyenv prefix 3.4.3
$ rm -rf ~/.pyenv/versions/3.4.3
{% endcodeblock %}</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="http://seisman.info/python-pyenv.html">Python多版本共存之pyenv</a></li>
</ul>

<h3 id="section-3">更新记录</h3>

<p>2015年5月9日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装和使用]]></title>
    <link href="http://yulongniu.github.io/blog/2014/07/23/octopress-install/"/>
    <updated>2014-07-23T01:45:46+08:00</updated>
    <id>http://yulongniu.github.io/blog/2014/07/23/octopress-install</id>
    <content type="html"><![CDATA[<p>安装和使用Octopress的一些注意事项，详细的内容可以<a href="#Ref">参考网址</a>。</p>

<h2 id="section">1. 安装</h2>

<p>请参考<a href="http://octopress.org/">官网</a>，其他的博客介绍的安装已经失效或者错误。</p>

<p>常用命令:</p>

<p>{% codeblock lang:bash %}
# 预览，可自动更新。使用Ctrl+c终止。
$ rake preview
{% endcodeblock %}</p>

<h2 id="ruby">2. Ruby版本调整</h2>

<p>因为Octopress需要使用Ruby旧版本，推荐使用<a href="https://rvm.io/">RVM</a>安装Ruby 1.9.3版本。在安转过程中可能会出现<code>"gpg: Can't check signature: public key not found"</code>的错误提示，需要执行一下类似命名，添加公用匙。</p>

<p>{% codeblock lang:bash %}
$ gpg2 –keyserver hkp://keys.gnupg.net –recv-keys D39DC0E3
{% endcodeblock %}</p>

<p>使用以下操作设定ruby版本：</p>

<p>{% codeblock lang:bash %}
$ source ~/.rvm/scripts/rvm
$ rvm use 1.9.3
{% endcodeblock %}
<!--more-->    </p>

<h2 id="section-1">3. 预览错误</h2>

<p>如果在预览博文时出现<code class="language-bash">TCPServer Error: Address already in use - bind(2)</code>的错误，表示端口（Octopress默认4000）被占，解决办法:</p>

<p>{% codeblock lang:bash %}
# 获取占据4000端口程序的PID
$ lsof -wni tcp:4000
$ kill -9 PID
{% endcodeblock %}</p>

<h2 id="section-2">4. 更新博文</h2>

<p>博文放置在<code class="language-bash">source/_posts</code>目录下。</p>

<p>{% codeblock lang:bash %}
$ rake new_post[“new post”]
$ git add .
$ git commit -m “my comment” 
$ git push origin source
$ rake generate
$ rake deploy</p>

<h1 id="generatedeploy">或者generate和deploy一步执行</h1>
<p>$ rake gen_deploy
{% endcodeblock %}
如果需要在首页显示部分博文，在需要隔断的地方（博文markdown文件）加入：</p>

<p>{% codeblock lang:html%}
<!--more-->
{% endcodeblock %}</p>

<h2 id="section-3">5. 使用主题</h2>

<p>当前博客使用的是<a href="http://kaworu.github.io/octopress/">octostrap</a>主题。</p>

<ul>
  <li>
    <p><a href="http://kaworu.github.io/octostrap3/blog/2013/10/03/category-list-aside/">添加Category侧边栏</a></p>
  </li>
  <li>
    <p><a href="http://kaworu.github.io/octostrap3/blog/2013/10/02/pick-a-theme-for-only-one-page/">每个页面更换主题</a></p>
  </li>
  <li>
    <p><a href="http://kaworu.github.io/octostrap3/setup/pick-a-theme/">选择Bootstrap主题</a></p>
  </li>
</ul>

<h2 id="section-4">6. 修改标签图标记</h2>

<p>可以使用<a href="http://converticon.com/">在线转换工具</a>，将png格式图片转换为ico格式（比如32*32），例如文件<code>favicon.ico</code>。之后，将<code>favicon.ico</code>移动到<code class="language-bash">source/</code>目录下。之后修改文件<code class="language-bash">source/_includes/head.html</code>，找到<code>favicon.png</code>将其改为<code>favicon.ico</code>。</p>

<h2 id="section-5">7. 404公益</h2>

<p>在<code class="language-bash">source</code>文件夹下添加<em>404.markdown</em>文件，之后写入</p>

<h2 id="codeblock-langjavascript-">{% codeblock lang:javascript %}</h2>
<p>layout: page
title: “404 Error”
date: 2014-07-22
comments: false
sharing: false
footer: false
—</p>

<script type="text/javascript" src="http://www.qq.com/404/search_children.js?edition=small" charset="utf-8"></script>

<p>{% endcodeblock %}</p>

<h2 id="section-6">8. 私密博文</h2>

<p>Octopress提供了隐藏博文的功能，即使文章已经推送到了github，也可以不在博客主页显示。具体方法是在每篇markdown文件头部添加：</p>

<p>{% codeblock lang:ruby %}
published: false
{% endcodeblock %}</p>

<p>如果需要公开发表，将其删除或者改为：</p>

<p>{% codeblock lang:ruby %}
published: true
{% endcodeblock %}</p>

<h2 id="section-7">9. 代码高亮设置</h2>

<p>安装<code>coderay</code>和<code>kramdown</code></p>

<p>{% codeblock lang:bash %}
$ gem install coderay
$ gem install kramdown
{% endcodeblock %}</p>

<p>在<code class="language-bash">_config.yml</code>文件中写入：</p>

<p>{% codeblock lang:bash %}
markdown: kramdown
kramdown:
  use_coderay: true
  coderay:
    coderay_line_numbers: table
    coderay_css: class
{% endcodeblock %}</p>

<h2 id="kramdown">10. Kramdown语法小技巧</h2>

<ul>
  <li>代码高亮</li>
</ul>

<p>代码段高亮参考<a href="http://octopress.org/docs/plugins/codeblock/">Octopress codeblock</a>，其中<code>[lang:language]</code>设置高亮语言种类。<code>[url]</code>和<code>[linktext]</code>非必须。</p>

<p>{% raw %}
<code>
{% codeblock [lang:language] [title] [url] [link text] %}
code snippet
{% endcodeblock %}
</code>
{% endraw %}</p>

<p>行内引用代码使用
<code>`source/_includes/custom/head.html`{:.language-bash}</code></p>

<ul>
  <li>四个空格或者一个Tab可以生成一个文本块</li>
</ul>

<h2 id="section-8">11. 链接在新的选择卡中打开</h2>

<p>在<code class="language-bash">source/_includes/custom/head.html</code>的末尾添加：</p>

<p>{% codeblock lang:html %}
<!-- link open with new tab  -->
<script>
  function addBlankTargetForLinks () {
  $('a[href^="http"]').each(function(){
  $(this).attr('target', '_blank');
  });
  }</script></p>

<p>$(document).bind(‘DOMNodeInserted’, function(event) {
  addBlankTargetForLinks();
  });
&lt;/script&gt;
{% endcodeblock %}</p>

<h2 id="section-9">12. 修改分页数</h2>

<p>修改<code class="language-bash">_config.yml</code>文件</p>

<p>{% codeblock lang:bash %}
# 每页最多展示的博文数目
paginate: 5</p>

<h1 id="section-10">分页后博文地址</h1>
<p>paginate_path: “posts/:num”
{% endcodeblock %}</p>

<h2 id="section-11">13. 添加图片</h2>

<p>将需要添加的图片移动到目录<code class="language-bash">source/images/</code>，之后在正文中添加：</p>

<p>{% codeblock lang:bash %}
{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}</p>

<h1 id="section-12">例子</h1>
<p>{% img left /images/testimg.png 350 350 ‘image’ ‘images’ %}
{% img right http://placekitten.com/300/500 150 250 Place Kitten #3 %}
{% endcodeblock %}</p>

<h2 id="section-13">14. 添加新页面</h2>

<p>首先，添加新的页面：</p>

<p>{% codeblock lang:bash %}
rake new_page[ANewPage]
{% endcodeblock %}</p>

<p>这会生成一个新的文件<code class="language-bash">source/anewpage/index.markdown</code>。之后，修改<code class="language-bash">source/_includes/custom/navigation.html</code>文件，根据自己主题，添加如下类似内容</p>

<p>{% raw %}
<code>
&lt;li {% if page.navbar == 'ANewPage' %}class="active"{% endif %}&gt;
  &lt;a href="{{ root_url }}/anewpage"&gt;ANewPage&lt;/a&gt;
&lt;/li&gt;
</code>
{% endraw %}</p>

<h2 id="section-14">15. 添加表格</h2>

<p>建立新文件<code>source/stylesheets/data-table.css</code>，写入以下内容，其中<code>#00B9E3</code>是表头的背景颜色，可以更改为自己喜欢的颜色：</p>

<p>{% codeblock data-table lang:css %}
* + table {
  border-style:solid;
  border-width:1px;
  border-color:#e7e3e7;
}</p>

<ul>
  <li>
    <ul>
      <li>table th, * + table td {
border-style:dashed;
border-width:1px;
border-color:#e7e3e7;
padding-left: 3px;
padding-right: 3px;
}</li>
    </ul>
  </li>
  <li>
    <ul>
      <li>table th {
border-style:solid;
font-weight:bold;
background: url(“/images/noise.png?1330434582”) repeat scroll left top #00B9E3;
}</li>
    </ul>
  </li>
  <li>
    <ul>
      <li>table th[align=”left”], * + table td[align=”left”] {
text-align:left;
}</li>
    </ul>
  </li>
  <li>
    <ul>
      <li>table th[align=”right”], * + table td[align=”right”] {
text-align:right;
}</li>
    </ul>
  </li>
  <li>
    <ul>
      <li>table th[align=”center”], * + table td[align=”center”] {
text-align:center;
}
{% endcodeblock %}</li>
    </ul>
  </li>
</ul>

<p>之后，在<code>source/_includes/head.html</code>中修改或者添加：</p>

<p>{% raw %}
<code>
&lt;link href="{{ root_url }}/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css"&gt;
{% if page.styles contains 'data-table' %}
&lt;link href="{{ root_url }}/stylesheets/data-table.css" media="screen, projection" rel="stylesheet" type="text/css" /&gt;
{% endif %}
</code>
{% endraw %}</p>

<p>使用方法，在每篇博客头部位置添加<code>styles: [data-table]</code>，之后使用表格样式即可。如果使用Kramdown，表格对其方法如下：</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: left"><strong>X/Y</strong></th>
      <th style="text-align: center"><strong>1(Presence)</strong></th>
      <th style="text-align: center"><strong>0(Absence)</strong></th>
      <th style="text-align: right"><strong>Sum</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>1(Presence)</strong></td>
      <td style="text-align: center">a</td>
      <td style="text-align: center">b</td>
      <td style="text-align: right">a+b</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>0(Absence)</strong></td>
      <td style="text-align: center">c</td>
      <td style="text-align: center">d</td>
      <td style="text-align: right">c+d</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>Sum</strong></td>
      <td style="text-align: center">a+c</td>
      <td style="text-align: center">b+d</td>
      <td style="text-align: right">n=a+b+c+d</td>
    </tr>
  </tbody>
</table>

<hr />

<p>{% raw %}
<code>
|---------------+---------------+--------------+---------|
|**X/Y**        |**1(Presence)**|**0(Absence)**|**Sum**  |
|:--------------|:-------------:|:------------:|--------:|
|**1(Presence)**|a              |b             |a+b      |
|---------------|---------------|--------------|---------|
|**0(Absence)** |c              |d             |c+d      |
|---------------|---------------|--------------|---------|
|**Sum**        |a+c            |b+d           |n=a+b+c+d|
|---------------|---------------|--------------|---------|
</code>
{% endraw %}</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p>Octopress安装和域名设置：<a href="http://tchen.me/posts/2012-12-16-first-blog.html">1</a>, <a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">2</a></p>
  </li>
  <li>
    <p>Octopress其他配制：<a href="http://812lcl.com/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi/">1</a>, <a href="http://cn.soulmachine.me/blog/20130402/">2</a></p>
  </li>
  <li>
    <p>添加多说：<a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">1</a>, <a href="http://kaiimeng.cn/my-first-octopress-blog/">2</a>, <a href="http://cn.soulmachine.me/blog/20130402/">3</a></p>
  </li>
  <li>
    <p>添加Mathjax支持：<a href="http://yanping.me/cn/blog/2012/03/10/octopress-with-latex/">1</a>, <a href="http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/">2</a>, <a href="http://adereth.github.io/blog/2013/11/29/colorful-equations/">Mathjax彩色公式</a></p>
  </li>
  <li>
    <p><a href="http://kramdown.gettalong.org/syntax.html">Kramdown语法</a></p>
  </li>
  <li>
    <p><a href="http://kramdown.gettalong.org/quickref.html">Kramdown演示</a></p>
  </li>
  <li>
    <p><a href="http://i.rexdf.org/blog/2014/09/26/octopressbo-ke-geng-xin-ri-zhi/">pygments错误详细提示</a></p>
  </li>
  <li>
    <p><a href="http://pygments.org/docs/lexers/">Octopress highlight language list</a></p>
  </li>
  <li>
    <p>标记Octopress自身语法：<a href="http://stackoverflow.com/questions/15786144/how-to-escape-in-markdown-on-octopress">1</a>，<a href="http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags/13582517#13582517">2</a></p>
  </li>
  <li>
    <p><a href="http://programus.github.io/blog/2012/03/07/add-table-data-css-for-octopress/">Octopress添加表格</a></p>
  </li>
</ul>

<h3 id="section-15">更新记录</h3>

<p>2014年12月16日</p>

]]></content>
  </entry>
  
</feed>
