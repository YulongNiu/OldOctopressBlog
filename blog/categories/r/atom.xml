<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: R | 牛牛龙]]></title>
  <link href="http://yulongniu.github.io/blog/categories/r/atom.xml" rel="self"/>
  <link href="http://yulongniu.github.io/"/>
  <updated>2014-12-14T19:08:28-05:00</updated>
  <id>http://yulongniu.github.io/</id>
  <author>
    <name><![CDATA[Yulong Niu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[R使用parallel包并行计算]]></title>
    <link href="http://yulongniu.github.io/blog/2014/06/24/parallel-package/"/>
    <updated>2014-06-24T22:10:20-04:00</updated>
    <id>http://yulongniu.github.io/blog/2014/06/24/parallel-package</id>
    <content type="html"><![CDATA[<p>最新版本的R已经内置<span style="color: blue">parallel</span>包，<span style="color: blue">parallel</span>包是从<span style="color: blue"><a href="http://cran.r-project.org/web/packages/snow/index.html">snow</a></span>包和<span style="color: blue"><a href="http://cran.r-project.org/web/packages/multicore/index.html">multicore</a></span>包继承而来，包含了很多非常好用的函数。<span style="color: blue">parallel</span>包可以通过PVM（<span style="color: blue">rpvm</span>包）、MPI（<span style="color: blue"><a href="http://cran.r-project.org/web/packages/Rmpi/index.html">Rmpi</a></span>包）、NetWorkSpaces（<span style="color: blue"><a href="http://cran.r-project.org/web/packages/nws/index.html">nws</a></span>包）和raw sockets（如果以上3种都不能使用）平台进行分布计算，支持cluster和多核个人/服务器计算机。在Linux系统上，通常使用<a href="http://www.open-mpi.org/">openMPI</a>。</p>

<h2 id="span-stylecolor-bluermpispan">1. 安装<span style="color: blue">Rmpi</span>包</h2>

<p>因为使用openMPI，所以<span style="color: blue">parallel</span>包需要<span style="color: blue">Rmpi</span>包来设定节点，所以首先需要在计算机上安装openMPI。</p>

<!--more-->

<h3 id="linuxopenmpi">1.1 Linux系统下安装openMPI环境</h3>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 安装openmpi环境</span>
</span><span class='line'><span class="c"># yum install openmpi openmpi-devel&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;section&quot;</span>&gt;配置环境（安装时执行，可能之后运行也要执行）&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;# ldconfig /usr/lib64/openmpi/lib/
</span></code></pre></td></tr></table></div></figure></p>

<p>在<code class="language-bash">~/.bashrc</code>下写入</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>”<span class="k">${</span><span class="nv">LD_LIBRARY_PATH</span><span class="k">}${</span><span class="nv">LD_LIBRARY_PATH</span><span class="p">:+:</span><span class="k">}</span>/usr/lib64/openmpi/lib/”
</span></code></pre></td></tr></table></div></figure></p>

<p>载入<code class="language-bash">~/.bashrc</code></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="rmpi">1.2 安装Rmpi包</h3>

<p>在启动的R窗口中输入：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>install.packages<span class="p">(</span>“Rmpi”<span class="p">,</span>
</span><span class='line'>                 configure.args <span class="o">=</span>
</span><span class='line'>                 <span class="kt">c</span><span class="p">(</span>“–<span class="kp">with</span><span class="o">-</span>Rmpi<span class="o">-</span>include<span class="o">=/</span>usr<span class="o">/</span>include<span class="o">/</span>openmpi<span class="o">-</span>x86_64<span class="o">/</span>”<span class="p">,</span>
</span><span class='line'>                   “–<span class="kp">with</span><span class="o">-</span>Rmpi<span class="o">-</span>libpath<span class="o">=/</span>usr<span class="o">/</span>lib64<span class="o">/</span>openmpi<span class="o">/</span>lib<span class="o">/</span>”<span class="p">,</span>
</span><span class='line'>                   “–<span class="kp">with</span><span class="o">-</span>Rmpi<span class="o">-</span>type<span class="o">=</span>OPENMPI”<span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="span-stylecolor-blueparallelspan">2. 使用<span style="color: blue">parallel</span>包</h2>

<h3 id="section-1">2.1 设定节点数</h3>

<p>首先，需要设定cluster的节点（nodes）数目</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>cl <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> makeCluster<span class="p">(</span><span class="m">2</span><span class="p">,</span> type <span class="o">=</span> “MPI”<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>这里对“节点数”设定做一些解释，如果使用cluster，可以直接设定cluster数据即可；如果是在小型服务器或者个人电脑上使用，最大节点数可以设定为“线程数（processor）-1”。比如一个双核四线程计算机，节点数目最大可以设定为3。这是因为<span style="color: blue">snow</span>包（<span style="color: blue">parallel</span>包的主要依赖包）在设计时，总是要保留一个<strong>“主线程”</strong>来处理和整合数据。</p>

<p>在linux系统下，线程数可以通过 <code class="language-bash">$ nproc</code> 查看。</p>

<h3 id="section-2">2.2 内置函数</h3>

<p>使用<span style="color: blue">parallel</span>包中的内置并行运算函数
比如使用<code class="language-r">parApply()</code>、<code class="language-r">parCapply()</code>、<code class="language-r">parRapply()</code>、<code class="language-r">parLapply()</code>和<code class="language-r">parSapply()</code>（如果返回矩阵，使用
<code class="language-r">cbind()</code>）等函数。其中文档中指出，<code class="language-r">parApply()</code>函数对于<strong>二维矩阵</strong>的每一个单元进行操作，因此要慢一些。如果可能，使用<code class="language-r">parCapply()</code>和<code class="language-r">parRapply()</code>对列和行进行操作，以加快运行速度。</p>

<h3 id="section-3">2.3 回收节点</h3>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>stopCluster<span class="p">(</span>cl<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="section-4">3. 并行计算的包依赖问题</h3>

<p>在并行计算过程中，不可避免地会用到其他包辅助。这里涉及到<span style="color: blue">snow</span>包的一个设计原理：并行运算多个R进程，只有一个主进程载入完整的依赖包环境。这就意味着其他并行的R进程中也要载入依赖的包环境。</p>

<p>有两个思路，第一个思路是修改<code class="language-bash">Rprofile.site</code>文件，让任意R进程在启动时都载入依赖的包。但是，不推荐这种做法，因为这样会增加R载入的速度；并且如果不同的代码用了不同的依赖包，就要不停地修改<code class="language-bash">Rprofile.site</code>文件。</p>

<p>第二个思路是在新开的R进程中“动态”加载需要的包。所谓<strong>“动态”</strong>，没有什么高深的意思，就是“需要的时候加载即可”。根据需要，可以选择以下两种方法。</p>

<ul>
  <li>第一种方法是在直接在启动的R进程中加载包。</li>
</ul>

<p>这种方法非常直观，推荐。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># 以下代码摘抄自Parallel R，其中packages</span>
</span><span class='line'><span class="c1"># 是一个要选择加载的package列表，</span>
</span><span class='line'><span class="c1"># 比如c(‘bigmemory’, ‘foreach’, ‘doMC’)</span>
</span><span class='line'>worker.init <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>packages<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">for</span> <span class="p">(</span>p <span class="kr">in</span> packages<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">library</span><span class="p">(</span>p<span class="p">,</span> character.only<span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="kc">NULL</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li>第二种方法是在调用函数中加入。</li>
</ul>

<p>这种方法不推荐，因为我们将看到这种方法是“投机”了<span style="color: blue">parallel</span>包的并行<code>apply</code>家族函数。原理是：<span style="color: blue">parallel</span>包中最主要的就是<code>apply</code>家族函数，比如<code class="language-r">parApply(cl = NULL, X, MARGIN, FUN, ...)</code>函数，是<span style="color: blue">base</span>包中<code class="language-r">apply()</code>的并行版本。其中会用到一个<code>FUN</code>函数，我们可以在这个函数中加载包，比如写入<code class="language-r">require('bigmemory')</code>等。这样，并行的R进程就会载入需要的包。举例如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Getft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">,</span> arg1<span class="p">,</span> arg2<span class="p">){</span>
</span><span class='line'>  <span class="kn">require</span><span class="p">(</span>packages<span class="p">)</span>
</span><span class='line'>  …
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>adft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> parSapply<span class="p">(</span>cl<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> Getft<span class="p">,</span> argInput1<span class="p">,</span> argInput2<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="span-stylecolor-bluebigmemoryspan">4. 与<span style="color: blue">bigmemory</span>包结合</h2>

<p><span style="color: blue">parallel</span>包可以很好地与<span style="color: blue">bigmemory</span>包结合，进而进一步提升R操作大数据的能力。</p>

<p>但是，有一个问题是<code class="language-r">parApply()</code>、<code class="language-r">parCapply()</code>、<code class="language-r">parRapply()</code>函数是不能直接调用<span style="color: blue">bigmemory</span>包的<code>big.memory</code>这种S4对象。当然也可以使用<code>mat[, ]</code>之类语句引用big.matrix对象。但是这会把矩阵全部载入内存，也就失去了<code>big.matrix</code>对象的意义，只有在内存允许的情况下这样操作。</p>

<p>解决办法：</p>

<blockquote>
  <ol>
    <li>
      <p>将<code>big.matrix</code>对象的操作放在一个函数中，函数传入的是<code>big.matrix</code>的<code>description file</code>（描述文件），而不是<code>big.matrix</code>对象本身。</p>
    </li>
    <li>
      <p>把这个函数作为<code class="language-r">parLapply()</code>和<code class="language-r">parSapply()</code>的<code>FUN</code>，达到分布计算，而又不直接引用<code>big.matrix</code>对象的目的。</p>
    </li>
    <li>
      <p>这个思路的前提是：创建的<code>big.matrix</code>对象必须是“<strong>内存共享</strong>”的，否则不能将其分布到不同的节点计算。</p>
    </li>
  </ol>
</blockquote>

<p>举一个例子，完整版本见<a href="#final_version">补充材料：Final version</a>，这个例子中首先创建一个<code class="language-r">Getft()</code>函数，接受<code>adAllRowColDesc</code>和<code>adMatDesc</code>两个变量是<code>big.matrix</code>对象的描述文件。在这个函数中，<code class="language-r">attach.big.matrix()</code>通过描述文件引用<code>big.matrix</code>对象，并完成相关操作。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Getft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">,</span> adAllRowColDesc<span class="p">,</span> adMatDesc<span class="p">){</span>
</span><span class='line'>  adAllRowColData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> attach.big.matrix<span class="p">(</span>adAllRowColDesc<span class="p">)</span>
</span><span class='line'>  adMatData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> attach.big.matrix<span class="p">(</span>adMatDesc<span class="p">)</span>
</span><span class='line'>  rowIndex <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">]</span>
</span><span class='line'>  colIndex <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]</span>
</span><span class='line'>  linkData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>rowIndex<span class="p">],</span> rowNames<span class="p">[</span>colIndex<span class="p">],</span> adMatData<span class="p">[</span>rowIndex<span class="p">,</span> colIndex<span class="p">])</span>
</span><span class='line'>  <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
之后，使用<code class="language-r">parSapply()</code>函数调用<code class="language-r">Getft()</code>函数，使用<code>1:nrow(adAllRowCol)</code>作为“<strong>计数器</strong>”。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>adft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> parSapply<span class="p">(</span>cl<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> Getft<span class="p">,</span> adAllRowColDescFile<span class="p">,</span> adMatDescFile<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>如果需要处理的<code>big.matrix</code>对象不大，也可以直接使用<code class="language-r">parSapply()</code>函数，详细参考<a href="#bigmatrix_direct">补充材料：Bigmatrix direct version</a>。</p>

<h2 id="span-stylecolor-blueforeachspan">5. 与<span style="color: blue">foreach</span>包比较</h2>

<p>另外一个支持并行计算的包是<span style="color: blue">foreach</span>包，它天生与<code>big.matrix</code>对象匹配。所以，我也提供了使用<code class="language-r">foreach</code>版本，详细参考<a href="#foreach">补充材料：Foreach version</a>。</p>

<p>通过测试可以发现，在数据量较少时（1000行左右），<code class="language-r">foreach</code><a href="#foreach">版本</a>和<code class="language-r">parSapply()</code><a href="#final_version">版本</a>速度基本持平。但是，数据量增大时（百万行），<code class="language-r">foreach</code><a href="#foreach">版本</a>速度明显减慢。原因是在使用<code class="language-r">foreach</code>并行计算时，计算开始时候需要建立索引。这个过程在循环数变大时，会变得非常缓慢。</p>

<p>因此，我们可以看到，如果使用<span style="color: blue">foreach</span>包，会减少代码量，而且程序逻辑也非常清晰，但是遇到超大循环数，速度明显减慢。同时，如果使用<span style="color: blue">parallel</span>包，那么需要一些“技巧”才能与<code>big.matrix</code>对象有效融合。所以，我们的结论是原生态的R（包括提供的一些包）不适合做并行大数据计算。</p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="http://cran.r-project.org/web/views/HighPerformanceComputing.html">R task: High-Performance and Parallel Computing with R</a></p>
  </li>
  <li>
    <p><a href="http://www.jstatsoft.org/v31/i01/paper">State of the Art in Parallel Computing with R</a>，这篇文章详细介绍了很多R并行计算的平台</p>
  </li>
  <li>
    <p>Rmpi安装：<a href="http://www.stats.uwo.ca/faculty/yu/Rmpi/">1</a>, <a href="https://www.sharcnet.ca/help/index.php/Using_R_and_MPI">2</a>, <a href="http://www.cybaea.net/Blogs/R-tips-Installing-Rmpi-on-Fedora-Linux.html">3</a></p>
  </li>
  <li>
    <p><a href="http://www.sfu.ca/~sblay/R/snow.html">snow包介绍</a></p>
  </li>
  <li>
    <p><a href="http://www.stat.yale.edu/~mjk56/temp/bigmemory-vignette.pdf">The R Package bigmemory: Supporting Efficient Computation and Concurrent Programming with Large Data Sets.</a></p>
  </li>
  <li>
    <p>书籍<a href="http://shop.oreilly.com/product/0636920021421.do">Parallel R</a></p>
  </li>
</ul>

<h3 id="a-idappendixa"><a id="appendix">补充材料</a></h3>

<ul>
  <li><a id="final_version">Final version</a></li>
</ul>

<p><figure class='code'><figcaption><span>combine parSapply and big.matrix </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>adj2ftBig <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>adMat<span class="p">,</span> adAllRowCol<span class="p">,</span> n <span class="o">=</span> <span class="m">2</span><span class="p">){</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="c1"># INPUT: ‘adMat’ should be a bigmatrix. ‘adAllRowCol’ is the row and column combination, also is a bigmatrix&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kn">require</span><span class="p">(</span>bigmemory<span class="p">)</span>
</span><span class='line'>  <span class="kn">require</span><span class="p">(</span>parallel<span class="p">)</span>
</span><span class='line'>  cl <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> makeCluster<span class="p">(</span>n<span class="p">,</span> type <span class="o">=</span> “MPI”<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>adMatDescFile <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> describe<span class="p">(</span>adMat<span class="p">)</span>
</span><span class='line'>  adAllRowColDescFile <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> describe<span class="p">(</span>adAllRowCol<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>rowNames <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">rownames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class='line'>  colNames <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">colnames</span><span class="p">(</span>adMat<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>ignore <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> clusterEvalQ<span class="p">(</span>cl<span class="p">,</span> <span class="p">{</span><span class="kn">library</span><span class="p">(</span>bigmemory<span class="p">);</span> <span class="kc">NULL</span><span class="p">})</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>Getft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">,</span> adAllRowColDesc<span class="p">,</span> adMatDesc<span class="p">){</span>
</span><span class='line'>    adAllRowColData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> attach.big.matrix<span class="p">(</span>adAllRowColDesc<span class="p">)</span>
</span><span class='line'>    adMatData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> attach.big.matrix<span class="p">(</span>adMatDesc<span class="p">)</span>
</span><span class='line'>    rowIndex <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">]</span>
</span><span class='line'>    colIndex <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> adAllRowColData<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]</span>
</span><span class='line'>    linkData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>rowIndex<span class="p">],</span> rowNames<span class="p">[</span>colIndex<span class="p">],</span> adMatData<span class="p">[</span>rowIndex<span class="p">,</span> colIndex<span class="p">])</span>
</span><span class='line'>    <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class='line'>  <span class="p">}</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>adft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> parSapply<span class="p">(</span>cl<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> Getft<span class="p">,</span> adAllRowColDescFile<span class="p">,</span> adMatDescFile<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>stopCluster<span class="p">(</span>cl<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kr">return</span><span class="p">(</span>adft<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li><a id="bigmatrix_direct">Bigmatrix direct version</a></li>
</ul>

<p><figure class='code'><figcaption><span>directly use the big.matrix </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>adj2ftBig3 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>adMat<span class="p">,</span> adAllRowCol<span class="p">,</span> n <span class="o">=</span> <span class="m">2</span><span class="p">){</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="c1"># INPUT: ‘adMat’ is a matrix. ‘adAllRowCol’ is the row and column combination, also a matrix.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kn">library</span><span class="p">(</span>parallel<span class="p">)</span>
</span><span class='line'>  cl <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> makeCluster<span class="p">(</span>n<span class="p">,</span> type <span class="o">=</span> “MPI”<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>rowNames <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">rownames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class='line'>  colNames <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">colnames</span><span class="p">(</span>adMat<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>adft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> parRapply<span class="p">(</span>cl <span class="o">=</span> cl<span class="p">,</span> adAllRowCol<span class="p">,</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    linkData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>x<span class="p">[</span><span class="m">1</span><span class="p">]],</span> colNames<span class="p">[</span>x<span class="p">[</span><span class="m">2</span><span class="p">]],</span> adMat<span class="p">[</span>x<span class="p">[</span><span class="m">1</span><span class="p">],</span> x<span class="p">[</span><span class="m">2</span><span class="p">]])</span>
</span><span class='line'>    <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class='line'>  <span class="p">})</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>stopCluster<span class="p">(</span>cl<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kr">return</span><span class="p">(</span>adft<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li><a id="foreach">Foreach version</a></li>
</ul>

<p><figure class='code'><figcaption><span>apply foreach to big.matrix </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>adj2ftBig2 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kr">function</span><span class="p">(</span>adMat<span class="p">,</span> adAllRowCol<span class="p">,</span> n <span class="o">=</span> <span class="m">4</span><span class="p">){</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="c1"># INPUT: ‘adMat’ should be a bigmatrix. ‘adAllRowCol’ is the row and column combination, also a bigmatrix.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kn">library</span><span class="p">(</span>bigmemory<span class="p">)</span>
</span><span class='line'>  <span class="kn">library</span><span class="p">(</span>foreach<span class="p">)</span>
</span><span class='line'>  <span class="kn">library</span><span class="p">(</span>doMC<span class="p">)</span>
</span><span class='line'>  registerDoMC<span class="p">(</span>n<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>rowNames <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">rownames</span><span class="p">(</span>adMat<span class="p">)</span>
</span><span class='line'>  colNames <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">colnames</span><span class="p">(</span>adMat<span class="p">)</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span>adft <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> foreach <span class="p">(</span>i <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> <span class="m">.</span>combine <span class="o">=</span> <span class="kp">rbind</span><span class="p">,</span> <span class="m">.i</span>norder<span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span> <span class="o">%dopar%</span> <span class="p">{</span>
</span><span class='line'>    <span class="kp">print</span><span class="p">(</span><span class="kp">paste</span><span class="p">(</span>‘It is running ‘<span class="p">,</span> i<span class="p">,</span> ‘ <span class="kr">in</span> total of ‘<span class="p">,</span> <span class="kp">nrow</span><span class="p">(</span>adAllRowCol<span class="p">),</span> ‘<span class="m">.</span>’<span class="p">,</span> sep <span class="o">=</span> ‘’<span class="p">))</span>
</span><span class='line'>    linkData <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">c</span><span class="p">(</span>rowNames<span class="p">[</span>adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">]],</span> colNames<span class="p">[</span>adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]],</span> adMat<span class="p">[</span>adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">1</span><span class="p">],</span> adAllRowCol<span class="p">[</span>i<span class="p">,</span> <span class="m">2</span><span class="p">]])</span>
</span><span class='line'>    <span class="kr">return</span><span class="p">(</span>linkData<span class="p">)</span>
</span><span class='line'>  <span class="p">}</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kr">return</span><span class="p">(</span>adft<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="section-5">更新记录</h3>

<p>2014年7月22日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[创建R包的最简流程]]></title>
    <link href="http://yulongniu.github.io/blog/2014/03/27/creat-r-package/"/>
    <updated>2014-03-27T14:53:05-04:00</updated>
    <id>http://yulongniu.github.io/blog/2014/03/27/creat-r-package</id>
    <content type="html"><![CDATA[<p>一个最简单创建R包的流程。</p>

<h2 id="section">1. 载入工具包</h2>

<p>安装并载入<span style="color: blue">devtools</span>包和<span style="color: blue">roxygen2</span>包。<span style="color: blue">devtools</span>包提供了一些包的检查、安装和打包的基本工具。<span style="color: blue">roxygen2</span>包则使得书写R帮助文档变得轻松简单。如果习惯使用Emacs，可以结合<a href="http://ess.r-project.org/">ESS</a>建立R包，可以将R代码和帮助文档有效组合在一起，便于管理。当然，也可以使用<a href="http://www.rstudio.com/">Rstudio</a>。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kn">library</span><span class="p">(</span>devtools<span class="p">)</span>
</span><span class='line'><span class="kn">library</span><span class="p">(</span>roxygen2<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<!--more-->

<h2 id="description">2. 创建DESCRIPTION文件模板</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>load_all<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>
其中<code class="language-bash">import</code>栏目，在源代码中使用了哪些包，需要逐步在import项目中添加和修改。</p>

<h2 id="section-1">3. 检查包</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>check<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="section-2">4. 安装包</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>install<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="targzlanguage-bash">5. 生成<code class="language-bash">.tar.gz</code>压缩文件</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>build<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="https://www.youtube.com/watch?v=9PyQlbAEujY">创建R包视频</a></li>
</ul>

<h3 id="section-3">更新记录</h3>

<p>2014年9月5日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R Ggplot2 Notes]]></title>
    <link href="http://yulongniu.github.io/blog/2013/10/02/ggplot2-notes/"/>
    <updated>2013-10-02T02:47:11-04:00</updated>
    <id>http://yulongniu.github.io/blog/2013/10/02/ggplot2-notes</id>
    <content type="html"><![CDATA[<h1 id="r-package-span-stylecolor-blueggplot2span-notes">R Package <span style="color: blue">ggplot2</span> Notes</h1>

<h2 id="basic-grammar">1. Basic grammar</h2>

<h3 id="plot-types">1.1 Plot types</h3>

<p>The R package <span style="color: blue">ggplot2</span> is a famous plot tool for high quality scientific figures. The <span style="color: blue">ggplot2</span> style figures are widely seen in papers published in high quality journals such as <em>PNAS</em>, <em>Nature</em> and <em>Cell</em>.</p>

<p>The input data should be in <strong>data frame</strong> form, and it is easily to use the function <code class="language-r">as.data.frame()</code>. “<span style="color:red"><strong>+</strong></span>” is used to connect different plot statement. A typical <span style="color: blue">ggplot2</span> plot statement is like:</p>

<!--more-->

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kn">require</span><span class="p">(</span>‘ggplot2’<span class="p">)</span>
</span><span class='line'>ggplot<span class="p">(</span>data<span class="o">=</span>mpg<span class="p">,</span> mapping<span class="o">=</span>aes<span class="p">(</span>x<span class="o">=</span>cty<span class="p">,</span> y<span class="o">=</span>hwy<span class="p">,</span> colour<span class="o">=</span><span class="kp">factor</span><span class="p">(</span>year<span class="p">)))</span> <span class="o">+</span>
</span><span class='line'>geom_point<span class="p">()</span> <span class="o">+</span> stat_smooth<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>
<code class="language-r">ggplot()</code>: <strong>data</strong> is a <span style="color:blue">data.frame</span> class object. <strong>mapping</strong> is an <code class="language-r">aes()</code> function to specify the X-axis and Y-axis. When a <code class="language-r">aes()</code> is used, a figure legend will be added. If we do not want the legends appear, use <code class="language-r">show_guide = FALSE</code> in <em>geom_XXX</em> or <em>stat_XXX</em></p>

<p><code class="language-r">geom_point()</code>: is used to plot points with the attributes <strong>x</strong>, <strong>y</strong>, alpha, colour, fill, shape, size.</p>

<p><code class="language-r">geom_line()</code>: is used to plot points with the attributes <strong>x</strong>, <strong>y</strong>, alpha, colour, fill, shape, size.</p>

<p><code class="language-r">geom_bar()</code>: bar plot. <code class="language-r">stat = 'identity'</code> for draw the identical, <code class="language-r">hjust</code> and <code class="language-r">vjust</code> is to adjust the x and y axis distance. <code class="language-r">coord_flip()</code> to reverse X and Y axis. <code class="language-r">position = 'dodge'</code> to set position of two bars, can be set as ‘dodge’, ‘stack’, ‘fill’ and ‘identity’.</p>

<p><code class="language-r">geom_box()</code>: boxplot.</p>

<p><code class="language-r">geom_tile()</code>: fill blocks.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># example</span>
</span><span class='line'><span class="kn">require</span><span class="p">(</span>‘ggplot2’<span class="p">)</span>
</span><span class='line'>p <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> ggplot<span class="p">(</span>mtcars<span class="p">,</span> aes<span class="p">(</span><span class="kp">factor</span><span class="p">(</span>cyl<span class="p">),</span> mpg<span class="p">))</span>
</span><span class='line'><span class="c1"># basic plot</span>
</span><span class='line'>p <span class="o">+</span> geom_boxplot<span class="p">()</span>
</span><span class='line'><span class="c1"># add colors to boxes</span>
</span><span class='line'>p <span class="o">+</span> geom_boxplot<span class="p">(</span>aes<span class="p">(</span>fill <span class="o">=</span> <span class="kp">factor</span><span class="p">(</span>cyl<span class="p">)))</span>
</span><span class='line'><span class="c1"># change default colors</span>
</span><span class='line'>p <span class="o">+</span> geom_boxplot<span class="p">(</span>aes<span class="p">(</span>fill <span class="o">=</span> <span class="kp">factor</span><span class="p">(</span>cyl<span class="p">)))</span> <span class="o">+</span> scale_fill_manual<span class="p">(</span>values <span class="o">=</span> <span class="kt">c</span><span class="p">(</span>‘red’<span class="p">,</span> ‘green’<span class="p">,</span> ‘blue’<span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>
<code class="language-r">geom_rect(mapping = NULL, data = NULL, stat = "identity", position = "identity", ...)</code>: plot rectangles. 
In <code class="language-r">aes()</code>, <code class="language-r">xmin</code>, <code class="language-r">xmax</code>, <code class="language-r">ymin</code>, and <code class="language-r">ymax</code> are necessary. 
<code class="language-r">inherit.aes = FALSE</code> may be used if new <code class="language-r">data</code> is applied.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># example</span>
</span><span class='line'>ggplot<span class="p">(</span>mtcars<span class="p">)</span> <span class="o">+</span>
</span><span class='line'>  geom_density<span class="p">(</span>aes<span class="p">(</span>x<span class="o">=</span>disp<span class="p">,</span> group<span class="o">=</span>cyl<span class="p">,</span> fill<span class="o">=</span>cyl<span class="p">),</span> alpha<span class="o">=</span><span class="m">0.6</span><span class="p">,</span> adjust<span class="o">=</span><span class="m">0.75</span><span class="p">)</span> <span class="o">+</span>
</span><span class='line'>  geom_rect<span class="p">(</span>data<span class="o">=</span>mtcars<span class="p">[</span><span class="m">1</span><span class="p">,],</span> aes<span class="p">(</span>xmin<span class="o">=</span><span class="m">100</span><span class="p">,</span> xmax<span class="o">=</span><span class="m">200</span><span class="p">,</span> ymin<span class="o">=</span><span class="m">0</span><span class="p">,</span>ymax<span class="o">=</span><span class="kc">Inf</span><span class="p">),</span> fill<span class="o">=</span>”red”<span class="p">,</span> alpha<span class="o">=</span><span class="m">0.2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="statistics">1.2 Statistics</h3>

<p><code class="language-r">geom_smooth()</code>: is used for the add smooth line with the <strong>method</strong> lm, glm, gam, loess and rlm. <code class="language-r">se = TRUE</code> is to display the confident region. The following aesthetics <strong>x</strong>, <strong>y</strong>, alpha, colour, fill, linetype, size, weight could be added.</p>

<p><code class="language-r">stat_boxplot()</code>: plot error lines in boxplot.</p>

<h3 id="add-elements">1.3 Add elements</h3>

<p><code class="language-r">xlab()</code>: change X axis label, set <code>xlab('')</code> to remove the X axis label; <code class="language-r">ylab()</code>: change Y axis label; <code class="language-r">ggtitle()</code>: add figure title; <code class="language-r">scale_y_continuous(limits=c(0, 20))</code> and <code class="language-r">scale_x_continuous(limits=c(0, 20))</code> to adjust range of X and Y axis.</p>

<p><code class="language-r">geom_abline(intercept = 37, slope = -5)</code>: to add line.</p>

<p><code class="language-r">geom_hline</code> and <code class="language-r">geom_vline</code>: to add horizontal and vertical lines.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># example </span>
</span><span class='line'>p <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> ggplot<span class="p">(</span>mtcars<span class="p">,</span> aes<span class="p">(</span>x <span class="o">=</span> wt<span class="p">,</span> y <span class="o">=</span> mpg<span class="p">))</span> <span class="o">+</span> geom_point<span class="p">()</span>
</span><span class='line'>geom_vline<span class="p">(</span>xintercept <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">,</span> colour<span class="o">=</span>”green”<span class="p">,</span> linetype <span class="o">=</span> “longdash”<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># ggplot2 line type</span>
</span><span class='line'>d <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">data.frame</span><span class="p">(</span>lt<span class="o">=</span><span class="kt">c</span><span class="p">(</span>‘blank’<span class="p">,</span> ‘solid’<span class="p">,</span> ‘dashed’<span class="p">,</span> ‘dotted’<span class="p">,</span> ‘dotdash’<span class="p">,</span> ‘longdash’<span class="p">,</span> ‘twodash’<span class="p">,</span> ‘<span class="m">1</span><span class="bp">F</span>’<span class="p">,</span> ‘F1’<span class="p">,</span> ‘<span class="m">4</span>C88C488’<span class="p">,</span> ‘<span class="m">12345678</span>’<span class="p">))</span>
</span><span class='line'>ggplot<span class="p">()</span> <span class="o">+</span>
</span><span class='line'>  scale_x_continuous<span class="p">(</span>name<span class="o">=</span>’’<span class="p">,</span> limits<span class="o">=</span><span class="kt">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> breaks<span class="o">=</span><span class="kc">NULL</span><span class="p">)</span> <span class="o">+</span>
</span><span class='line'>  scale_y_discrete<span class="p">(</span>name<span class="o">=</span>’linetype’<span class="p">)</span> <span class="o">+</span>
</span><span class='line'>  scale_linetype_identity<span class="p">()</span> <span class="o">+</span>
</span><span class='line'>  geom_segment<span class="p">(</span>data<span class="o">=</span>d<span class="p">,</span> mapping<span class="o">=</span>aes<span class="p">(</span>x<span class="o">=</span><span class="m">0</span><span class="p">,</span> xend<span class="o">=</span><span class="m">1</span><span class="p">,</span> y<span class="o">=</span>lt<span class="p">,</span> yend<span class="o">=</span>lt<span class="p">,</span> linetype<span class="o">=</span>lt<span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code class="language-r">geom_text()</code>: to add text. Set <code>parse = TRUE</code> to use expression and greek letters.</p>

<p><code class="language-r">scale_fill_discrete(..., values)</code>: change labels. <code class="language-r">name</code> to reset label names, <code class="language-r">labels</code> to reset labels.</p>

<p><code class="language-r">scale_shape_manual(..., values)</code>: change the shape of points.</p>

<p><code class="language-r">scale_linetype_manual(..., values)</code>: change the types of lines. line referring <a href="http://www.cookbook-r.com/Graphs/Shapes_and_line_types/">R plot</a>.<code>name</code>, <code>value</code>, <code>labels</code> are used to change value.</p>

<p><code class="language-r">scale_color_manual</code> is used for change the colors. Please refer to <a href="http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/">Useful color palette</a>, and <a href="http://blog.ggplot2.org/post/24607351280/choosing-colour-palettes-part-ii-educated-choices">Introduction of ggplot2 colors</a>. The default ggplot2 colors are generated from the “<em>scales</em>” package, for example the default “hue pallet” could be view as <code class="language-r">show_col(hue_pal(h = c(0, 360) + 15, c = 100, l = 65, h.start = 0, direction = 1)(9))</code></p>

<p><code class="language-r">scale_fill_manual(..., alues)</code> to change filled colors.</p>

<p><code class="language-r">theme</code> is used for exact control. <code>legend.position='none'</code> to remove the side legend.</p>

<h2 id="save-plot">2. Save plot</h2>

<p>The function <code class="language-r">ggsave()</code> is used to save the screen plot to file. <code class="language-r">print()</code> is also applied like:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>pdf<span class="p">(</span>‘testfile.pdf’<span class="p">)</span>
</span><span class='line'>q <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> ggplot<span class="p">()</span>
</span><span class='line'><span class="kp">print</span><span class="p">(</span><span class="kp">q</span><span class="p">)</span>
</span><span class='line'>dev.off<span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="other-issues">3. Other issues</h2>

<h3 id="plot-mutiple-ggplot2">3.1 Plot mutiple ggplot2</h3>

<p>Use <span style="color: blue">gridExtra</span> package to plot multiple ggplot2 figures in the one figure. </p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># example</span>
</span><span class='line'><span class="kn">require</span><span class="p">(</span>‘gridExtra’<span class="p">)</span>
</span><span class='line'><span class="c1"># save ggplot object into a list like “plotList”</span>
</span><span class='line'><span class="kp">do.call</span><span class="p">(</span>grid.arrange<span class="p">,</span> plotList<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li><a href="http://directlabels.r-forge.r-project.org/examples.html">Better labels</a></li>
  <li><a href="http://docs.ggplot2.org/current/">ggplot2 doc</a></li>
  <li><a href="http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/#working-with-colors">ggplot2 cheatsheet</a></li>
</ul>

<h3 id="section">更新记录</h3>

<p>2014年8月28日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R包制作和roxygen2使用说明]]></title>
    <link href="http://yulongniu.github.io/blog/2012/05/29/r-package-and-roxygen2/"/>
    <updated>2012-05-29T19:46:59-04:00</updated>
    <id>http://yulongniu.github.io/blog/2012/05/29/r-package-and-roxygen2</id>
    <content type="html"><![CDATA[<p>查看创建R包的各种细节，权威的文献是<a href="http://cran.r-project.org/doc/manuals/r-release/R-exts.html">Writing R Extensions</a>。</p>

<h2 id="r">1. 创建R包目录</h2>

<p>像盖房子一样，创建R包需要先搭建一个骨架，这个骨架往往是固定的，即一些文件夹（如<code>R</code>，<code>man</code>等）和文件（如<code>DESCRIPTION</code>，<code>NAMESPACE</code>）是必须的，而另外一些则可选择性添加。一个典型的R包目录,比如<span style="color: blue">Biobase</span>包，如下图：</p>

<!--more-->

<p><img class="middle" src="/images/r_catalog.png" width="350" height="300" title="‘Biobase catalog #1’ ‘a snap of Biobase catalog’" ></p>

<h3 id="description">1.1 <code>DESCRIPTION</code>文件</h3>

<p>一个纯文本ASCII文件，其中Package, Version, License, Description, Title, Author和Maintainer是必备条目，一个例子<span style="color: blue">knitr</span>包的<code>DESCRIPTION</code>文件：</p>

<ul>
  <li>
    <p>Package：由字母、数字和“点”构成的，至少含有两个字符，第一个必须是字母，结束不能用“点”（这也是包名称的命名规范）。</p>
  </li>
  <li>
    <p>Version：版本号，经典的命名方式比如0.1-0。</p>
  </li>
  <li>
    <p>License：GPL。</p>
  </li>
  <li>
    <p>Description：一段话描述包主要的功能。</p>
  </li>
  <li>
    <p>Title：包的一句话解释。</p>
  </li>
  <li>
    <p>Author和Maintainer：包的作者和维护者，姓+名 （比如Karl Pearson ）。也可以使使用Author@R描述作者，使用R函数<code class="language-r">person()</code>，其中变量<code>role</code>的选项<code>aut</code>表示author，<code>cre</code>表示creator（维护者），<code>ctb</code>表示contributor。一个例子：</p>
  </li>
</ul>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kt">c</span><span class="p">(</span>person<span class="p">(</span>“Hadley”<span class="p">,</span> “Wickham”<span class="p">,</span> email <span class="o">=</span> “hadley<span class="o">@</span>rice.edu”<span class="p">,</span> role <span class="o">=</span>”ctb”<span class="p">),</span><span class="o">&lt;</span>br <span class="o">/&gt;</span>
</span><span class='line'>person<span class="p">(</span>“Yihui”<span class="p">,</span> “Xie”<span class="p">,</span> email <span class="o">=</span> “xie<span class="o">@</span>yihui.name”<span class="p">,</span> role <span class="o">=</span> <span class="kt">c</span><span class="p">(</span>“aut”<span class="p">,</span> “cre”<span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li>
    <p>Date（可选）：当前版本包日期，格式yyyy-mm-dd。</p>
  </li>
  <li>
    <p>Depends（可选）：依赖的R环境版本和包名称，比如 <code>R (&gt;= 2.14.1)</code>。</p>
  </li>
</ul>

<p><span style="color: blue">注意：</span></p>

<blockquote>
  <ol>
    <li>
      <p>加上版本号，没有版本号等于没用，因为版本之间可能差异很大；</p>
    </li>
    <li>
      <p>对于<span style="color: blue">base</span>等这样的包就不用写了，因为是必然依赖的，同时也是R启动自动载入的。对于依赖的包名称，在R 2.14.0之后完全没有必要写，因为从这个版本后，所有包都有<code>NAMESPACE</code>，直接使用<code>Imports</code>就可以了。</p>
    </li>
  </ol>
</blockquote>

<ul>
  <li>
    <p>Imports（可选）：如果只是使用某些包中类、方法或者（一般）函数，而不用完全载入包，可以在此栏列出包的名称，最好加上版本号（在<code class="language-bash">R CMD check</code>会检查版本）。在代码中，引用其他包的namespace可以使用<code>::</code>或者<code>:::</code>操作符。与之对应的，需要在<code>NAMESPACE</code>文件中指明引用（见后）。</p>
  </li>
  <li>
    <p>Suggests（可选）：如果只是在帮助文档的<code>examples</code>，<code>tests</code>或者vignettes中用到了一些包，那么没有必要“依赖”或者“引用”，只用“建议”安装即可。版本号同样也要加上，在<code class="language-bash">R CMD check</code>时会用到。当然，我们要考虑到如果读者也想重现一下<code class="language-bash">examples/tests/vignettes</code>的例子，最好使用<code class="languag-r">if(require(pkgname)))</code>的条件句控制：<code class="languag-r">TRUE</code>执行，<code class="languag-r">FALSE</code>返回错误。</p>
  </li>
  <li>
    <p>Enhances（可选）：这个条目中的包可以被这个正在创建的包“增强”功能，比如我们创建的这个包为（对列表中的包）提供了更好的方法、更优秀的处理手段等。</p>
  </li>
  <li>
    <p>URL（可选）：一系列相关的网址，使用“逗号”或者空格隔开。链接可能是作者的主页、包的补充材料等。</p>
  </li>
  <li>
    <p>BugReports（可选）：一个网址，用于提交bug，代替了向作者发邮件。一个好的想法是使用<a href="https://github.com/">Github</a>，在项目的issures版块提交bug。</p>
  </li>
  <li>
    <p>Collate（可选）：看不懂。</p>
  </li>
  <li>
    <p>KeepSource（可选）：逻辑值，设定为<code class="languag-r">TRUE</code>，表示包是源码。</p>
  </li>
  <li>
    <p>ByteCompile（可选）：逻辑值，目前默认设置为否；如果性能确实可以得到提升，可以选择<code class="languag-r">TRUE</code>，但这可能增加安装时间和体积。</p>
  </li>
  <li>
    <p>BuildVignettes（可选）：如果设定位<code class="languag-r">FALSE</code>，<code class="languag-bash">R CMD build</code>不会重新编辑vignette，同时<code class="languag-bash">R CMD check</code>也不会检查。</p>
  </li>
</ul>

<h3 id="section">1.2 包目录下的各种文件夹说明</h3>

<ul>
  <li>
    <p>R文件夹：这个文件夹下放置用R语言写成的源代码，文件最好使用后缀<code>*.R</code>。</p>
  </li>
  <li>
    <p>man文件夹：man文件夹下放置<code>*.Rd</code>结尾的文档，这写文档详细描述的函数的用途。如果使用roxygen2，就不需要建立这个文件夹。</p>
  </li>
  <li>
    <p>src文件夹：放置用其他语言写成的代码，比如C/C++/Fortran等。</p>
  </li>
  <li>
    <p>data文件夹：放置一些data文件，比如R代码、表格（<code>*txt</code>/<code>*.tab</code>/<code>*.csv</code>）文件或者是用<code class="language-r">save()</code>函数保存的镜像（<code>*.RData</code>/<code>*.rda</code>）。这些文件必须是“自给自足”的，即不用调用包也能使用这些data。如果这些data比较大，可以将其压缩为<code>*.gzip</code>/<code>*.bzip2</code>/<code>*.xz</code>格式，或者在保存镜像时，使用<code class="language-r">save(, compress = TRUE)</code>。这些方法可以有效地减少包的体积和安装时间，以方便用户使用。</p>
  </li>
  <li>
    <p>demo文件夹：放置一些包的示例，通过<code>demo()</code>函数访问。（需要有一个00Index文件？不能自动生成？）</p>
  </li>
  <li>
    <p>exec文件夹：放置脚本文件比如shell、Perl、Python、Tcl等。</p>
  </li>
  <li>
    <p>inst文件夹：包在编译安装中，会将这个文件下的文件放入包的根目录下，所以可以放包的更新文件NEWS（或者CHANGELOG）文件、用于引用的CITATION文件等。还有很重要的子文件夹是doc，vignette文件就放在此处，格式为*.Rnw，这个文件会进一步被编程成LaTeX文件，最后生成常见的PDF文档。现在Swear过时了，用<span style="color: blue">knitr</span>吧。</p>
  </li>
</ul>

<h2 id="namespace">2. <code>NAMESPACE</code>文件</h2>

<h3 id="section-1">2.1 文件说明</h3>

<p><code>NAMESPACE</code>文件非常重要，因为它指明哪些函数是“输出（export）”给用户使用，哪些又是从其他包中“输入（import）”的。如果作者没有指明这个文件，那么在创建包时会被自动创建，此时所有的对象都被输出，在<code>Imports</code>和<code>Depends</code>下的包全部被输入。</p>

<p><strong>“输出”格式</strong>：<code class="language-r">export(f, g)</code>，其中<code class="language-r">f</code>和<code class="language-r">g</code>是变量名，一般不用引号括起。也可以使用正则表达式批量输出，比如 <code class="language-r">exportPattern("^[^\\.]")</code>。</p>

<p><strong>“输入”格式</strong>：<code class="language-r">import(for, bar)</code>，其中<code class="language-r">for</code>和<code class="language-r">bar</code>是包名称，这样做会导致<code class="language-r">for</code>和<code class="language-r">bar</code>中所有的输出对象都被引用。如果我们只想引用其中的某几个对象， 可以使用<code class="language-r">importFrom(foo, f, g)</code>，其中<code class="language-r">f</code>和<code class="language-r">g</code>是<code class="language-r">foo</code>包的变量名。<span style="color: blue">Base</span>包的命名空间被默认引用。当然，也可以输出其他包的变量，前提是这些变量需要先被输入。</p>

<h3 id="s3">2.2 S3类</h3>

<p><code class="language-r">S3method(Mymethod, Myclass)</code></p>

<h3 id="s4">2.3 S4类</h3>

<p><strong>“输出”格式</strong>：如果创建的S4类需要被外部调用，使用<code class="language-r">exportClasses(Myclass1, Myclass2)</code>，同样可以使用<code class="language-r">exportClassPattern()</code>批量输出。对于S4，输出“方法（methods）”也会输出“泛函（generic）”，输出泛函同样也会输出方法。如果一个方法，在要创建的包中没有找到对应的方法，有两种可能的情况：</p>

<blockquote>
  <ol>
    <li>
      <p>泛函已经从别的包中输入，比如<code class="language-r">importMethods()</code>；</p>
    </li>
    <li>
      <p>从别的包中输入函数，但被转换为默认方法，比如<code class="language-r">importFrom("graphics", plot)</code>，<code class="language-r">plot()</code>函数又被分配其他的方法，这种情况下输入自己包的<code class="language-r">plot()</code>函数，使用<code class="language-r">exportMethods(plot)</code>。</p>
    </li>
  </ol>
</blockquote>

<p><strong>“输入”格式</strong>：输入某个包的全部类或者特定的类，<code class="language-r">ImportClasses(pkg)</code>或者<code class="language-r">ImportClassesFrom(pkg, class1)</code>；输入某个包全部方法或者特定方法，<code class="language-r">ImportMethods(pkg)</code>或者<code class="language-r">ImportMethodsFrom(pkg, method1)</code>。</p>

<p><span style="color: blue">stats4</span>给出的例子非常好，R 2.15.0之后，对隐式泛函要求严格，必须先输入显示函数：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>  export<span class="p">(</span>mle<span class="p">)</span>
</span><span class='line'>  importFrom<span class="p">(</span>“graphics”<span class="p">,</span> plot<span class="p">)</span>
</span><span class='line'>  importFrom<span class="p">(</span>“stats”<span class="p">,</span> optim<span class="p">,</span> qchisq<span class="p">)</span>
</span><span class='line'>  <span class="c1">## For these, we define methods or (AIC, BIC, nobs) an implicit generic: </span>
</span><span class='line'>  importFrom<span class="p">(</span>“stats”<span class="p">,</span> AIC<span class="p">,</span> BIC<span class="p">,</span> coef<span class="p">,</span> confint<span class="p">,</span> logLik<span class="p">,</span> nobs<span class="p">,</span> profile<span class="p">,</span> update<span class="p">,</span> vcov<span class="p">)</span>   exportClasses<span class="p">(</span>mle<span class="p">,</span> profile.mle<span class="p">,</span> summary.mle<span class="p">)</span>
</span><span class='line'>  <span class="c1">## All methods for imported generics: </span>
</span><span class='line'>  exportMethods<span class="p">(</span>coef<span class="p">,</span> confint<span class="p">,</span> logLik<span class="p">,</span> plot<span class="p">,</span> profile<span class="p">,</span> <span class="kp">summary</span><span class="p">,</span> show<span class="p">,</span> update<span class="p">,</span> vcov<span class="p">)</span>
</span><span class='line'>  <span class="c1">## implicit generics which do not have any methods here </span>
</span><span class='line'>  export<span class="p">(</span>AIC<span class="p">,</span> BIC<span class="p">,</span> nobs<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="r-1">3. 书写R函数帮助文档</h2>

<p>书写函数文档的利器当属Emacs+ESS+<span style="color: blue">roxygen2</span>包。Emacs+ESS搭建了一个非常棒的统计学软件（R、SAS、S-Plus等）的代码编辑和运行环境，从ESS命名Emacs Speaks Statistics上就可以感受到它外漏的霸气。而<a href="http://roxygen.org/">roxygen2</a>是R的一个包，仿照Doxygen构建的工具，实现了文档和源码用一个文件共同管理的想法。</p>

<p>这个想法相当棒：</p>

<blockquote>
  <ol>
    <li>
      <p>在写代码时，方便“就地”编写文档（函数功能、参数解释、实现功能、注意事项、依赖关系和例子等）；</p>
    </li>
    <li>
      <p>在源码修改时，及时地更新文档。</p>
    </li>
  </ol>
</blockquote>

<p>对于编辑R包来说，对应的文档是<code>*.Rd</code>（R documentation）格式的文件，以下是一个框架示意图：</p>

<p><img class="middle" src="/images/r_rd.png" width="600" height="600" title="‘Rd file #1’ ‘a snap of Rd file framework’" ></p>

<h3 id="span-stylecolor-blueroxygen2span">3.1 <span style="color: blue">roxygen2</span>使用注释</h3>

<ul>
  <li>
    <p><code>@title</code>：文档标题，通常是函数名缩写（比如首字母缩写）的解释。出现在该函数文档的标题位置和检索（index）目录。</p>
  </li>
  <li>
    <p><code>@aliases</code>：函数别名。这个函数的别名，如果使用，在HTML帮助文档中将出现这个别名，链接的文档还是原来函数文档；同样，<code class="language-r">?“别名”</code>也能调出帮助文件。具体参考<span style="color: blue">stats</span>包中，“Normal”是<code class="language-r">dnorm()</code>，<code class="language-r">pnorm()</code>，<code class="language-r">qnorm()</code>，<code class="language-r">rnorm()</code>三个函数的别名。</p>
  </li>
  <li>
    <p><code>@description</code>：描述，对函数进行稍微详细的描述，可以讲解函数的功能，不能有空行。出现在文档开始位置。</p>
  </li>
  <li>
    <p><code>@details</code>：函数的具体描述，啰嗦各种细节，比如在运行过程中的注意事项、输入结果解释、运用的公式等。</p>
  </li>
  <li>
    <p><code>@param</code>：各个变量（argument）的解释。</p>
  </li>
  <li>
    <p><code>@inheritParams</code>：用于需要重复解释的变量，防止过多“剪切”“复制”。比如一些变量已经在foo1解释了，而foo2需要用foo1的一些变量，就可以使用这个字段。这里的foo1可以是当前包的函数，也可以是其他包函数，比如pkg::foo1。</p>
  </li>
  <li>
    <p><code>@return</code>：函数返回的结果。如果想具体解释返回的结果，格式<code class="language-html">\item{name a}{description a}</code>。</p>
  </li>
  <li>
    <p><code>@author</code>：作者，加上作者邮件地址，格式：<code class="language-html">\email{MrR@@stat.cn}</code>。</p>
  </li>
  <li>
    <p><code>@examples</code>：给出函数使用的例子。例子非常重要，很多用户对例子的关注要远远高于其他的部分，啰啰嗦嗦说了一大堆，不如来两个漂亮的例子。我认为好的例子应该包括（但不限于）：</p>
  </li>
</ul>

<blockquote>
  <ul>
    <li>
      <p>重要参数的演示；</p>
    </li>
    <li>
      <p>参数之间的协调控制；</p>
    </li>
    <li>
      <p>特殊参数（用语言描述困难）的演示；</p>
    </li>
    <li>
      <p>可能的错误使用；</p>
    </li>
    <li>
      <p>来几张漂亮图。</p>
    </li>
  </ul>
</blockquote>

<p>这些例子可以直接使用R代码编排、“#”注释、多行也问题。这些例子可以用函数<code class="language-r">example()</code>运行。如果不想运行某些例子（比如演示错误使用等），格式：<code class="language-html">\dontrun{Rcode}</code>。如果例子中依赖其他包，使用<code class="language-r">if(require(pkg)){ }</code>格式。</p>

<p>也可以在包的根目录下建立文件，通过<code class="language-r">@example path/relative/to/packge/root</code>引用。如果函数不需要输出，则不用添加<code>@example</code>，否则在R包检查中会报错。</p>

<ul>
  <li>
    <p><code>@references</code>： 参考文献，比如算法出处、函数编写思路、例子的参考文献等。如果想多行出现，只需再用一次<code>@references</code>即可。如果要网址，格式为<code class="language-html">\url{http://www.google.com}</code>。</p>
  </li>
  <li>
    <p><code>@seealso</code>：其他可供参考或者有联系的对象，并说明可供参考的原因。如果想在HTML中有超链接，格式为<code class="language-html">\code{\link{function}}</code>。</p>
  </li>
  <li>
    <p><code>@family</code>：为<code>@seealso</code>提供了另外一种解决方法，将需要相互引用函数编排成一个“家族（family）”，之后同一个家族的函数自动出现在see-also中。同一个函数可以属于多个不同家族。</p>
  </li>
  <li>
    <p><code>@note</code>：添加一些注释信息。</p>
  </li>
  <li>
    <p><code>@section</code>：用户自定义一个注释区（包括名称和内容）。</p>
  </li>
  <li>
    <p><code>@rdname</code>：解决了多个文档合并的问题。可以将多个函数标记为一个共同的<code class="language-html">@rdname（override name）</code>，这样在最后的HTML文档中，就可以将多个功能相似或者一个系列的函数总结在一个文档中。如果使用了<code>@rdname</code>，那么<code>@description</code>和<code>@details</code>需要在第一个函数中全部写完，<code>@title</code>也只在第一个函数中出现。</p>
  </li>
  <li>
    <p><code>@keywords internal</code>：隐藏函数，不在help文档中显示，在其他包中可以正常使用。</p>
  </li>
  <li>
    <p><code>@aliases</code>：命名一个函数的别名，将指向同一个文档；<code>@family</code>：如果几个函数共用一个family name，它们将在seealso中交叉链接；<code>@seealso</code>：其他函数的超链接；<code>@rdname</code>：将多个函数合并在一个文档中。这些标记用于在HTML帮助文档中，可能出现这些超级链接或者文档合并。</p>
  </li>
  <li>
    <p>对data文件夹下的R data file进行注释。R data file通常以.RData或者.rda作为文件名扩展。<a href="http://r-pkgs.had.co.nz/data.html#documenting-data">参考数据注释</a>。</p>
  </li>
</ul>

<h2 id="vignittes">4. 写vignittes文件</h2>

<p>推荐使用<a href="https://github.com/yihui/knitr"><span style="color: blue">knitr</span>包</a>。</p>

<h2 id="section-2">5. 检查和压缩包</h2>

<p>在提交代码之前，首先需要检查自己的代码，运行命名</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>R CMD check Mypkg&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>之后，因为R源码包（source package）的发布都是采用压缩文件（<code>*.tar.gz</code>）形式，所以需要将源代码打包，方法是运行命令</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>R CMD build Mypkg&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>当然，有时我们需要发布二进制包（binary packages）,操作方法是</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>R CMD INSTALL –build Mypkg
</span></code></pre></td></tr></table></div></figure></p>

<p>具体执行过程是：首先，在默认目录树下安装包；之后，将成功安装的包转化成（平台依赖的）二进制代码，再将二进制代码打包输出。所以，默认安装目录要有“可写”权限，如果没有，执行<code class="language-bash">R CMD INSTALL -l location --build Mypkg</code>，指定一个“可写”权限目录（location）安装。</p>

<p>CRAN很体贴地考虑了Window以外平台的作者，通过<a href="http://win-builder.r-project.org/">网站</a>上传源码包，之后编译成window平台二进制包。</p>

<p>最后是提交代码，依次执行以下命名或者操作:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>R CMD build Mypkg
</span><span class='line'><span class="c"># 检查例子（example）、检查（test）和文档输出，如果有报错或者警告，需要仔细阅读提示，原则上消除所有报错和警告</span>
</span><span class='line'>R CMD check –as-cran
</span></code></pre></td></tr></table></div></figure></p>

<p>使用 ftp://CRAN.R-project.org/incoming/ （用户名： anonymous；密码：自己邮箱地址）上传自己的包，并向CRAN@R-project.org发邮件通知自己上传了包（名称、版本等）。</p>

<h2 id="section-3">注意事项</h2>

<h3 id="section-4">1. 命名</h3>

<p>给自己的包起一个漂亮的名字，注意大小写，因为一些操作系统可能对大小写不敏感。因此，为了平台兼容性，包的命名尽量不要用大小写区分；不仅如此，在包源代码文件夹下，文件命名也要注意这个问题。起了名字之后，最好到<a href="http://cran.r-project.org/web/packages/available_packages_by_name.html">R包列表</a>去看看，检查下自己包的名字是否与其他人的冲突。</p>

<h3 id="section-5">2. 名称符号</h3>

<blockquote>
  <ul>
    <li>
      <p>文件名中不允许出现如下符号<code>"</code>、 <code>*</code>、 <code>:</code>、<code>/</code>、<code>&lt;&lt;/font&gt;</code>、 <code>&gt;</code>、 <code>?</code>、 <code>\</code> 和 <code>|</code>；</p>
    </li>
    <li>
      <p>文件命名使用的字符包括 <code>A-Za-z0-9._!#$%&amp;+,;=@^(){}'[]</code>，但是不推荐使用 <code>(){}'[]$</code>；</p>
    </li>
    <li>
      <p><code>*.Rd</code>文件可以包括URL，但必须是ASCII，不能出现<code>%</code>。</p>
    </li>
  </ul>
</blockquote>

<h3 id="gnu">3. GNU版本号</h3>

<p>GNU版本命名规则：Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]]。</p>

<h3 id="namespace-1">4. 关于“命名空间（namespace）”的讨论</h3>

<p>在制作R包时候，有两种方法可以引用其他包的变量：</p>

<blockquote>
  <p><strong>第一种方法</strong>：只需要在<code>NAMESPACE</code>中声明引用<code>import()</code>或者<code>importFrom()</code>，同时在<code>DESCRIPTION</code>中<code>Imports</code>添加需引用的包即可。这样，在编写代码时不用加上<code class="language-r">require(pkg)</code>之类载入包的语句。在安装过程中，通过引用可以很方便地获取其他包的变量（比如函数），因而避免了载入整个包；对应的，这很大程度上保证了代码的简洁，一个非常不错的设计。</p>

  <p>这里需要再多啰嗦两句，<code class="language-r">require(pkg)</code>和<code>NAMESPACE</code>声明<code>import()</code>有不同，前一个函数载入包，并将其添加（attach）到搜索目录下；而后一个则只载入包，并有添加搜索目录。这有两点好处：1. 用户只将注意力集中在载入的包，如果import()的包中有与载入包命名冲突的函数，只会调用载入的包；2. 设计简洁。</p>

  <p><strong>第二种方法</strong>：也可以通过操作符<code>::</code>和<code>:::</code>获得命名空间的“显变量（exported variables）和“隐变量（internal variables）”。需要注意的是，不推荐使用<code>:::</code>，这可能暗示这一个自己设计不足。因为“隐变量”之所以要隐藏起来，作者是有着充分的考虑；而且，这些“隐变量”可能随着作者对包的更新而改名。可以使用函数<code class="language-r">loadedNamespaces()</code>查看已经载入的命名空间，<code>unloadNamespace(name)</code>卸载命名空间。</p>
</blockquote>

<p>对于这两种方法，不推荐第二种方法，原因很简单：要多写包名+两个冒号。第二中方法适合在终端操作时，遇到函数名称冲突（见后）使用。</p>

<p>如果变量命名有冲突，R将采取“就近”策略应对，考虑两种特殊情况:</p>

<blockquote>
  <ol>
    <li>
      <p>假定自己包的名称是Mypkg，如果在<code>NAMESPACE</code>中声明输入<code>export(f)</code>，但是又从另外一包foo输入同名函数f，比如<code>importFrom(foo, f)</code>。这时，“就近”策略发挥作用，即在载入包Mypkg时，默认f函数是自己编写的，即声明输出的函数f，而不是foo中的f函数。总体而言，命名空间的查找顺序是：<strong>包的命名空间 –&gt; import声明 –&gt; Base包的命名空间 –&gt; 最后是搜索路径</strong>。</p>
    </li>
    <li>
      <p>假定pkg1和pkg2两个包，都有命名空间，而且输出同名函数f。这是，R会怎么处理呢？同样是“就近”原则，哪个包后载入，先用哪个包的函数f。不过，如果函数命名有冲突，后载入的包会给出一个警告“marsked from package: ***”。</p>
    </li>
  </ol>
</blockquote>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="https://github.com/yihui/knitr/blob/master/DESCRIPTION">knitr包的DESCRIPTION文件</a></p>
  </li>
  <li>
    <p>命名空间讨论：<a href="https://github.com/hadley/devtools/wiki/Namespaces">1</a>、<a href="http://www.r-bloggers.com/namespaces-and-name-conflicts/">2</a>、<a href="http://r-pkgs.had.co.nz/namespace.html">3</a></p>
  </li>
  <li>
    <p>其他帮助文档：<a href="http://cos.name/2011/05/write-r-packages-like-a-ninja/">1</a>、<a href="http://yihui.name/knitr/">2</a>、<a href="http://cran.r-project.org/doc/manuals/R-exts.html#Dynamic-pages">3</a>、<a href="http://sjp.co.nz/posts/emacs-ess-knitr/">4</a>、<a href="https://github.com/yihui/knitr/issues/252">5</a>、<a href="http://cos.name/cn/topic/106644">6</a></p>
  </li>
</ul>

<h3 id="section-6">更新记录</h3>

<p>2014年9月5日</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R小技巧集锦]]></title>
    <link href="http://yulongniu.github.io/blog/2012/05/02/r-tricks/"/>
    <updated>2012-05-02T22:17:02-04:00</updated>
    <id>http://yulongniu.github.io/blog/2012/05/02/r-tricks</id>
    <content type="html"><![CDATA[<p>持续更新R语言编程中的一些小技巧，包括一些易错点。
但是，需要注意的，<strong>一旦需要使用一些非常稀奇古怪的技巧时，可以尝试反思是否是自己数据结构或者算法出了问题。</strong></p>

<h2 id="iflanguage-relselanguage-r">1. <code class="language-r">if</code>爱你，<code class="language-r">else</code>就要和你在一起，又要给你一些距离</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kr">if</span> <span class="p">(</span>con<span class="p">){</span>
</span><span class='line'>  expr
</span><span class='line'>  <span class="p">}</span> <span class="kp">else</span><span class="p">{</span>
</span><span class='line'>  expr2
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code class="language-r">if...else..</code>结构中，<code class="language-r">}</code>与<code class="language-r">else</code>必须在同一行。</p>

<!--more-->

<p>简易形式（<span style="color: blue">不推荐</span>）：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># else不能与expr在同一行</span>
</span><span class='line'><span class="kr">if</span> <span class="p">(</span>con<span class="p">)</span> expr
</span><span class='line'><span class="kr">else</span> expr2
</span></code></pre></td></tr></table></div></figure></p>

<p>建议将所有<code class="language-r">if ... else ...</code>结构写成第一种形式，如果没有<code class="language-r">else</code>，用<code class="language-r">else {}</code>代替。</p>

<h2 id="nulllanguage-rnulllanguage-rnulllanguage-rr">2. <code class="language-r">NULL</code>是空，<code class="language-r">NULL</code>是气，<code class="language-r">NULL</code>在R中就是空气。</h2>

<p>如果表达式（expression）或者函数（function）的值没有定义，那么将返回<code class="language-r">NULL</code>。在R中，<code class="language-r">NULL</code>与很多对象合并在一起时，都被忽略掉。比如以下例子：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># NULL is neglected in vector</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kt">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="kc">NULL</span><span class="p">,</span> <span class="kc">FALSE</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">1</span> <span class="kc">NA</span>  <span class="m">0</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>h1 id<span class="o">=</span><span class="s">&quot;also-in-matrix&quot;</span><span class="o">&gt;</span>also <span class="kr">in</span> <span class="kt">matrix</span><span class="o">&lt;/</span>h1<span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span>blockquote<span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span>p<span class="o">&gt;</span><span class="kt">matrix</span><span class="p">(</span><span class="kt">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="kc">NULL</span><span class="p">,</span> <span class="m">2</span><span class="p">),</span> <span class="kt">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">))</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">1</span>    <span class="m">2</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>   <span class="kc">NA</span>    <span class="m">1</span>
</span><span class='line'>警告信息：
</span><span class='line'>In <span class="kt">matrix</span><span class="p">(</span><span class="kt">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="kc">NULL</span><span class="p">,</span> <span class="m">2</span><span class="p">),</span> <span class="kt">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">))</span> <span class="o">:</span> 数据长度<span class="p">[</span><span class="m">3</span><span class="p">]</span>不是矩阵行数<span class="p">[</span><span class="m">2</span><span class="p">]</span>的整倍<span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span>blockquote<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>h1 id<span class="o">=</span><span class="s">&quot;also-in-list&quot;</span><span class="o">&gt;</span>also <span class="kr">in</span> <span class="kt">list</span><span class="o">&lt;/</span>h1<span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span>blockquote<span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span>p<span class="o">&gt;</span>tmp <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">list</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'>tmp<span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kc">NULL</span>
</span><span class='line'>tmp
</span><span class='line'><span class="p">[[</span><span class="m">1</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span>
</span><span class='line'>tmp<span class="p">[[</span><span class="m">1</span><span class="p">]]</span> <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kc">NULL</span>
</span><span class='line'>tmp
</span><span class='line'><span class="kt">list</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>
</blockquote>

<p>如果一定要将列表中的某个个元素赋值为NULL，可以使用list(NULL)，比如：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">list</span><span class="p">()</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp<span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">list</span><span class="p">(</span><span class="kc">NULL</span><span class="p">)</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp
</span><span class='line'><span class="p">[[</span><span class="m">1</span><span class="p">]]</span>
</span><span class='line'><span class="kc">NULL</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">is.null</span><span class="p">(</span>tmp<span class="p">[[</span><span class="m">1</span><span class="p">]])</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">TRUE</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="listlist">3. list不是万能的，但没有list是万万不能的</h2>

<p>列表（list）在R中是个全能选手、无所不“包”；list还是金箍棒，别看它丫的开始长度（<code class="language-r">length()</code>）短，之后想变长就变长，多长都行。</p>

<p>这暗示list可以这样用：在循环开始时，我们不知道会产生多少个元素，可以事先规定输出结果为<code class="language-r">a &lt;- list()</code>，之后赋值；甚至可以按照名字赋值，比如<code class="language-r">a$add &lt;- exprs</code>。</p>

<ul>
  <li>创建</li>
</ul>

<blockquote>
  <p>如果要创建一个长度为n的、每个元素都为<code class="language-r">NULL</code>的list，可以使用<code class="language-r">vector("list", n)</code>。</p>
</blockquote>

<ul>
  <li>插入</li>
</ul>

<blockquote>
  <p>如果要在list中插入元素，可以使用<code class="language-r">append(x, values, after = length(x))</code>函数。<code class="language-r">append()</code>函数原本是对vector设计的，但是list也能使用。</p>
</blockquote>

<ul>
  <li>取值</li>
</ul>

<blockquote>
  <p>对list进行取值，不能直接使用<code class="language-r">TRUE</code>/<code class="language-r">FALSE</code>向量，而是使用下标进行，可以使用<code class="language-r">which()</code>函数转换。</p>
</blockquote>

<h2 id="section">4. 创建“空”值很淡定，要么空来要么0</h2>

<p>如果要创建一个空的对象（对象的长度是0）很容易，比如：</p>

<ul>
  <li>创建一个长度为0的数值向量</li>
</ul>

<blockquote>
  <p><code class="language-r">numeric()</code>或者<code class="language-r">numeric(0)</code></p>

  <p><code class="language-r">character()</code>或者<code class="language-r">character(0)</code></p>

  <p><code class="language-r">integer()</code>或者<code class="language-r">integer(0)</code>可以起到同样的效果</p>

  <p><code class="language-r">factor()</code>创建一个长度为0的因子</p>

  <p><span style="color: blue">注意</span>：<code class="language-r">factor(0)</code>的长度是1</p>
</blockquote>

<ul>
  <li>创建一个长度为0的矩阵</li>
</ul>

<blockquote>
  <p><code>matrix(0, 0, 0)</code></p>

  <p><span style="color: blue">注意</span>：<code class="language-r">array()</code>创建的对象长度为1。</p>
</blockquote>

<ul>
  <li>创建一个长度为0的列表</li>
</ul>

<blockquote>
  <p><code class="language-r">list()</code></p>
</blockquote>

<ul>
  <li>创建一个长度为0的data.frame</li>
</ul>

<blockquote>
  <p><code class="language-r">data.frame()</code></p>
</blockquote>

<h2 id="dataframe">5. 对象转换要小心，data.frame是陷阱</h2>

<p>R中一些对象转换要格外小心，特别是牵扯到data.frame类型。以下是几个常见的陷阱：</p>

<h3 id="section-1">5.1 “字符型因子”转换为“数值型向量”</h3>

<p>需要先转成字符串向量过渡一下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kp">as.numeric</span><span class="p">(</span><span class="kp">as.character</span><span class="p">(</span>MyFactor<span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="dataframe-1">5.2 字符和数值因子混搭data.frame</h3>

<p>每一列是按照字符型因子保存。留意表面上是数值的一列，它非常危险，特别是排序。一个例子：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> a1 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">as.factor</span><span class="p">(</span><span class="kp">as.character</span><span class="p">(</span>a1<span class="p">))</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> a1
</span><span class='line'> <span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">5</span>  <span class="m">6</span>  <span class="m">7</span>  <span class="m">8</span>  <span class="m">9</span>  <span class="m">10</span> <span class="m">11</span> <span class="m">12</span> <span class="m">13</span> <span class="m">14</span> <span class="m">15</span>
</span><span class='line'>Levels<span class="o">:</span> <span class="m">10</span> <span class="m">11</span> <span class="m">12</span> <span class="m">13</span> <span class="m">14</span> <span class="m">15</span> <span class="m">5</span> <span class="m">6</span> <span class="m">7</span> <span class="m">8</span> <span class="m">9</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">sort</span><span class="p">(</span>a1<span class="p">)</span>
</span><span class='line'> <span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">10</span> <span class="m">11</span> <span class="m">12</span> <span class="m">13</span> <span class="m">14</span> <span class="m">15</span> <span class="m">5</span>  <span class="m">6</span>  <span class="m">7</span>  <span class="m">8</span>  <span class="m">9</span>
</span><span class='line'>Levels<span class="o">:</span> <span class="m">10</span> <span class="m">11</span> <span class="m">12</span> <span class="m">13</span> <span class="m">14</span> <span class="m">15</span> <span class="m">5</span> <span class="m">6</span> <span class="m">7</span> <span class="m">8</span> <span class="m">9</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="elselanguage-riflanguage-rswitchlanguage-r">6. 多个<code class="language-r">else</code>/<code class="language-r">if</code>别担心，<code class="language-r">switch()</code>函数来帮助</h2>

<p>如果需要在不同情况下，对变量进行不同的处理，自然会联想到使用多个多个<code class="language-r">else</code>/<code class="language-r">if</code>。如果<code class="language-r">else</code>/<code class="language-r">if</code>是用来处理的简单的赋值，可以使用<code class="language-r">switch(EXPR, ...)</code>函数。其中，<code class="language-r">EXPR</code>是一个表达式，生成一个数字或者字符串；接下来，使用生成的数字和字符串匹配<code class="language-r">...</code>中的内容。</p>

<p>所以，我们很容易想到，如果<code class="language-r">EXPR</code>生成的数字，则对应匹配<code class="language-r">...</code>的第几个元素，此时<code class="language-r">...</code>中的变量可以没有名字；如果是字符串，就会严格地匹配<code class="language-r">...</code>中相同名字的变量；如果<code class="language-r">EXPR</code>生成是字符串，<code class="language-r">...</code>中没有相匹配的变量名，则返回<code class="language-r">NULL</code>；如果<code class="language-r">...</code>中有一个“无名”变量（即没有对变量赋值），上一种情况下返回该无名变量，相当于最后一个<code class="language-r">else</code>。比如：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> a <span class="o">=</span> <span class="m">3</span><span class="p">,</span> b <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> aa <span class="o">=</span> ‘red’<span class="p">,</span> bb <span class="o">=</span> ‘blue’<span class="p">,</span> cc <span class="o">=</span> ‘yellow’<span class="p">,</span> ‘No value’<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “blue”
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span>‘aa’<span class="p">,</span> aa <span class="o">=</span> ‘red’<span class="p">,</span> bb <span class="o">=</span> ‘blue’<span class="p">,</span> cc <span class="o">=</span> ‘yellow’<span class="p">,</span> ‘No value’<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “red”
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span>‘dd’<span class="p">,</span> aa <span class="o">=</span> ‘red’<span class="p">,</span> bb <span class="o">=</span> ‘blue’<span class="p">,</span> cc <span class="o">=</span> ‘yellow’<span class="p">,</span> ‘No value’<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “No value”
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span>‘bb’<span class="p">,</span> aa <span class="o">=</span> ‘red’<span class="p">,</span> bb <span class="o">=</span> <span class="p">,</span> cc <span class="o">=</span> ‘yellow’<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “yellow”
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> aa <span class="o">=</span> ‘red’<span class="p">,</span> bb <span class="o">=</span> <span class="p">,</span> cc <span class="o">=</span> ‘yellow’<span class="p">)</span>
</span><span class='line'>Error<span class="o">:</span> empty alternative <span class="kr">in</span> <span class="kt">numeric</span> <span class="kr">switch</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">switch</span><span class="p">(</span>‘dd’<span class="p">,</span> aa <span class="o">=</span> ‘red’<span class="p">,</span> bb <span class="o">=</span> <span class="p">,</span> cc <span class="o">=</span> ‘yellow’<span class="p">,</span> ‘no’<span class="p">,</span> ‘value’<span class="p">)</span>
</span><span class='line'>Error<span class="o">:</span> duplicate <span class="kr">switch</span> defaults<span class="o">:</span> ‘“no”’ and ‘“value”’
</span></code></pre></td></tr></table></div></figure></p>

<p><span style="color: blue">注意</span>：</p>

<ul>
  <li>
    <p>如果<code class="language-r">EXPR</code>是数字，范围不能超过<code class="language-r">...</code>的长度。同时，虽然此时<code class="language-r">...</code>变量可以名字，但是有名字的变量必须有数值，不能学习以上例子中倒数第二种情况，否则会报错。</p>
  </li>
  <li>
    <p>如果<code class="language-r">EXPR</code>是字符串，那么会进行自动继承，即前者继承后者。</p>
  </li>
  <li>
    <p>虽然<code class="language-r">EXPR</code>是字符串情况可以自动继承，甚至继承一个无名变量，但是无名变量只能有一个。</p>
  </li>
  <li>
    <p>最后将<code>EXPR</code>明确写出，为了R的版本兼容。</p>
  </li>
</ul>

<p><strong>总结</strong>：
<code class="language-r">swich()</code>函数是一个好玩却又危险的函数，一个没有歧义的使用方法是：<code class="language-r">EXPR</code>明确写出，且返回字符串，<code class="language-r">...</code>中每一个变量都有确切的值，无名变量只有一个，比如：<code class="language-r">switch(EXPR='dd', aa = 'red', bb = 'blue', cc = 'yellow', 'no value')</code>。</p>

<h2 id="rdroplanguage-r">7. R取值有技巧，<code class="language-r">drop</code>选项巧帮助</h2>

<p>当对象是一个矩阵的时候，通常我们要获取其中一些元素。如果取出的正好是一行或者一列，此时，R会返回给我们一个向量，而不是矩阵。这会带来很大的麻烦，因为我们必须判断返回对象是向量，还是矩阵，才能继续下面的操作。此时，<code class="language-r">drop</code>可以帮助我们，如果设置<code class="language-r">drop = FALSE</code>，就会保持原样返回结果。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> b <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kt">matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> nrow <span class="o">=</span> <span class="m">2</span><span class="p">,</span> ncol <span class="o">=</span> <span class="m">3</span><span class="p">)</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> b
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span> <span class="p">[,</span><span class="m">3</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">1</span>    <span class="m">3</span>    <span class="m">5</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">2</span>    <span class="m">4</span>    <span class="m">6</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> b<span class="p">[,</span> <span class="m">3</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">5</span> <span class="m">6</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> b<span class="p">[,</span> <span class="m">3</span><span class="p">,</span> drop <span class="o">=</span> <span class="kc">FALSE</span><span class="p">]</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">5</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">6</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> b<span class="p">[</span><span class="m">1</span><span class="p">,</span> <span class="p">,</span> drop <span class="o">=</span> <span class="kc">FALSE</span><span class="p">]</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span> <span class="p">[,</span><span class="m">3</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">1</span>    <span class="m">3</span>    <span class="m">5</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="language-r--language-r-">8. <code class="language-r">|</code> 和 <code class="language-r">||</code> 有区别，返回向量与单值</h2>

<p>R中的逻辑运算符号有两组，<code class="language-r">|</code>或者<code class="language-r">||</code>（<code class="language-r">&amp;</code>或者<code class="language-r">&amp;&amp;</code>），看起来觉得有些多余。其实，这是为了R独特的“<strong>向量运算</strong>”考虑的。<code class="language-r">|</code>或者<code class="language-r">&amp;</code>首先考虑返回一个向量，而<code class="language-r">||</code>和<code class="language-r">&amp;&amp;</code>则只返回最后一个值。比如：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kt">c</span><span class="p">(</span><span class="kc">FALSE</span><span class="p">,</span> <span class="kc">TRUE</span><span class="p">)</span> <span class="o">|</span> <span class="kt">c</span><span class="p">(</span><span class="kc">FALSE</span><span class="p">,</span> <span class="kc">FALSE</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kt">c</span><span class="p">(</span><span class="kc">FALSE</span><span class="p">,</span> <span class="kc">TRUE</span><span class="p">)</span> <span class="o">||</span> <span class="kt">c</span><span class="p">(</span><span class="kc">FALSE</span><span class="p">,</span> <span class="kc">FALSE</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span>
</span></code></pre></td></tr></table></div></figure> </p>

<h2 id="section-2">9. 递归</h2>

<p>R在解释代码时，不支持尾递归优化，所以在R中不要写递归。</p>

<h2 id="r0language-rnalanguage-r">10. R图例空元素，<code class="language-r">0</code>和<code class="language-r">NA</code>来代替</h2>

<p>在R绘图的图例中，通常需要“线条”和“点”分开单独表示，这里用到<code class="language-r">0</code>和<code class="language-r">NA</code>的小技巧。如果在<code class="language-r">legend()</code>函数函数中，<code class="language-r">pch = NA</code>表示没有点，<code class="language-r">lty=0</code>表示没有线条。</p>

<h2 id="evallanguage-rparselanguage-r">11. 字符串转代码很容易，<code class="language-r">eval()</code>/<code class="language-r">parse()</code>很随意</h2>

<p>如果我们有一个字符字符串，现在需要将其转为可执行代码。方法如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> test1 <span class="o">=</span> ‘<span class="m">1</span><span class="o">:</span><span class="m">3</span>’
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> test1
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “<span class="m">1</span><span class="o">:</span><span class="m">3</span>”
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">eval</span><span class="p">(</span><span class="kp">parse</span><span class="p">(</span>text <span class="o">=</span> test1<span class="p">))</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="factorclanguage-r">12. factor如需换标签，<code class="language-r">c()</code>函数有妙招</h2>

<p>如果我们需要对一个factor的标签（label）进行转换，并且返回一个向量，有两种方法可以使用:</p>

<ul>
  <li>第一种方法，使用<code>c()</code>函数</li>
</ul>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp1 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">factor</span><span class="p">(</span><span class="kp">rep</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span> each <span class="o">=</span> <span class="m">3</span><span class="p">))</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp1
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">1</span> <span class="m">1</span> <span class="m">2</span> <span class="m">2</span> <span class="m">2</span> <span class="m">3</span> <span class="m">3</span> <span class="m">3</span>
</span><span class='line'>Levels<span class="o">:</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kt">c</span><span class="p">(</span><span class="kc">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">])[</span>tmp1<span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “a” “a” “a” “b” “b” “b” “<span class="kt">c</span>” “<span class="kt">c</span>” “<span class="kt">c</span>”
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li>第二种方法，先转换标签，之后再使用<code class="language-r">as.character()</code>函数。</li>
</ul>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp2 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">factor</span><span class="p">(</span>tmp1<span class="p">,</span> labels <span class="o">=</span> <span class="kc">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">])</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp2
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> a a a b b b <span class="kt">c</span> <span class="kt">c</span> <span class="kt">c</span>
</span><span class='line'>Levels<span class="o">:</span> a b <span class="kt">c</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">as.character</span><span class="p">(</span>tmp2<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “a” “a” “a” “b” “b” “b” “<span class="kt">c</span>” “<span class="kt">c</span>” “<span class="kt">c</span>”
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="section-3">13. 操作符也是函数，使用起来有妙招</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> “<span class="o">+</span>”<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> ‘<span class="o">&amp;</span>gt<span class="p">;</span>’<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp1 <span class="o">=</span> <span class="kt">list</span><span class="p">()</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kr">for</span><span class="p">(</span>i <span class="kr">in</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span>
</span><span class='line'>  tmp1<span class="p">[[</span>i<span class="p">]]</span> <span class="o">=</span> i<span class="o">:</span><span class="p">(</span>i<span class="m">+1</span><span class="p">)</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp1
</span><span class='line'><span class="p">[[</span><span class="m">1</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">2</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span> <span class="m">3</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">3</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3</span> <span class="m">4</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">4</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">4</span> <span class="m">5</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">5</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">5</span> <span class="m">6</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">6</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">6</span> <span class="m">7</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">7</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">7</span> <span class="m">8</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">8</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">8</span> <span class="m">9</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">9</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">9</span> <span class="m">10</span><span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;</span><span class="p">[[</span><span class="m">10</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">10</span> <span class="m">11</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">sapply</span><span class="p">(</span>tmp1<span class="p">,</span> ‘<span class="p">[[</span>’<span class="p">,</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'> <span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">2</span>  <span class="m">3</span>  <span class="m">4</span>  <span class="m">5</span>  <span class="m">6</span>  <span class="m">7</span>  <span class="m">8</span>  <span class="m">9</span> <span class="m">10</span> <span class="m">11</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>最后一个例子中，使用了<code class="language-r">[[</code>，巧妙地取得了第二个元素。</p>

<h2 id="tablequotelanguage-r">14. 输出table有引号，<code class="language-r">quote</code>参数来帮忙</h2>

<p>在使用<code class="language-r">write.table()</code>命令输入一个data.frame对象时候，输入文件会加引号。这时，设定<code class="language-r">quote</code>参数，<code class="language-r">write.table(..., quote = FALSE)</code>。</p>

<h2 id="identicallanguage-r">15. 比较两个元素<code class="language-r">identical()</code></h2>

<h2 id="listdocalllanguage-r">16. 压缩list用<code class="language-r">do.call()</code></h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kp">do.call</span><span class="p">(</span><span class="kp">rbind</span><span class="p">,</span> <span class="kt">list</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="splitlanguage-r">17. 分割数据使用<code class="language-r">split()</code></h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> test1 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kp">rep</span><span class="p">(</span><span class="kt">c</span><span class="p">(</span>‘a’<span class="p">,</span> ‘b’<span class="p">),</span> <span class="kt">c</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">4</span><span class="p">))</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> test1
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “a” “a” “a” “b” “b” “b” “b”
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">split</span><span class="p">(</span>test1<span class="p">,</span> <span class="kp">factor</span><span class="p">(</span>test1<span class="p">))</span>
</span><span class='line'><span class="o">$</span>a
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “a” “a” “a”<span class="o">&lt;/</span>p<span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>p<span class="o">&gt;$</span>b
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “b” “b” “b” “b”
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="txtsinklanguage-r">18. 输出txt文档找<code class="language-r">sink()</code></h2>

<p><code>sink()</code>可以将R的对象输出到外部文档中，第一遍可能包括了系统信息，需要输出第二遍。一个典型的流程如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">sink</span><span class="p">(</span>filename<span class="p">)</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> test1
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">sink</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="rfor">19. R中循环for妙用</h2>

<p>R中for循环中，需要指定一个计数器，比如i in 1:10之类。R可以直接将一个向量用于计数，返回向量中对应的值，比如:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> tmp1 <span class="o">&amp;</span>lt<span class="p">;</span><span class="o">-</span> <span class="kc">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span>
</span><span class='line'><span class="kr">for</span> <span class="p">(</span>i <span class="kr">in</span> tmp1<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kp">print</span><span class="p">(</span>i<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="p">[</span><span class="m">1</span><span class="p">]</span> “a”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “b”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “<span class="kt">c</span>”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “d”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “e”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “f”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “g”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “h”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “i”
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “j”
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="reducelanguage-r">20. 多个序列取交集并集用<code class="language-r">Reduce()</code></h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&amp;</span>gt<span class="p">;</span> <span class="kp">Reduce</span><span class="p">(</span><span class="kp">union</span><span class="p">,</span> <span class="kt">list</span><span class="p">(</span><span class="kc">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">],</span> <span class="kc">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">],</span> <span class="kc">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">]))</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> “a” “b” “<span class="kt">c</span>” “d” “e”
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-idrefa"><a id="Ref">参考网址</a></h3>

<ul>
  <li>
    <p><a href="https://stat.ethz.ch/pipermail/r-help/attachments/20030506/ba1b4515/attachment.pl">R中的if/else</a></p>
  </li>
  <li>
    <p>建立长度为0的对象：<a href="http://cos.name/cn/topic/105751">1</a>, <a href="http://cran.r-project.org/doc/contrib/Genolini-S4tutorialV0-5en.pdf">2</a></p>
  </li>
  <li>
    <p>R中其他令人迷惑的地方：<a href="http://ygc.name/2012/07/10/tricky-things-in-r/">1</a>，<a href="http://cos.name/cn/topic/17000#post-17000">2</a></p>
  </li>
</ul>

<h3 id="section-4">更新记录</h3>

<p>2014年9月29日</p>
]]></content>
  </entry>
  
</feed>
